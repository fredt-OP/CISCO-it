<chapter type="" id="en0406000000">
<title><content-text>Network Services</content-text></title>
<section type="ChapterIntroduction" id="en0406000000">
<title><content-text>Chapter Introduction</content-text></title>
<topic type="" id="en0406000100">
<title><content-text>Introduction</content-text></title>
<page type="FullScreen" id="en0406000101">
<content-media type="AnimationFullScreen" id="cm6330138443"><title><content-text>Media Element</content-text></title><media ref="en0406000000/en0406000000/en0406000100/en0406000101/cm6330138443.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0406000000/en0406000000/en0406000100/en0406000101/cm6330138443text.xml"/></content-media>
<content-text></content-text>
</page>
</topic>
</section>
<section type="" id="en0406010000">
<title><content-text>Clients/Servers and Their Interaction</content-text></title>
<topic type="" id="en0406010100">
<title><content-text>Client Server Relationship</content-text></title>
<page type="OneColumn" id="en0406010101">
<content-media type="StaticGraphic" id="cm5226640885"><title><content-text></content-text></title><media ref="en0406000000/en0406010000/en0406010100/en0406010101/cm5226640885.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0406000000/en0406010000/en0406010100/en0406010101/cm5226640885text.xml"/></content-media>
<content-text><p>Every day, people use the services available over networks and the Internet to communicate with others and to perform routine tasks. We rarely think of the servers, clients and networking devices that are necessary in order for us to receive an email, enter information into a <content-link target="cg2885218831" type="glossary">blog</content-link>, or shop for the best bargains in an online store. Most of the commonly used Internet applications rely on complicated interactions between various different servers and clients.</p> <p>The term server refers to a host running a software application that provides information or services to other hosts connected to the network. A well-known example of an application is a web server. There are millions of servers connected to the Internet, providing services such as web sites, email, financial transactions, music downloads, etc. A factor that is crucial to enabling these complex interactions to function is that they all use agreed standards and protocols.</p></content-text>
</page>
<page type="OneColumn" id="en0406010102">
<content-media type="AnimationPartialScreen" id="cm6401241978"><title><content-text>Click Play to see the process and interaction between a web client and web server.</content-text></title><media ref="en0406000000/en0406010000/en0406010100/en0406010102/cm6401241978.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0406000000/en0406010000/en0406010100/en0406010102/cm6401241978text.xml"/></content-media>
<content-text><p>To request and view a web page, a person uses a device that is running web client software. A client is the name given to a computer application that someone uses to access information held on a server. A web browser is a good example of a client.</p></content-text>
</page>
<page type="OneColumn" id="en0406010103">
<content-media type="InteractiveGraphicRollovers" id="cm7200723923"><title><content-text>Rollover the different network servers for a brief description of the services they can provide for a client.</content-text></title><media ref="en0406000000/en0406010000/en0406010100/en0406010103/cm7200723923.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0406000000/en0406010000/en0406010100/en0406010103/cm7200723923text.xml"/></content-media>
<content-text><p>The key characteristic of client/server systems is that the client sends a request to a server, and the server responds by carrying out a function, such as sending information back to the client. The combination of a web browser and a web server is perhaps the most commonly used instance of a client/server system.</p></content-text>
</page>
<page type="FullScreen" id="en0406010104">
<content-media type="ActivityDnDSnapback" id="cm1697461644"><title><content-text></content-text></title><media ref="en0406000000/en0406010000/en0406010100/en0406010104/cm1697461644.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0406000000/en0406010000/en0406010100/en0406010104/cm1697461644text.xml"/></content-media>
<content-text><p><b>Activity</b> </p> <p>Match the service to the client's request.</p><p><b>Drag the appropriate server service to the client to satisfy the client request.</b></p></content-text>
</page>
</topic>
<topic type="" id="en0406010200">
<title><content-text>Role of Protocols in Client Server Communication</content-text></title>
<page type="OneColumn" id="en0406010201">
<content-media type="StaticGraphic" id="cm1488683902"><title><content-text></content-text></title><media ref="en0406000000/en0406010000/en0406010200/en0406010201/cm1488683902.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0406000000/en0406010000/en0406010200/en0406010201/cm1488683902text.xml"/></content-media>
<content-text><p>A web server and a web client use specific protocols and standards in the process of exchanging information to ensure that the messages are received and understood. These protocols cover: application, transport, Internetwork and network access protocols.</p> <p><b>Application Protocol</b></p> <p>Hypertext Transfer Protocol (<content-link target="cg4728331313" type="glossary">HTTP</content-link>) governs the way that a web server and a web client interact. HTTP defines the format of the requests and responses exchanged between the client and server. HTTP relies on other protocols to govern how the messages are transported between client and server.</p> <p><b>Transport Protocol</b></p> <p>Transmission Control Protocol (<content-link target="cg9602804038" type="glossary">TCP</content-link>) is the transport protocol that manages the individual conversations between web servers and web clients. TCP formats the HTTP messages into segments to be sent to the destination host. It also provides flow control and acknowledgement of packets exchanged between hosts. </p> <p><b>Internetwork Protocol</b></p> <p>The most common internetwork protocol is Internet Protocol (IP). IP is responsible for taking the formatted segments from TCP, assigning the logical addressing, and encapsulating them into packets for routing to the destination host.</p></content-text>
</page>
<page type="OneColumn" id="en0406010202">
<content-media type="StaticGraphic" id="cm8272060500"><title><content-text></content-text></title><media ref="en0406000000/en0406010000/en0406010200/en0406010202/cm8272060500.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0406000000/en0406010000/en0406010200/en0406010202/cm8272060500text.xml"/></content-media>
<content-text><p><b>Network Access Protocols</b></p> <p>Ethernet is the most commonly used protocol for local networks. Network access protocols perform two primary functions, data link management and physical network transmissions.</p> <p>Data link management protocols take the packets from IP and encapsulate them into the appropriate frame format for the local network. These protocols assign the physical addresses to the frames and prepare them to be transmitted over the network. </p> <p>The standards and protocols for the physical media govern how the bits are represented on the media, how the signals are sent over the media, and how they are interpreted by the receiving hosts. Network interface cards implement the appropriate protocols for the media that is being used.</p></content-text>
</page>
</topic>
<topic type="" id="en0406010300">
<title><content-text>TCP and UDP Transport Protocols</content-text></title>
<page type="OneColumn" id="en0406010301">
<content-media type="StaticGraphic" id="cm2815100279"><title><content-text></content-text></title><media ref="en0406000000/en0406010000/en0406010300/en0406010301/cm2815100279.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0406000000/en0406010000/en0406010300/en0406010301/cm2815100279text.xml"/></content-media>
<content-text><p>Each service available over the network has its own application protocols that are implemented in the server and client software. In addition to the application protocols, all of the common Internet services use Internet Protocol (IP), to address and route messages between source and destination hosts. </p> <p>IP is concerned only with the structure, addressing and routing of packets. IP does specify how the delivery or transportation of the packets takes place. Transport protocols specify how to transfer messages between hosts. The two most common transport protocols are Transmission Control Protocol (TCP) and User Datagram Protocol (UDP). The IP protocol uses these transport protocols to enable hosts to communicate and transfer data.</p></content-text>
</page>
<page type="OneColumn" id="en0406010302">
<content-media type="AnimationPartialScreen" id="cm4451867990"><title><content-text>Click Play to see TCP segments transmitted from sender to receiver.</content-text></title><media ref="en0406000000/en0406010000/en0406010300/en0406010302/cm4451867990.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0406000000/en0406010000/en0406010300/en0406010302/cm4451867990text.xml"/></content-media>
<content-text><p>When an application requires acknowledgment that a message is delivered, it uses TCP. This is similar to sending a registered letter through the postal system, where the recipient must sign for the letter to acknowledge its receipt. </p> <p>TCP breaks up a message into small pieces known as segments. The segments are numbered in sequence and passed to IP process for assembly into packets. TCP keeps track of the number of segments that have been sent to a specific host from a specific application. If the sender does not receive an acknowledgement within a certain period of time, it assumes that the segments were lost and retransmits them. Only the portion of the message that is lost is resent, not the entire message. </p> <p>On the receiving host, TCP is responsible for reassembling the message segments and passing them to the application.</p> <p><content-link target="cg7380323023" type="glossary">FTP</content-link> and HTTP are examples of applications that use TCP to ensure delivery of data.</p></content-text>
</page>
<page type="OneColumn" id="en0406010303">
<content-media type="StaticGraphic" id="cm2716069323"><title><content-text></content-text></title><media ref="en0406000000/en0406010000/en0406010300/en0406010303/cm2716069323.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0406000000/en0406010000/en0406010300/en0406010303/cm2716069323text.xml"/></content-media>
<content-text><p>In some cases, the TCP acknowledgment protocol is not required and actually slows down information transfer. In those cases, UDP may be a more appropriate transport protocol. </p> <p>UDP is a 'best effort' delivery system that does not require acknowledgment of receipt. This is similar to sending a standard letter through the postal system. It is not guaranteed that the letter is received, but the chances are good.</p> <p>UDP is preferable with applications such as streaming audio, video and voice over IP (<content-link target="cg1554572791" type="glossary">VoIP</content-link>). Acknowledgments would slow down delivery and retransmissions are undesirable. </p> <p>An example of an application that uses UDP is Internet radio. If some of the message is lost during its journey over the network, it is not retransmitted. If a few packets are missed, the listener might hear a slight break in the sound. If TCP were used and the lost packets were resent, the transmission would pause to receive them and the disruption would be more noticeable.</p></content-text>
</page>
<page type="FullScreen" id="en0406010304">
<content-media type="ActivityMCSACheckbox" id="cm8991215178"><title><content-text></content-text></title><media ref="en0406000000/en0406010000/en0406010300/en0406010304/cm8991215178.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0406000000/en0406010000/en0406010300/en0406010304/cm8991215178text.xml"/></content-media>
<content-text><p><b>Activity</b> </p> <p>Match the correct transport protocol to the characteristic described.</p><p><b>Drag the description to the correct transport protocol.</b></p></content-text>
</page>
</topic>
<topic type="" id="en0406010400">
<title><content-text>TCP/IP Port Numbers</content-text></title>
<page type="OneColumn" id="en0406010401">
<content-media type="StaticGraphic" id="cm2232442863"><title><content-text></content-text></title><media ref="en0406000000/en0406010000/en0406010400/en0406010401/cm2232442863.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0406000000/en0406010000/en0406010400/en0406010401/cm2232442863text.xml"/></content-media>
<content-text><p>When a message is delivered using either TCP or UDP, the protocols and services requested are identified by a port number. A port is a numeric identifier within each <content-link target="cg9991151314" type="glossary">segment</content-link> that is used to keep track of specific conversations and destination services requested. Every message that a host sends contains both a source and destination port.</p> <p><b>Destination Port</b></p> <p>The client places a destination port number in the segment to tell the destination server what service is being requested. For example, Port 80 refers to HTTP or web service. When a client specifies Port 80 in the destination port, the server that receives the message knows that web services are being requested. A server can offer more than one service simultaneously. For example, a server can offer web services on Port 80 at the same time that it offers FTP connection establishment on Port 21. </p> <p><b>Source Port</b></p> <p>The source port number is randomly generated by the sending device to identify a conversation between two devices. This allows multiple conversations to occur simultaneously. In other words, multiple devices can request HTTP service from a web server at the same time. The separate conversations are tracked based on the source ports. </p> <p>The source and destination ports are placed within the segment. The segments are then encapsulated within an IP packet. The IP packet contains the IP address of the source and destination. The combination of the source and destination IP address and the source and destination port number is known as a socket. The socket is used to identify the server and service being requested by the client. Every day thousands of hosts communicate with thousands of different servers. Those communications are identified by the sockets.</p></content-text>
</page>
</topic>
</section>
<section type="" id="en0406020000">
<title><content-text>Application Protocols and Services</content-text></title>
<topic type="" id="en0406020100">
<title><content-text>Domain Name Service (DNS)</content-text></title>
<page type="OneColumn" id="en0406020101">
<content-media type="StaticGraphic" id="cm6248516934"><title><content-text></content-text></title><media ref="en0406000000/en0406020000/en0406020100/en0406020101/cm6248516934.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0406000000/en0406020000/en0406020100/en0406020101/cm6248516934text.xml"/></content-media>
<content-text><p>Thousands of servers, installed in many different locations, provide the services we use daily over the Internet. Each of these servers is assigned a unique IP address that identifies it on the local network where it is connected.</p> <p>It would be impossible to remember all of the IP addresses for all of the servers hosting services on the Internet. Instead, there is an easier way to locate servers by associating a name with an IP address. </p> <p>The Domain Name System (<content-link target="cg6818400594" type="glossary">DNS</content-link>) provides a way for hosts to use this name to request the IP address of a specific server. DNS names are registered and organized on the Internet within specific high level groups, or domains. Some of the most common high level domains on the Internet are .com, .edu, and .net.</p></content-text>
</page>
<page type="OneColumn" id="en0406020102">
<content-media type="AnimationPartialScreen" id="cm5789482847"><title><content-text>Click Play to see the interaction between the DNS server and client.</content-text></title><media ref="en0406000000/en0406020000/en0406020100/en0406020102/cm5789482847.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0406000000/en0406020000/en0406020100/en0406020102/cm5789482847text.xml"/></content-media>
<content-text><p>A DNS server contains a table that associates hostnames in a domain with corresponding IP addresses. When a client has the name of server, such as a web server, but needs to find the IP address, it sends a request to the DNS server on port 53. The client uses the IP address of the DNS server configured in the DNS settings of the host's IP configuration. </p> <p>When the DNS server receives the request, it checks its table to determine the IP address associated with that web server. If the local DNS server does not have an entry for the requested name, it queries another DNS server within the domain. When the DNS server learns the IP address, that information is sent back to the client. If the DNS server cannot determine the IP address, the request will time out and the client will not be able to communicate with the web server. </p> <p>Client software works with the DNS protocol to obtain IP addresses in a way that is transparent to the user.</p></content-text>
</page>
<page type="OneColumn" id="en0406020103">
<content-media type="ActivityLab" id="cm3607042689"><title><content-text></content-text></title><media ref="en0406000000/en0406020000/en0406020100/en0406020103/cm3607042689/" mime="" scale="true" type="directory" width="800" height="450" external="en0406000000/en0406020000/en0406020100/en0406020103/cm3607042689/task.xml"/></content-media>
<content-text><p><b>Lab Activity</b> </p> <p>Use the <span class="cmd"><b>ping</b></span> command, a browser and <span class="cmd"><b><content-link target="cg1664692119" type="glossary">nslookup</content-link></b></span> to observe the relationship between domain names and IP addresses.</p><p><b>Click the lab icon to begin.</b></p></content-text>
</page>
</topic>
<topic type="" id="en0406020200">
<title><content-text>Web Clients and Servers</content-text></title>
<page type="OneColumn" id="en0406020201">
<content-media type="AnimationPartialScreen" id="cm4149533024"><title><content-text></content-text></title><media ref="en0406000000/en0406020000/en0406020200/en0406020201/cm4149533024.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0406000000/en0406020000/en0406020200/en0406020201/cm4149533024text.xml"/></content-media>
<content-text><p>When a web client receives the IP address of a web server, the client browser uses that IP address and port 80 to request web services. This request is sent to the server using the Hypertext Transfer Protocol (HTTP). </p> <p> </p> <p>When the server receives a port 80 request, the server responds to the client request and sends the web page to the client. The information content of a web page is encoded using specialized 'mark-up' languages. <content-link target="cg8815238792" type="glossary">HTML</content-link> (Hypertext Mark-up Language) is the most commonly used but others, such as XML and XHTML, are gaining popularity.</p> <p>The HTTP protocol is not a secure protocol; information could easily be intercepted by other users as it is sent over the network. In order to provide security for the data, HTTP can be used with secure transport protocols. Requests for secure HTTP are sent to port 443. These requests require the use of https: in the site address in the browser, rather than http:.</p> <p>There are many different web servers and web clients available on the market. The HTTP protocol and HTML make it possible for these servers and clients from many different manufactures to work together seamlessly.</p></content-text>
</page>
<page type="OneColumn" id="en0406020202">
<content-media type="ActivityPKA" id="cm9786581590"><title><content-text></content-text></title><media ref="en0406000000/en0406020000/en0406020200/en0406020202/cm9786581590/" mime="application/packettracer" scale="false" type="directory" width="0" height="0" external="en0406000000/en0406020000/en0406020200/en0406020202/cm9786581590/icontext.xml"/></content-media>
<content-text><p><b>Packet Tracer Activity</b> </p> <p>Observe traffic requests when a client browser requests web pages from a server.</p><p><b>Click the Packet Tracer icon to begin.</b></p></content-text>
</page>
</topic>
<topic type="" id="en0406020300">
<title><content-text>FTP Clients and Servers</content-text></title>
<page type="OneColumn" id="en0406020301">
<content-media type="StaticGraphic" id="cm8570077992"><title><content-text>Click Play to view downloading and uploading of a file from a FTP site.</content-text></title><media ref="en0406000000/en0406020000/en0406020300/en0406020301/cm8570077992.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0406000000/en0406020000/en0406020300/en0406020301/cm8570077992text.xml"/></content-media>
<content-text><p>In addition to web services, another common service used across the Internet is one that allows users to transfer files.</p> <p>The File Transfer Protocol (FTP) provides an easy method to transfer files from one computer to another. A host running FTP client software can access an FTP server to perform various file management functions including file uploads and downloads. </p> <p>The FTP server enables a client to exchange files between devices. It also enables clients to manage files remotely by sending file management commands such as delete or rename. To accomplish this, the FTP service uses two different ports to communicate between client and server. </p> <p>Requests to begin an FTP session are sent to the server using destination port 21. Once the session is opened, the server will change to port 20 to transfer the data files. </p> <p>FTP client software is built into computer operating systems and into most web browsers. Stand-alone FTP clients offer many options in an easy-to-use GUI-based interface.</p></content-text>
</page>
<page type="FullScreen" id="en0406020302">
<content-media type="Captivate" id="cm5753165886"><title><content-text></content-text></title><media ref="en0406000000/en0406020000/en0406020300/en0406020302/cm5753165886.swf" mime="application/pdf" scale="true" type="directory" width="0" height="0" external="en0406000000/en0406020000/en0406020300/en0406020302/cm5753165886text.xml"/></content-media>
<content-text></content-text>
</page>
<page type="OneColumn" id="en0406020303">
<content-media type="ActivityLab" id="cm4885099293"><title><content-text></content-text></title><media ref="en0406000000/en0406020000/en0406020300/en0406020303/cm4885099293/" mime="application/pdf" scale="false" type="directory" width="0" height="0" external="en0406000000/en0406020000/en0406020300/en0406020303/cm4885099293/icontext.xml"/></content-media>
<content-text><p><b>Lab Activity</b> </p> <p>Use a FTP client to transfer files from a FTP server.</p><p><b>Click the lab icon to begin.</b></p></content-text>
</page>
</topic>
<topic type="" id="en0406020400">
<title><content-text>Email Clients and Servers</content-text></title>
<page type="OneColumn" id="en0406020401">
<content-media type="StaticGraphic" id="cm1617480570"><title><content-text></content-text></title><media ref="en0406000000/en0406020000/en0406020400/en0406020401/cm1617480570.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0406000000/en0406020000/en0406020400/en0406020401/cm1617480570text.xml"/></content-media>
<content-text><p>Email is one of the most popular client/server applications on the Internet. Email servers run server software that enables them to interact with clients and with other email servers over the network. </p> <p>Each mail server receives and stores mail for users who have mailboxes configured on the mail server. Each user with a mailbox must then use an email client to access the mail server and read these messages. </p> <p>Mail servers are also used to send mail addressed to local mailboxes or mailboxes located on other email servers.</p> <p>Mailboxes are identified by the format:</p> <p><b>user@company.domain</b>.</p> <p>Various application protocols used in processing email include <content-link target="cg5543851194" type="glossary">SMTP</content-link>, <content-link target="cg9173647594" type="glossary">POP3</content-link>, IMAP4.</p></content-text>
</page>
<page type="OneColumn" id="en0406020402">
<content-media type="StaticGraphic" id="cm9499854251"><title><content-text></content-text></title><media ref="en0406000000/en0406020000/en0406020400/en0406020402/cm9499854251.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0406000000/en0406020000/en0406020400/en0406020402/cm9499854251text.xml"/></content-media>
<content-text><p><b>Simple Mail Transfer Protocol (SMTP) </b></p> <p>SMTP is used by an email client to send messages to its local email server. The local server then decides if the message is destined for a local mailbox or if the message is addressed to a mailbox on another server. </p> <p>If the server has to send the message to a different server, SMTP is used between the two servers as well. SMTP requests are sent to port 25.</p> <p><b><content-link target="cg4956848943" type="glossary">Post Office Protocol</content-link> (POP3)</b></p> <p>A server that supports POP clients receives and stores messages addressed to its users. When the client connects to the email server, the messages are downloaded to the client. By default, messages are not kept on the server after they have been accessed by the client. Clients contact POP3 servers on port 110.</p> <p><b>Internet Message Access Protocol (IMAP4) </b></p> <p>A server that supports IMAP clients also receives and stores messages addressed to its users. However, it keeps the messages in the mailboxes on the server, unless they are deleted by the user. The most current version of IMAP is IMAP4 which listens for client requests on port 143.</p> <p>Many different email servers exist for the various network operating system platforms.</p></content-text>
</page>
<page type="OneColumn" id="en0406020403">
<content-media type="StaticGraphic" id="cm8439103146"><title><content-text></content-text></title><media ref="en0406000000/en0406020000/en0406020400/en0406020403/cm8439103146.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0406000000/en0406020000/en0406020400/en0406020403/cm8439103146text.xml"/></content-media>
<content-text><p>An email client connects to the email server to download and view messages. Most email clients can be configured to use either POP3 or IMAP4 depending on the email server where the mailbox is located. Email clients must also be able to send email to the server using SMTP. </p> <p>Different email servers can be configured for incoming and outgoing mail. </p> <p>The following are typical entries when configuring an email client:</p> <p><ul><li> POP3 or IMAP4 Server name</li><li> SMTP Server name</li><li> Username </li><li> User password</li><li> SPAM and Virus filters</li></ul></p> <p>The graphic shows the basic setup of a POP3 and SMTP email account using <content-link target="cg4778577142" type="glossary">Microsoft Outlook</content-link>.</p></content-text>
</page>
<page type="OneColumn" id="en0406020404">
<content-media type="ActivityLab" id="cm6376417521"><title><content-text></content-text></title><media ref="en0406000000/en0406020000/en0406020400/en0406020404/cm6376417521/" mime="application/pdf" scale="false" type="directory" width="0" height="0" external="en0406000000/en0406020000/en0406020400/en0406020404/cm6376417521/icontext.xml"/></content-media>
<content-text><p><b>Lab Activity</b> </p> <p>Configure an email client to access an email server and send and receive email.</p><p><b>Click the lab icon to begin.</b></p></content-text>
</page>
</topic>
<topic type="" id="en0406020500">
<title><content-text>IM Clients and Servers</content-text></title>
<page type="OneColumn" id="en0406020501">
<content-media type="AnimationPartialScreen" id="cm6325556458"><title><content-text>Click Play to view two people using instant messaging to communicate.</content-text></title><media ref="en0406000000/en0406020000/en0406020500/en0406020501/cm6325556458.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0406000000/en0406020000/en0406020500/en0406020501/cm6325556458text.xml"/></content-media>
<content-text><p>Instant Messaging (IM) is one of the most popular communication tools in use today. IM software is run locally on each computer and allows users to communicate or chat over the Internet in real-time. Many different IM applications are available from various companies. Each instant messaging service can use a different protocol and destination port, so two hosts must have compatible IM software installed for them to communicate.</p> <p>IM applications require minimal configuration to operate. Once the client is downloaded all that is required is to enter username and password information. This allows the IM client to authenticate to the IM network. Once logged into the server, clients can send messages to other clients in real-time. In addition to text messages, IM supports the transfer of video, music and speech files. IM clients may have a telephony feature, which allows users to make phone calls over the Internet. Additional configuration can be done to customize the IM client with "Buddy Lists" and a personal look and feel.</p> <p>IM client software can be downloaded and used on all types of hosts, including: computers, PDAs and cell phones.</p></content-text>
</page>
</topic>
<topic type="" id="en0406020600">
<title><content-text>Voice Clients and Servers</content-text></title>
<page type="OneColumn" id="en0406020601">
<content-media type="StaticGraphic" id="cm8759616902"><title><content-text></content-text></title><media ref="en0406000000/en0406020000/en0406020600/en0406020601/cm8759616902.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0406000000/en0406020000/en0406020600/en0406020601/cm8759616902text.xml"/></content-media>
<content-text><p>Making telephone calls over the Internet is becoming increasingly popular. An Internet telephony client uses peer-to-peer technology similar to that used by instant messaging. IP telephony makes use of Voice over IP (VoIP) technology which uses IP packets to carry digitized voice as data.</p>  <p>To start using Internet telephone, download the client software from one of the companies that provides the service. Rates for Internet telephone services can vary greatly between regions and providers.</p> <p>When the software has been installed, the user selects a unique name. This is so that calls can be received from other users. Speakers and a microphone, built-in or separate, are required. A headset is frequently plugged into the computer to serve as a phone. </p> <p>Calls are made to other users of the same service on the Internet, by selecting the username from a list. A call to a regular telephone (land line or cell phone) requires the use of a gateway to access the Public Switched Telephone Network (<content-link target="cg7923804837" type="glossary">PSTN</content-link>). </p> <p>The protocols and destination ports used by Internet telephony applications can vary based on the software.</p></content-text>
</page>
</topic>
<topic type="" id="en0406020700">
<title><content-text>Port Numbers</content-text></title>
<page type="OneColumn" id="en0406020701">
<content-media type="StaticGraphic" id="cm6374116710"><title><content-text></content-text></title><media ref="en0406000000/en0406020000/en0406020700/en0406020701/cm6374116710.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0406000000/en0406020000/en0406020700/en0406020701/cm6374116710text.xml"/></content-media>
<content-text><p>DNS, Web, Email, FTP, IM and VoIP are just some of the many services provided by client/server systems over the Internet. These services may be provided by a single server or by several servers. </p> <p>In either case, it is necessary for a server to know which service is being requested by a client. Client requests can be identified because the request is made to a specific destination port. Clients are pre-configured to use a destination port that is registered on the Internet for each service. </p> <p>Ports are broken into three categories and range in number from 1 to 65,535. Ports are assigned and managed by an organization known as the Internet Corporation for Assigned Names and Numbers (ICANN).</p> <p> </p> <p><b>Well-Known Ports</b></p> <p>Destination ports that are associated with common network applications are identified as well-known ports. These ports are in the range of 1 to 1023. </p> <p><b>Registered Ports</b></p> <p>Ports 1024 through 49151 can be used as either source or destination ports. These can be used by organizations to register specific applications such as IM applications. </p> <p><b>Private Ports</b></p> <p>Ports 49152 through 65535, often used as source ports. These ports can be used by any application.</p> <p>The table shows some of the more common well-known ports. </p></content-text>
</page>
<page type="FullScreen" id="en0406020702">
<content-media type="ActivityCustom" id="cm2630035250"><title><content-text></content-text></title><media ref="en0406000000/en0406020000/en0406020700/en0406020702/cm2630035250.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0406000000/en0406020000/en0406020700/en0406020702/cm2630035250text.xml"/></content-media>
<content-text><p><b>Activity</b> </p> <p>Match the protocol name to the destination port number in the TCP segment.</p><p><b>Click the protocol button based on the destination port number in the TCP segment.</b></p></content-text>
</page>
</topic>
</section>
<section type="" id="en0406030000">
<title><content-text>Layered Model and Protocols</content-text></title>
<topic type="" id="en0406030100">
<title><content-text>Protocol Interaction</content-text></title>
<page type="OneColumn" id="en0406030101">
<content-media type="StaticGraphic" id="cm4384510246"><title><content-text></content-text></title><media ref="en0406000000/en0406030000/en0406030100/en0406030101/cm4384510246.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0406000000/en0406030000/en0406030100/en0406030101/cm4384510246text.xml"/></content-media>
<content-text><p>Successful communication between hosts requires interaction between a numbers of protocols. These protocols are implemented in software and hardware that is loaded on each host and network device.</p> <p>The interaction between protocols can be depicted as a protocol stack. It shows the protocols as a layered hierarchy, with each higher-level protocol depending on the services of the protocols shown in the lower levels. </p> <p>The graphic shows a protocol stack with the primary protocols necessary to run a web server over Ethernet. The lower layers of the stack are concerned with moving data over the network and providing services to the upper layers. The upper layers are focused more on the content of the message being sent and the user interface.</p></content-text>
</page>
<page type="OneColumn" id="en0406030102">
<content-media type="StaticGraphic" id="cm4543710811"><title><content-text></content-text></title><media ref="en0406000000/en0406030000/en0406030100/en0406030102/cm4543710811.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0406000000/en0406030000/en0406030100/en0406030102/cm4543710811text.xml"/></content-media>
<content-text><p>To visualize the interaction between various protocols, it is common use a layered model. A layered model depicts the operation of the protocols occurring within each layer, as well as the interaction with the layers above and below it.</p> <p>The layered model has many benefits:</p> <p><ul><li> Assists in protocol design, because protocols that operate at a specific layer have defined information that they act upon and a defined interface to the layers above and below. </li><li> Fosters competition because products from different vendors can work together. </li><li> Prevents technology or capability changes in one layer from affecting other layers above and below. </li><li> Provides a common language to describe networking functions and capabilities.</li></ul></p> <p>The first layered reference model for internetwork communications was created in the early 1970s and is referred to as the Internet model. It defines four categories of functions that must occur for communications to be successful. The architecture of the TCP/IP protocols follows the structure of this model. Because of this, the Internet model is commonly referred to as the <content-link target="cg8982619567" type="glossary">TCP/IP model</content-link>.</p></content-text>
</page>
</topic>
<topic type="" id="en0406030200">
<title><content-text>Protocol Operation of Sending and Receiving a Message</content-text></title>
<page type="OneColumn" id="en0406030201">
<content-media type="AnimationPartialScreen" id="cm4824190655"><title><content-text>Click Play to see the encapsulation process when sending a message to another host.</content-text></title><media ref="en0406000000/en0406030000/en0406030200/en0406030201/cm4824190655.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0406000000/en0406030000/en0406030200/en0406030201/cm4824190655text.xml"/></content-media>
<content-text><p>When sending messages on a network, the protocol stack on a host operates from top to bottom. In the web server example, a browser on the client requests a web page from a web server on destination port 80. This starts the process of sending the web page to the client.</p> <p>As the web page is sent down the web server protocol stack, the application data is broken into TCP segments. Each TCP segment is given a header containing a source and destination port.</p> <p>The TCP segment encapsulates HTTP protocol and web page HTML user data and sends it down to the next protocol layer, which is IP. Here the TCP segment is encapsulated within an IP packet, which adds an IP header. The IP header contains source and destination IP addresses. </p> <p>Next, the IP packet is sent to the Ethernet protocol where it is encapsulated in a frame header and <content-link target="cg3150855652" type="glossary">trailer</content-link>. Each Ethernet frame header contains a source and destination MAC address. The trailer contains error checking information. Finally the bits are encoded onto the Ethernet media (copper or fiber optic cable) by the server NIC.</p></content-text>
</page>
<page type="OneColumn" id="en0406030202">
<content-media type="AnimationPartialScreen" id="cm8888085713"><title><content-text>Click Play to see the de-encapsulation process when receiving a message from another host.</content-text></title><media ref="en0406000000/en0406030000/en0406030200/en0406030202/cm8888085713.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0406000000/en0406030000/en0406030200/en0406030202/cm8888085713text.xml"/></content-media>
<content-text><p>When messages are received from the network, the protocol stack on a host operates from bottom to top. Previously, we saw the process of encapsulation at each layer when the web server sent the web page to the client. The process of receiving the web page starts the de-encapsulation of the message by the client.</p> <p>As the bits are received by the Client NIC, they are decoded and the destination MAC address is recognized by the client as its own. </p> <p>The frame is sent up the web client protocol stack where the Ethernet header (source and destination MAC addresses) and trailer are removed (de-encapsulated). The remaining IP packet and contents are passed up to the IP layer.</p> <p>At the IP layer the IP header (source and destination IP addresses) is removed and the contents passed up to the TCP layer.</p> <p>At the TCP layer the TCP header (source and destination ports) is removed and the web page user data contents are passed up to the Browser application using HTTP. As TCP segments are received they are reassembled to create the web page.</p></content-text>
</page>
<page type="FullScreen" id="en0406030203">
<content-media type="ActivityDnDSnapback" id="cm3420627559"><title><content-text></content-text></title><media ref="en0406000000/en0406030000/en0406030200/en0406030203/cm3420627559.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0406000000/en0406030000/en0406030200/en0406030203/cm3420627559text.xml"/></content-media>
<content-text><p><b>Activity</b> </p> <p>Match the host, protocol and encapsulation terminology with the proper protocol or layer.</p><p><b>Drag the term on the right to the appropriate proper protocol or layer.</b></p></content-text>
</page>
</topic>
<topic type="" id="en0406030300">
<title><content-text>Open Systems Interconnect Model</content-text></title>
<page type="OneColumn" id="en0406030301">
<content-media type="InteractiveGraphicRollovers" id="cm1606983056"><title><content-text>Roll over each layer to see the functions that occur at the layer.</content-text></title><media ref="en0406000000/en0406030000/en0406030300/en0406030301/cm1606983056.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0406000000/en0406030000/en0406030300/en0406030301/cm1606983056text.xml"/></content-media>
<content-text><p>The Open Systems Interconnect Model was developed by the International Organization for Standardization (ISO) in 1984. Unlike the TCP/IP model, it does not specify the interaction of any specific protocols. It was created as architecture for developers to follow to design protocols for network communications. Although very few protocol stacks exactly implement the seven layers of the OSI model, it is now considered the primary reference model for inter-computer communications. </p> <p>The OSI model includes all functions, or tasks, associated with Inter-network communications, not just those related to the TCP/IP protocols. Compared to the TCP/IP model, which only has four layers, the OSI model organizes the tasks into seven more specific groups. A task, or group of tasks, is then assigned to each of the seven OSI layers.</p> <p>The essence of protocol stacks is the separation and organization of essential functions. The separation of functions enables each layer in the stack to operate independently of others. For example, it is feasible for a web site to be accessed from a laptop computer connected to a cable modem at home, or from a laptop using wireless, or a web-enabled mobile phone. The Application layer operates seamlessly, regardless of the way the lower layers are operating. </p> <p>In the same way, the lower layers operate seamlessly. For example, an Internet connection functions satisfactorily when a variety of applications are running at the same time, such as email, web browsing, IM, and music download.</p></content-text>
</page>
<page type="OneColumn" id="en0406030302">
<content-media type="StaticGraphic" id="cm6768827173"><title><content-text></content-text></title><media ref="en0406000000/en0406030000/en0406030300/en0406030302/cm6768827173.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0406000000/en0406030000/en0406030300/en0406030302/cm6768827173text.xml"/></content-media>
<content-text><p>The Packet Tracer (PT) program graphical interface allows viewing of simulated data being transmitted between two hosts. It uses Protocol Data Units (PDUs) to represent network traffic frames and displays protocol stack information at the appropriate layers of the OSI model.</p> <p>In the graphic, the request from the Web client is being received by the Ethernet NIC in the Web Server. The following information is shown in OSI layers 1 through 4.</p> <p><b>Layer 1 </b>(Physical): Fast Ethernet port</p> <p><b>Layer 2</b> (Data Link): Ethernet Mac addresses</p> <p><b>Layer 3</b> (Network): IP addresses</p> <p><b>Layer 4</b> (Transport): TCP port numbers</p></content-text>
</page>
<page type="FullScreen" id="en0406030303">
<content-media type="ActivityDnDCheckReset" id="cm6199054658"><title><content-text></content-text></title><media ref="en0406000000/en0406030000/en0406030300/en0406030303/cm6199054658.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0406000000/en0406030000/en0406030300/en0406030303/cm6199054658text.xml"/></content-media>
<content-text><p><b>Activity</b> </p> <p>Match the header address, protocol or term to the proper layer in the network model.</p><p><b>Drag the header address, protocol or term to the appropriate network model layer.</b></p></content-text>
</page>
<page type="FullScreen" id="en0406030304">
<content-media type="ActivityDnDCheckReset" id="cm4367229732"><title><content-text></content-text></title><media ref="en0406000000/en0406030000/en0406030300/en0406030304/cm4367229732.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0406000000/en0406030000/en0406030300/en0406030304/cm4367229732text.xml"/></content-media>
<content-text><p><b>Activity</b> </p> <p>Build an Ethernet frame with proper components and send it to its destination.</p><p><b>Drag the source and destination address information to the correct locations in the frame.</b></p></content-text>
</page>
<page type="OneColumn" id="en0406030305">
<content-media type="ActivityPKA" id="cm1415504767"><title><content-text></content-text></title><media ref="en0406000000/en0406030000/en0406030300/en0406030305/cm1415504767/" mime="application/packettracer" scale="false" type="directory" width="0" height="0" external="en0406000000/en0406030000/en0406030300/en0406030305/cm1415504767/icontext.xml"/></content-media>
<content-text><p><b>Packet Tracer Activity</b> </p> <p>Use Packet Tracer to view PDU information being sent between a client and server.</p><p><b>Click the Packet Tracer icon to begin.</b></p></content-text>
</page>
</topic>
</section>
<section type="ChapterSummary" id="en0406040000">
<title><content-text>Chapter Summary</content-text></title>
<topic type="" id="en0406040100">
<title><content-text>Summary</content-text></title>
<page type="FullScreen" id="en0406040101">
<content-media type="AnimationFullScreen" id="cm6873913064"><title><content-text></content-text></title><media ref="en0406000000/en0406040000/en0406040100/en0406040101/cm6873913064.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en0406000000/en0406040000/en0406040100/en0406040101/cm6873913064text.xml"/></content-media>
<content-text></content-text>
</page>
</topic>
</section>
<section type="ChapterQuiz" id="en0406050000">
<title><content-text>Chapter Quiz</content-text></title>
<topic type="" id="en0406050100">
<title><content-text>Quiz</content-text></title>
<page type="OneColumn" id="en0406050101">
<content-media type="ChapterQuiz" id="cm7762476471"><title><content-text></content-text></title><media ref="en0406000000/en0406050000/en0406050100/en0406050101/cm7762476471/" mime="" scale="true" type="directory" width="800" height="450" external="en0406000000/en0406050000/en0406050100/en0406050101/cm7762476471/task.xml"/></content-media>
<content-text><p>Take the chapter quiz to check your knowledge.</p><p><b>Click the quiz icon to begin.</b></p></content-text>
</page>
</topic>
</section>
</chapter>
