<transcript lastedited="01.09.09 12:01:35">
<title><content-text><![CDATA[7.4.1 - Follow Data Through an Internetwork]]></content-text></title>
<brief><content-text><![CDATA[The diagram depicts the steps involved in an HTTP request between a client and a server.<br>Network Topology: This example shows an HTTP request between a client and a server. The topology is the same as diagram 1 with the addition of the O S I model. The appropriate layer of the O S I model is highlighted, from top to bottom, as the request from the client to the server is processed. This process is explained further through a series of steps.<br><br>Step 1. A user on a LAN wants to access a web page stored on a server that is located on a remote network. The user starts by activating a link on a web page.<br>Step 2. The browser initiates an HTTP Get request. The Application Layer adds the Layer 7 header to identify the application and data type.<br>Step 3. The Transport Layer identifies the upper layer service as a World Wide Web (WWW) client. The Transport Layer then associates this service with TCP and assigns the port numbers. It uses a randomly selected source port that is associated with this established session (12345). The destination port (80) is associated with a WWW service.<br>Step 4. TCP also sends an acknowledgement number that tells the WWW server the sequence number of the next TCP segment that it expects to receive. The sequence number indicates where this segment is placed in the series of related segments. Flags are also set as appropriate to establish a session.<br>Step 5. At the Network Layer, an IP packet is constructed to identify the source and destination hosts. For the destination address, the client host uses the IP address associated with the WWW server host name that is cached in the host table. It uses its own IPv4 address as the source address. The Network Layer also identifies the upper layer protocol encapsulated in this packet as a TCP segment.<br>Step 6. The Data Link Layer refers to the Address Resolution Protocol (ARP) cache to determine the MAC address that is associated with the interface of router B, which is specified as the default gateway. It then uses this address to build an Ethernet frame to transport the IPv4 packet across the local media. The MAC address of the laptop is used as the source MAC address, and the MAC address of the FA0/0 interface of router B is used as the destination MAC address in the frame.<br>Step 7. The frame also indicates the upper layer protocol of IPv4 with a value of 0800 (hex) in the Type field. The frame begins with the Preamble and ends with a cyclic redundancy check (CRC) in the Frame Check Sequence at the end of the frame for the error detection. It then uses CSMA/CD to control the placing of the frame onto the media.<br>Step 8. The Physical Layer begins encoding the frame onto the media, bit by bit. The segment between router B and the source host is a 10 Base-T segment; therefore, the bits are encoded using the Manchester Differential encoding. Router B buffers the bits as they are received. <br>Step 9. Router B examines the bits in the preamble looking for the two consecutive 1 bits that indicate that the synching process is completed and the beginning of the frame. Router B then begins buffering the bits as part of the reconstructed frame. When the entire frame is received, Router B generates a CRC of the frame. It then compares this to the FCS at the end of the frame to determine that the frame was received intact. When the frame is confirmed as a good frame, the destination MAC address in the frame is compared to the MAC address of the interface (FA0/0). Because it matches, the headers are removed, and the packet is pushed up to the Network Layer.<br>Step 10. At the Network Layer, the destination IPv4 address of the packet is compared against the routes in the routing table. A match is found that is associated with the next-hop out interface S0/0/0. The packet inside router B is then passed to the circuitry for the S0/0/0 interface.<br>Step 11. Router B creates a PPP frame to transport the packet across the WAN. In the PPP header, a flag of 01111110 binary is added to indicate the start of the frame. Following that, an address field of 11111111 is added, which is equivalent to a broadcast (it means "send to all stations"). Because PPP is point-to-point and is used as a direct link between two nodes, this field has no real meaning.<br>Step 12. Also included is a Protocol field with a value of 0021 (hex) to indicate that an IPv4 packet is encapsulated. The frame trailer ends with a CRC in the FCS for error detection. A Flag value of 01111110 binary indicates the end of a PPP frame.<br>Step 13. With the circuit and PPP session already established between the routers, the Physical Layer begins encoding the frame onto the WAN media, bit by bit. The receiving router (router A) buffers the bits as they are received. This type of bit representation and encoding is dependent on the type of WAN technology being used.<br>Step 14. Router A examines the bits in the flag to identify the beginning of the frame. Router A then begins buffering the bits as part of the reconstructed frame. When the entire frame is received, as indicated by the flag in the trailer, router A generates a CRC of the frame. It then compares this to the FCS at the end of the frame to determine that the frame was received intact. When the frame is confirmed as a good frame, the headers are removed, and the packet is pushed up to the Network Layer of router A.<br>Step 15. At the Network Layer, the destination IPv4 address of the packet is compared against the routes in the routing table. A match is found that is directly connected to interface FA0/0. The packet inside router A is then passed to the circuitry for the FA0/0 interface.<br>Step 16. The Data Link Layer refers to the ARP cache of router A to determine the MAC address that is associated with the interface of the Web Server. It then uses this MAC address to build an Ethernet frame to transport the IPv4 packet across the local media to the server. The MAC address of the FA0/0 interface of router A is used as the source MAC address, and the MAC address of the server is used as the destination MAC address in the frame. The frame also indicates the upper layer protocol of IPv4 with a value of 0800 (hex) in the Type field. The frame begins with the Preamble and ends with a CRC in the FCS at the end of the frame for the error detection. It then uses CSMA/CD to control the placing of the frame onto the media.<br>Step 17. The Physical Layer begins encoding the frame onto the media, bit by bit. The segment between router A and the server is a 100 Base-T segment; therefore, the bits are encoded using 4B/5B encoding. The server buffers the bits as they are received. <br>Step 18. Router B examines the bits in the preamble, looking for the two consecutive 1 bits that indicate that the synching process is completed and the beginning of the frame. The server then begins buffering the bits as part of the reconstructed frame. When it has received the entire frame, the server generates a CRC of the frame. It then compares this to the FCS at the end of the frame to determine that the frame was received intact. <br>Step 19. When the frame is confirmed as a good frame, the destination MAC address in the frame is compared to the MAC address of the NIC in the server. Because it matches, the headers are removed and the packet is pushed up to the Network Layer.<br>Step 20. At the Network Layer, the destination IPv4 address of the packet is examined to identify the destination host. Because this address matches its own IPv4 address, the packet is processed by the server. The Network Layer identifies the upper layer protocol as TCP and directs the contained segment to the TCP service at the Transport Layer.<br>Step 21. At the Transport Layer of the server, the TCP segment is examined to determine the session to which the data contained in the segment belongs. This is done by examining the source and destination ports. The unique source and destination port identifies an existing session to the web server service. The sequence number is used to place this segment in the proper order to be sent upward to the Application Layer. <br>Step 22. At the Application Layer, the HTTP Get request is delivered to the Web Server service (httpd). The service can then formulate a response to the request.<br>]]></content-text></brief>
<full><content-text><![CDATA[FULL - NOT FOR PRODUCTION]]></content-text></full>
</transcript>
