<chapter type="" id="tl0603000000">
<title><content-text>Fonctionnalité et protocoles des couches applicatives</content-text></title>
<section type="ChapterIntroduction" id="tl0603000000">
<title><content-text>Présentation du chapitre</content-text></title>
<topic type="" id="tl0603000100">
<title><content-text>Présentation du chapitre</content-text></title>
<page type="OneColumn" id="tl0603000101">
<content-media type="StaticGraphic" id="cm2051715464"><title><content-text></content-text></title><media ref="tl0603000000/tl0603000000/tl0603000100/tl0603000101/cm2051715464.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="tl0603000000/tl0603000000/tl0603000100/tl0603000101/cm2051715464text.xml"/></content-media>
<content-text><p>La plupart d’entre nous utilisons Internet via le Web, les services de messagerie et les programmes de partage de fichiers. Ces applications, ainsi que de nombreuses autres, constituent l’interface humaine entre l’utilisateur et le réseau sous-jacent et nous permettent d’envoyer et de recevoir des informations avec une relative facilité. Les applications utilisées sont généralement intuitives, à savoir que l’utilisateur peut s’en servir sans savoir comment elles fonctionnent. Cependant, un professionnel des réseaux doit savoir dans quelle mesure une application est capable de formater, de transmettre et d’interpréter les messages envoyés et reçus via le réseau.</p> <p>Le modèle <content-link target="cg4290291613" type="glossary">Open System Interconnection (OSI)</content-link> permet de visualiser plus facilement les mécanismes sous-jacents de la communication via le réseau. Ce chapitre porte sur le rôle d’une couche, la couche application, et de ses composants : applications, services et protocoles. Nous examinerons comment ces trois éléments permettent une communication robuste via le réseau d’informations.</p> <p>Dans ce chapitre, vous allez apprendre à :</p> <ul><li> Décrire comment les fonctions des trois couches supérieures du modèle OSI fournissent des services de réseau aux applications destinées à l’utilisateur final</li> <li> Décrire comment les protocoles de la couche application TCP/IP fournissent les services spécifiés par les couches supérieures du modèle OSI</li> <li> Définir comment les utilisateurs se servent de la couche application pour communiquer via le réseau d’informations</li> <li> Décrire le fonctionnement d’applications TCP/IP très courantes, telles que le Web, le courriel et les services associés (HTTP, DNS, SMB, DHCP, SMTP/POP et Telnet)</li> <li> Décrire les processus de partage de fichiers qu’utilisent les applications Peer to peer et le protocole Gnutella</li> <li> Expliquer comment, grâce aux protocoles, les services exécutés sur un type de périphérique peuvent envoyer des données vers de nombreux périphériques réseau différents et recevoir des données de ces périphériques</li> <li> Utiliser les outils d’analyse réseau pour examiner et expliquer comment fonctionnent les applications utilisateur courantes</li></ul></content-text>
</page>
</topic>
</section>
<section type="" id="tl0603010000">
<title><content-text>Applications : l’interface entre les réseaux</content-text></title>
<topic type="" id="tl0603010100">
<title><content-text>Modèles OSI et TCP/IP</content-text></title>
<page type="OneColumn" id="tl0603010101">
<content-media type="InteractiveGraphicHotspots" id="cm2240918423"><title><content-text></content-text></title><media ref="tl0603000000/tl0603010000/tl0603010100/tl0603010101/cm2240918423.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="tl0603000000/tl0603010000/tl0603010100/tl0603010101/cm2240918423text.xml"/></content-media>
<content-text><p>Le modèle de référence OSI (Open Systems Interconnection) est une représentation abstraite en couches servant de guide à la conception des protocoles réseau. Il divise le processus de réseau en sept couches logiques, chacune comportant des fonctionnalités uniques et se voyant attribuer des services et des protocoles spécifiques. </p> <p>Dans ce modèle, les informations sont transmises d’une couche à l’autre, en commençant au niveau de la couche application sur l’hôte émetteur, puis en descendant dans la hiérarchie jusqu’à la couche physique, pour ensuite transiter sur le canal de communication vers l’hôte de destination, où les informations remontent la hiérarchie jusqu’à la couche application. La figure décrit les étapes impliquées dans ce processus.</p> <p>La couche application (couche 7) est la couche supérieure des modèles OSI et TCP/IP. Elle est la couche qui sert d’interface entre les applications que nous utilisons pour communiquer et le réseau sous-jacent via lequel nos messages sont transmis. Les protocoles de couche application sont utilisés pour échanger des données entre les programmes s’exécutant sur les hôtes source et de destination. Il existe de nombreux protocoles de couche application et de nouveaux protocoles sont constamment en cours de développement.</p></content-text>
</page>
<page type="OneColumn" id="tl0603010102">
<content-media type="StaticGraphic" id="cm2880338922"><title><content-text></content-text></title><media ref="tl0603000000/tl0603010000/tl0603010100/tl0603010102/cm2880338922.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="tl0603000000/tl0603010000/tl0603010100/tl0603010102/cm2880338922text.xml"/></content-media>
<content-text><p>Bien que la suite de protocoles TCP/IP ait été développée avant la définition du modèle OSI, les fonctionnalités des protocoles de couche application TCP/IP s’intègrent à la structure des trois couches supérieures du modèle OSI : les couches application, présentation et session.</p> <p>La plupart des protocoles de couche application TCP/IP ont été développés avant l’émergence des ordinateurs personnels, des interfaces graphiques et des objets multimédias. Il en résulte que ces protocoles mettent en oeuvre très peu des fonctionnalités spécifiées dans les couches présentation et session du modèle OSI.</p> <p><b>Couche présentation</b></p> <p>La couche présentation remplit trois fonctions principales :</p> <ul><li> codage et conversion des données de la couche application afin que les données issues du <content-link target="cg1321412129" type="glossary">périphérique source</content-link> puissent être interprétées par l’application appropriée sur le périphérique de destination ;</li> <li> compression des données de sorte que celles-ci puissent être décompressées par le périphérique de destination ;</li> <li> chiffrement des données en vue de leur transmission et déchiffrement des données reçues par le périphérique de destination.</li></ul> <p> </p> <p>Les implémentations de la couche présentation ne sont généralement pas associées à une pile de protocoles particulière. Les normes utilisées pour la vidéo et les graphiques sont des exemples. QuickTime et MPEG (Motion Picture Experts Group) comptent parmi les normes de vidéo les plus courantes. QuickTime est une spécification informatique d’Apple destinée aux données vidéo et audio et MPEG est une norme de compression et de codage vidéo. </p> <p>Parmi les formats d’image graphique connus figurent les formats GIF (Graphics Interchange Format), JPEG (Joint Photographic Experts Group) et TIFF (Tagged Image File Format). Les formats GIF et JPEG sont des formats de compression et de codage destinés aux images graphiques et le format TIFF un format de codage standard également destiné aux images graphiques. </p> <p><b>Couche session</b></p> <p>Comme l’implique le nom de la couche session, les fonctions s’exécutant au niveau de cette couche permettent un dialogue entre les applications source et de destination. La couche session traite l’échange des informations pour initier et maintenir un dialogue et pour redémarrer les sessions interrompues ou inactives pendant une longue période. </p> <p>La plupart des applications (par exemple, les navigateurs Web et les clients de messagerie) intègrent les fonctionnalités des couches 5, 6 et 7 du modèle OSI.</p></content-text>
</page>
<page type="OneColumn" id="tl0603010103">
<content-media type="StaticGraphic" id="cm8607723802"><title><content-text></content-text></title><media ref="tl0603000000/tl0603010000/tl0603010100/tl0603010103/cm8607723802.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="tl0603000000/tl0603010000/tl0603010100/tl0603010103/cm8607723802text.xml"/></content-media>
<content-text><p>Les protocoles de couche application TCP/IP les plus connus sont ceux permettant l’échange d’informations entre les utilisateurs. Ces protocoles spécifient les informations de format et de contrôle nécessaires à un grand nombre de fonctions courantes de communication via Internet. Voici certains de ces protocoles TCP/IP :</p> <ul><li> Le protocole DNS (Domain Name Service) est utilisé pour traduire les adresses Internet en adresses IP.</li> <li> Le protocole HTTP (Hypertext Transfer Protocol) est utilisé pour transférer les fichiers qui constituent les pages du Web.</li> <li> Le  <content-link target="cg2178716928" type="glossary">protocole SMTP</content-link> (Simple Mail Transfer Protocol) est utilisé pour transférer les courriels et les pièces jointes.</li> <li> Le protocole Telnet, protocole d’émulation de terminal, est utilisé pour permettre un accès distant aux serveurs et aux périphériques réseau.</li> <li> Le protocole FTP (File Transfer Protocol) est utilisé pour le transfert interactif de fichiers entre les systèmes.</li></ul> <p>Les protocoles de la suite TCP/IP sont généralement définis par des documents RFC. L’IETF (Internet Engineering Task Force) conserve les documents RFC comme normes de la suite TCP/IP.</p></content-text>
</page>
</topic>
<topic type="" id="tl0603010200">
<title><content-text>Logiciels de la couche application</content-text></title>
<page type="OneColumn" id="tl0603010201">
<content-media type="InteractiveGraphicRollovers" id="cm9807810457"><title><content-text></content-text></title><media ref="tl0603000000/tl0603010000/tl0603010200/tl0603010201/cm9807810457.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="tl0603000000/tl0603010000/tl0603010200/tl0603010201/cm9807810457text.xml"/></content-media>
<content-text><p>Les fonctions associées aux protocoles de couche application permettent au réseau des utilisateurs de faire office d’interface avec le réseau de données sous-jacent. Lorsque l’utilisateur ouvre un navigateur Web ou une fenêtre de messagerie instantanée, une application est lancée et le programme est placé dans la mémoire du périphérique, où il est exécuté. Chaque programme en cours d’exécution chargé sur un périphérique est nommé processus. </p> <p>La couche application comprend deux formes de programmes ou processus logiciels permettant d’accéder au réseau : les applications et les services. </p> <p><b>Applications orientées réseau</b></p> <p>Les applications sont les programmes logiciels qui permettent aux utilisateurs de communiquer sur le réseau. Certaines applications destinées à l’utilisateur final sont orientées réseau, à savoir qu’elles implémentent les protocoles de couche application et sont capables de communiquer directement avec les couches inférieures de la pile de protocoles. Les clients de messagerie et les navigateurs Web sont des exemples de ces types d’applications. </p> <p><b>Services de couche application</b></p> <p>D’autres programmes peuvent nécessiter l’assistance des services de couche application (par exemple, le transfert de fichiers ou la mise en file d’attente de tâches d’impression réseau). Bien que transparents pour l’utilisateur, ces services constituent les programmes qui établissent l’interface avec le réseau et préparent les données à transférer. Différents types de données (texte, graphique ou vidéo) nécessitent différents services réseau pour être correctement préparés afin d’être traités par les fonctions s’exécutant au niveau des couches inférieures du modèle OSI. </p> <p>Chaque application ou service réseau utilise des protocoles qui définissent les normes et les formats de données à utiliser. Sans protocoles, le réseau de données ne disposerait d’aucune méthode commune pour formater et transmettre les données. Pour comprendre le fonctionnement des divers services réseau, il est nécessaire de connaître les protocoles sous-jacents qui régissent ces services.</p> <p><b>Placez le curseur de la souris sur les boutons de la figure pour visualiser les exemples.</b></p></content-text>
</page>
</topic>
<topic type="" id="tl0603010300">
<title><content-text>Applications utilisateur, services et protocoles de couche application</content-text></title>
<page type="OneColumn" id="tl0603010301">
<content-media type="AnimationPartialScreen" id="cm9515498309"><title><content-text></content-text></title><media ref="tl0603000000/tl0603010000/tl0603010300/tl0603010301/cm9515498309.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="tl0603000000/tl0603010000/tl0603010300/tl0603010301/cm9515498309text.xml"/></content-media>
<content-text><p>Comme mentionné précédemment, la couche application utilise des protocoles implémentés au sein d’applications et de services. Alors que les applications permettent aux utilisateurs de créer des messages et que les services de couche application établissent une interface avec le réseau, les protocoles fournissent les règles et les formats qui régissent la manière dont les données sont traitées. Ces trois composants peuvent être utilisés par le même programme exécutable et peuvent même porter le même nom. Par exemple, « Telnet » peut faire référence à l’application, au service ou au protocole.</p> <p>Dans le modèle OSI, les applications qui interagissent directement avec les utilisateurs sont considérées comme étant au sommet de la pile, tout comme le sont les utilisateurs. De même que toutes les couches au sein du modèle OSI, la couche application fait appel aux fonctions des couches inférieures pour terminer le processus de communication. Au sein de la couche application, les protocoles indiquent quels messages sont échangés entre les hôtes source et de destination, la <content-link target="cg8849639668" type="glossary">syntaxe</content-link> des commandes de contrôle, le type et le format des données transmises et les méthodes appropriées de notification et de correction des erreurs. </p><p><b>Lancez l’animation pour voir l’interaction existant entre les applications, les services et les protocoles.</b></p></content-text>
</page>
</topic>
<topic type="" id="tl0603010400">
<title><content-text>Fonctions du protocole de couche application</content-text></title>
<page type="OneColumn" id="tl0603010401">
<content-media type="StaticGraphic" id="cm3951777757"><title><content-text></content-text></title><media ref="tl0603000000/tl0603010000/tl0603010400/tl0603010401/cm3951777757.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="tl0603000000/tl0603010000/tl0603010400/tl0603010401/cm3951777757text.xml"/></content-media>
<content-text><p>Les protocoles de couche application sont utilisés par les périphériques source et de destination pendant une <content-link target="cg5427535241" type="glossary">session</content-link> de communication. Pour que les communications aboutissent, les protocoles de couche application implémentés sur les hôtes source et de destination doivent correspondre.</p> <p>Les protocoles établissent des règles cohérentes pour échanger des données entre les applications et les services chargés sur les périphériques concernés. Ils indiquent la manière dont les données figurant dans les messages sont structurées et le type des messages envoyés entre les hôtes source et de destination. Ces messages peuvent être des requêtes de services, des accusés de réception, des messages de données, des messages d’état ou des messages d’erreur. Les protocoles définissent également les dialogues au niveau des messages et assurent qu’un message envoyé reçoit la réponse prévue et que les services appropriés sont invoqués lorsque se produit un transfert de données. </p> <p>De nombreux types d’applications communiquent via les réseaux de données. Pour cette raison, les services de couche application doivent implémenter plusieurs protocoles pour fournir le niveau de communication voulu. Chaque protocole a un objectif spécifique et comporte les caractéristiques nécessaires pour atteindre cet objectif. Les détails de protocole appropriés de chaque couche doivent être observés, de sorte que les fonctions au niveau d’une couche établissent correctement l’interface avec les services au niveau de la couche inférieure. </p> <p>Les applications et les services peuvent également utiliser plusieurs protocoles au cours d’une même conversation. Un protocole peut indiquer comment établir la connexion réseau et un autre protocole décrire le processus de transfert de données lorsque le message est transmis à la couche inférieure suivante.</p></content-text>
</page>
</topic>
</section>
<section type="" id="tl0603020000">
<title><content-text>Utilisation des applications et des services</content-text></title>
<topic type="" id="tl0603020100">
<title><content-text>Modèle client-serveur</content-text></title>
<page type="OneColumn" id="tl0603020101">
<content-media type="InteractiveGraphicHotspots" id="cm4067501249"><title><content-text></content-text></title><media ref="tl0603000000/tl0603020000/tl0603020100/tl0603020101/cm4067501249.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="tl0603000000/tl0603020000/tl0603020100/tl0603020101/cm4067501249text.xml"/></content-media>
<content-text><p>Lorsque l’utilisateur tente d’accéder aux informations situées sur son périphérique, qu’il s’agisse d’un PC, d’un ordinateur portable, d’un assistant numérique personnel, d’un téléphone portable ou autre périphérique connecté au réseau, les données peuvent ne pas être stockées sur ce périphérique. Dans ce cas, une requête d’accès aux informations doit être adressée au niveau du périphérique sur lequel résident les données. </p> <p><b>Modèle client/serveur</b></p> <p>Dans le <content-link target="cg1890470944" type="glossary">modèle client/serveur</content-link>, le périphérique qui demande les informations est nommé client et celui qui répond à la requête est nommé serveur. Les processus client et serveur sont considérés comme faisant partie de la couche application. Le client commence l’échange en demandant des données au serveur, qui répond en envoyant un ou plusieurs flux de données au client. Les protocoles de couche application décrivent le format des requêtes et des réponses entre clients et serveurs. Outre le transfert de données effectif, cet échange peut également nécessiter des informations de contrôle, telles que l’authentification de l’utilisateur et l’identification d’un fichier de données à transférer. </p> <p>Comme exemple de réseau client/serveur, citons un environnement d’entreprise dans lequel les employés utilisent un serveur de messagerie d’entreprise pour envoyer, recevoir et stocker leur courriel. Le client de messagerie situé sur l’ordinateur d’un employé envoie une demande au serveur de messagerie pour tout courriel non lu. Le serveur répond en envoyant le courriel requis au client.</p> <p>Bien que les données soient généralement décrites comme étant transmises du serveur au client, certaines données sont toujours transmises du client au serveur. Le flux de données peut être égal dans les deux sens ou même plus important dans le sens client vers serveur. Par exemple, un client peut transférer un fichier vers le serveur à des fins de stockage. <b>Le transfert de données d’un client vers un serveur est désigné par le terme téléchargement montant (action de <content-link target="cg1186154668" type="glossary">télécharger (upload)</content-link>). Le transfert de données d’un serveur vers un client est désigné par le terme téléchargement descendant.</b></p><p><b>Placez le curseur de la souris sur les boutons de la figure pour visualiser le transfert de fichiers.</b></p></content-text>
</page>
</topic>
<topic type="" id="tl0603020200">
<title><content-text>Serveurs</content-text></title>
<page type="OneColumn" id="tl0603020201">
<content-media type="StaticGraphic" id="cm8592549807"><title><content-text></content-text></title><media ref="tl0603000000/tl0603020000/tl0603020200/tl0603020201/cm8592549807.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="tl0603000000/tl0603020000/tl0603020200/tl0603020201/cm8592549807text.xml"/></content-media>
<content-text><p><b>Dans un contexte général de réseau, un périphérique qui répond à des requêtes émanant d’applications clientes opère en tant que serveur. </b>Un serveur est généralement un ordinateur qui contient des informations à partager avec de nombreux systèmes clients. Par exemple, les pages Web, les documents, les bases de données, les images, les fichiers vidéo et les fichiers audio peuvent tous être stockés sur un serveur et transmis à des clients demandeurs. Dans d’autres cas (par exemple, une imprimante réseau), le serveur d’impression transmet les demandes d’impression clientes à l’imprimante spécifiée.</p> <p>Différents types d’applications serveur peuvent avoir différents besoins en matière d’accès du client. Certains serveurs peuvent nécessiter l’authentification des informations du compte utilisateur pour vérifier que l’utilisateur est autorisé à accéder aux données requises ou à effectuer une opération spécifique. Ces serveurs font appel à une liste centrale des comptes utilisateur et des autorisations (d’accès aux données et d’exécution d’opérations) sont accordées à chaque utilisateur. Lorsque vous utilisez un client FTP, par exemple, si vous demandez à télécharger des données vers le serveur FTP, vous pouvez être autorisé à écrire des données dans votre dossier personnel mais pas à lire d’autres fichiers situés sur le site.</p> <p>Dans un réseau client/serveur, le serveur exécute un service, ou processus, parfois nommé <content-link target="cg6703303825" type="glossary">démon</content-link> de serveur. Comme la plupart des services, les démons s’exécutent généralement en tâche de fond et ne sont pas sous le contrôle direct de l’utilisateur final. Les démons sont décrits comme « étant à l’écoute » d’une requête de la part d’un client car ils sont programmés pour répondre chaque fois que le serveur reçoit une requête pour le service fourni par le démon. Lorsqu’un démon « entend » une requête d’un client, il échange les messages appropriés avec le client, comme requis par son protocole, puis envoie les données requises au client dans le format approprié.</p></content-text>
</page>
</topic>
<topic type="" id="tl0603020300">
<title><content-text>Services et protocoles de la couche application</content-text></title>
<page type="OneColumn" id="tl0603020301">
<content-media type="StaticGraphic" id="cm3063071935"><title><content-text></content-text></title><media ref="tl0603000000/tl0603020000/tl0603020300/tl0603020301/cm3063071935.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="tl0603000000/tl0603020000/tl0603020300/tl0603020301/cm3063071935text.xml"/></content-media>
<content-text><p>Une même application peut s’appuyer sur de nombreux services de couche application différents. Pour cette raison, ce que l’utilisateur perçoit comme constituant une requête pour une page Web peut en fait se chiffrer à des dizaines de requêtes individuelles. Et pour chaque requête, plusieurs processus peuvent être exécutés. Par exemple, un client peut nécessiter plusieurs processus individuels pour formuler une seule requête à un serveur. </p> <p>En outre, les serveurs comportent généralement plusieurs clients demandant des informations en même temps. Par exemple, un serveur <b>Telnet</b> peut comporter de nombreux clients demandant à se connecter à ce serveur. Ces requêtes de client individuelles doivent être traitées simultanément et séparément pour que le réseau fonctionne correctement. Les processus et les services de la couche application sont assistés par les fonctions des couches inférieures pour gérer correctement les conversations multiples.</p></content-text>
</page>
<page type="OneColumn" id="tl0603020302">
<content-media type="ActivityPKA" id="cm8823765993"><title><content-text></content-text></title><media ref="tl0603000000/tl0603020000/tl0603020300/tl0603020302/cm8823765993/" mime="application/packettracer" scale="true" type="directory" width="0" height="0" external="tl0603000000/tl0603020000/tl0603020300/tl0603020302/cm8823765993/icontext.xml"/></content-media>
<content-text><p>Dans cet exercice, nous allons examiner un exemple simple d’interaction client-serveur, qui pourra servir de modèle à des interactions plus complexes ultérieurement dans ce cours. </p><p><b>Cliquez sur l’icône Packet Tracer pour plus de détails.</b></p></content-text>
</page>
</topic>
<topic type="" id="tl0603020400">
<title><content-text>Réseau et applications Peer to peer (P2P)</content-text></title>
<page type="OneColumn" id="tl0603020401">
<content-media type="StaticGraphic" id="cm1318549008"><title><content-text></content-text></title><media ref="tl0603000000/tl0603020000/tl0603020400/tl0603020401/cm1318549008.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="tl0603000000/tl0603020000/tl0603020400/tl0603020401/cm1318549008text.xml"/></content-media>
<content-text><p><b>Modèle Peer to peer</b></p> <p>Outre le modèle de réseau client/serveur, il existe également un modèle Peer to peer. Le réseau Peer to peer implique deux formes différentes : la conception de réseau Peer to peer et les applications Peer to peer (P2P). Les deux formes comportent des caractéristiques similaires mais, dans les faits, fonctionnent très différemment.</p> <p><b>Réseaux Peer to peer</b></p> <p>Dans un réseau Peer to peer, au minimum deux ordinateurs sont connectés via un réseau et peuvent partager des ressources (par exemple, des imprimantes et des fichiers) sans disposer de serveur dédié. Chaque périphérique final connecté (nommé homologue) peut opérer en tant que serveur ou en tant que client. Un ordinateur peut remplir le rôle de serveur pour une transaction tout en servant simultanément de client pour un autre ordinateur. Les rôles de client et de serveur sont définis en fonction de chaque requête.</p> <p>Par exemple, un réseau domestique simple connectant deux ordinateurs qui partagent une imprimante est un réseau Peer to peer. Chaque utilisateur peut configurer son ordinateur pour partager des fichiers, exécuter des jeux en réseau ou partager une connexion Internet. Autre exemple de réseau Peer to peer : deux ordinateurs connectés à un grand réseau et utilisant des applications logicielles pour partager des ressources via le réseau.</p> <p>Contrairement au modèle client/serveur, qui utilise des serveurs dédiés, les réseaux Peer to peer décentralisent les ressources sur un réseau. Au lieu d’être stockées sur des serveurs dédiés, les informations à partager peuvent se situer n’importe où sur un périphérique connecté. La plupart des systèmes d’exploitation actuels prennent en charge le partage des fichiers et des imprimantes sans nécessiter un logiciel serveur supplémentaire. Les réseaux Peer to peer n’utilisant généralement pas de comptes utilisateur, d’autorisations ou de moniteurs centralisés, il est difficile d’appliquer les règles de sécurité et d’accès aux réseaux comportant plus de quelques ordinateurs. Les comptes et les droits d’accès utilisateur doivent être définis individuellement sur chaque périphérique homologue.</p></content-text>
</page>
<page type="OneColumn" id="tl0603020402">
<content-media type="StaticGraphic" id="cm7124535413"><title><content-text></content-text></title><media ref="tl0603000000/tl0603020000/tl0603020400/tl0603020402/cm7124535413.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="tl0603000000/tl0603020000/tl0603020400/tl0603020402/cm7124535413text.xml"/></content-media>
<content-text><p><b>Applications Peer to peer</b></p> <p>Une application Peer to peer (P2P), contrairement à un réseau Peer to peer, permet à un périphérique d’opérer à la fois comme client et comme serveur au sein d’une même communication. Dans ce modèle, chaque client est un serveur et chaque serveur un client. Les deux peuvent lancer une communication et sont considérés comme égaux dans le processus de communication. Cependant, les applications Peer to peer nécessitent que chaque périphérique final fournisse une interface utilisateur et exécute un service en tâche de fond. Lorsque vous lancez une application Peer to peer spécifique, elle invoque l’interface utilisateur et les services en tâche de fond requis. Les périphériques peuvent ensuite communiquer directement.</p> <p>Certaines applications Peer to peer utilisent un système hybride dans lequel le partage des ressources est décentralisé mais les index pointant vers l’emplacement des ressources sont stockés dans un répertoire centralisé. Dans un système hybride, chaque homologue accède à un serveur d’index pour obtenir l’emplacement d’une ressource stockée chez un autre homologue. Le serveur d’index permet également de connecter deux homologues, mais une fois ceux-ci connectés, la communication s’effectue entre les deux homologues sans autre communication vers le serveur d’index.</p> <p>Les applications Peer to peer peuvent être utilisées sur des réseaux Peer to peer, des réseaux client/serveur et via Internet. </p></content-text>
</page>
</topic>
</section>
<section type="" id="tl0603030000">
<title><content-text>Exemples de services et de protocoles de la couche application</content-text></title>
<topic type="" id="tl0603030100">
<title><content-text>Services et protocoles DNS</content-text></title>
<page type="OneColumn" id="tl0603030101">
<content-media type="InteractiveGraphicHotspots" id="cm6029139440"><title><content-text></content-text></title><media ref="tl0603000000/tl0603030000/tl0603030100/tl0603030101/cm6029139440.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="tl0603000000/tl0603030000/tl0603030100/tl0603030101/cm6029139440text.xml"/></content-media>
<content-text><p>À présent que nous savons mieux comment les applications fournissent une interface à l’utilisateur et permettent d’accéder au réseau, nous allons examiner certains protocoles spécifiques courants.</p> <p>Comme nous allons le voir par la suite dans ce cours, la couche transport utilise un <content-link target="cg6066491297" type="glossary">modèle</content-link> d’adressage nommé numéro de port. Les numéros de port identifient les applications et les services de la couche application qui constituent la source et la destination des données. Les programmes serveur utilisent généralement des numéros de port prédéfinis connus des clients. En examinant les différents protocoles et services de couche application TCP/IP, nous nous référerons aux numéros de port TCP et UDP normalement associés à ces services. Certains de ces services sont les suivants :</p> <ul><li> <content-link target="cg1361646898" type="glossary">Système de noms de domaine (DNS)</content-link> - Port TCP/UDP 53 ;</li> <li> HTTP (Hypertext Transfer Protocol) - Port TCP 80 ;</li> <li> SMTP (Simple Mail Transfer Protocol) - Port TCP 25 ;</li> <li> <content-link target="cg3497319029" type="glossary">POP (Post Office Protocol)</content-link> - Port TCP 110 ;</li> <li> Telnet - Port TCP 23 ;</li> <li> DHCP (Dynamic Host Configuration Protocol) - Ports UDP 67 et 68 ;</li> <li> FTP (File Transfer Protocol) - Ports TCP 20 et 21.</li></ul> <p><b>DNS</b></p> <p>Sur les réseaux de données, les périphériques sont étiquetés par des adresses IP numériques, ce qui leur permet de participer à l’envoi et à la réception de messages via le réseau. Cependant, la plupart des utilisateurs mémorisent très difficilement ces adresses numériques. Pour cette raison, des noms de domaine ont été créés pour convertir les adresses numériques en noms simples et explicites.</p> <p>Sur Internet, ces noms de domaine (par exemple, www.cisco.com) sont beaucoup plus faciles à mémoriser que leurs équivalents numériques (par exemple, 198.133.219.25, l’adresse numérique du serveur de Cisco). De plus, si Cisco décide de changer d’adresse numérique, ce changement est transparent pour l’utilisateur car le nom de domaine demeure www.cisco.com. La nouvelle adresse est simplement liée au nom de domaine existant et la connectivité est maintenue. Lorsque les réseaux étaient de petite taille, il était simple de maintenir le mappage entre les noms de domaine et les adresses qu’ils représentaient. Cependant, les réseaux étant aujourd’hui de plus grande taille et le nombre de périphériques plus élevé, ce système manuel ne fonctionne plus. </p> <p>Le protocole DNS (Domain Name System) a été créé afin de permettre la résolution des adresses pour ces réseaux. Le protocole DNS utilise un ensemble distribué de serveurs pour convertir les noms associés à ces adresses en numéros. </p> <p>Le <b>protocole DNS</b> définit un service automatisé qui associe les noms des ressources à l’<content-link target="cg2139046110" type="glossary">adresse réseau</content-link> numérique requise. Il comprend le format des demandes et des réponses ainsi que des formats de données. Les communications via le protocole DNS utilisent un format unique nommé message. Ce format de message est utilisé pour tous les types de demandes clientes et de réponses serveur, pour les messages d’erreur et pour le transfert des informations d’<content-link target="cg6452743771" type="glossary">enregistrement de ressource</content-link> entre les serveurs.</p></content-text>
</page>
<page type="OneColumn" id="tl0603030102">
<content-media type="StaticGraphic" id="cm5056320378"><title><content-text></content-text></title><media ref="tl0603000000/tl0603030000/tl0603030100/tl0603030102/cm5056320378.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="tl0603000000/tl0603030000/tl0603030100/tl0603030102/cm5056320378text.xml"/></content-media>
<content-text><p>Le protocole DNS est un service client/serveur. Cependant, il diffère des autres services client/serveur examinés dans ce cours. Les autres services utilisent un client qui constitue une application (par exemple, un navigateur Web ou un client de messagerie) tandis que le client DNS s’exécute en tant que service lui-même. Le client DNS, parfois nommé <content-link target="cg4962548981" type="glossary">résolveur DNS</content-link>, prend en charge la résolution de noms pour nos autres applications réseau et pour les autres services qui en ont besoin. </p> <p>Lors de la configuration d’un périphérique réseau, au minimum une adresse de <b>serveur DNS</b> est fournie et est utilisable par le client DNS pour la résolution de noms. Le fournisseur de services Internet fournit généralement les adresses à utiliser pour les serveurs DNS. Lorsque l’application d’un utilisateur demande à se connecter à un périphérique distant à l’aide d’un nom, le client DNS demandeur interroge l’un de ces serveurs de noms pour convertir le nom en une adresse numérique.</p> <p>Le système d’exploitation des ordinateurs comprend également un utilitaire nommé <span class="cmd"><b><content-link target="cg9734755150" type="glossary">nslookup</content-link></b></span> qui permet à l’utilisateur d’introduire manuellement une <content-link target="cg9428969507" type="glossary">requête</content-link> auprès des serveurs de noms, afin de convertir un nom d’hôte donné. Cet utilitaire permet également de résoudre les problèmes de résolution de noms et de vérifier l’état actuel des serveurs de noms. </p> <p>À l’écran, lorsque la commande <span class="cmd"><b>nslookup </b></span> est exécutée, le serveur DNS par défaut configuré pour votre hôte est affiché. Dans cet exemple, le serveur DNS est dns-sj.cisco.com et possède l’adresse 171.70.168.183. </p> <p>Vous pouvez alors taper le nom d’un hôte ou d’un domaine dont vous souhaitez obtenir l’adresse. Dans la première demande de l’écran, une demande est effectuée pour www.cisco.com. Le serveur de noms qui répond fournit l’adresse 198.133.219.25. </p> <p>Les demandes affichées à l’écran ne sont que de simples tests. L’utilitaire <span class="cmd"><b>nslookup</b></span> dispose de nombreuses options permettant de tester et de vérifier le processus DNS de manière approfondie.</p></content-text>
</page>
<page type="OneColumn" id="tl0603030103">
<content-media type="StaticGraphic" id="cm4105716484"><title><content-text></content-text></title><media ref="tl0603000000/tl0603030000/tl0603030100/tl0603030103/cm4105716484.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="tl0603000000/tl0603030000/tl0603030100/tl0603030103/cm4105716484text.xml"/></content-media>
<content-text><p>Un serveur DNS effectue la résolution des noms à l’aide du démon de nom, souvent appelé named (name daemon). </p> <p>Le serveur DNS stocke différents types d’enregistrements de ressource utilisés pour résoudre des noms. Ces enregistrements contiennent le nom, l’adresse et le type d’enregistrement.</p> <p>Certains de ces types d’enregistrements sont les suivants :</p> <ul><li> A : une adresse de périphérique final.</li> <li> NS : un serveur de noms <content-link target="cg8202988771" type="glossary">autorisé</content-link>.</li> <li> CNAME : le nom canonique (ou nom de domaine complet) d’un alias ; utilisé lorsque plusieurs services comportent une adresse réseau unique mais que chaque service comporte sa propre entrée dans DNS.</li> <li> MX : enregistrement d’échange de courriel ; associe un <content-link target="cg1587528294" type="glossary">nom de domaine</content-link> à une liste de serveurs d’échange de courriel pour ce domaine.</li></ul> <p>Lorsqu’un client effectue une demande, le processus de démon de nom du serveur examine d’abord ses propres enregistrements pour voir s’il peut résoudre le nom. S’il ne peut pas résoudre le nom à l’aide de ses enregistrements stockés, il contacte d’autres serveurs pour résoudre le nom.</p> <p>La requête peut être transmise à plusieurs serveurs, ce qui peut nécessiter un délai supplémentaire et consommer de la bande passante. Lorsqu’une correspondance est trouvée et retournée au serveur demandeur d’origine, le serveur stocke temporairement dans le <content-link target="cg7369886727" type="glossary">cache</content-link> l’adresse numérique correspondant au nom. </p> <p>Si ce même nom est de nouveau demandé, le premier serveur peut retourner l’adresse en utilisant la valeur stockée dans son cache de noms. La mise en cache réduit le trafic réseau de données de demandes DNS et les charges de travail des serveurs situés aux niveaux supérieurs dans la hiérarchie. Le service client DNS sur les PC Windows optimise les performances de la résolution de noms DNS en stockant également en mémoire les noms déjà résolus. La commande <span class="cmd"><b>ipconfig /displaydns</b></span> affiche toutes les entrées DNS mises en cache sur un système Windows XP ou 2000. </p></content-text>
</page>
<page type="OneColumn" id="tl0603030104">
<content-media type="StaticGraphic" id="cm7036793840"><title><content-text></content-text></title><media ref="tl0603000000/tl0603030000/tl0603030100/tl0603030104/cm7036793840.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="tl0603000000/tl0603030000/tl0603030100/tl0603030104/cm7036793840text.xml"/></content-media>
<content-text><p>Le protocole DNS utilise un système hiérarchique pour créer une base de données afin d’assurer la résolution de noms. La hiérarchie ressemble à une arborescence inversée dont la racine se situe au sommet et les branches en dessous. </p> <p>Au sommet de la hiérarchie, les serveurs racines conservent des enregistrements sur la manière d’atteindre les serveurs des domaines de premier niveau, qui à leur tour comportent des enregistrements pointant sur les serveurs des domaines de second niveau, et ainsi de suite. </p> <p>Les différents domaines de premier niveau représentent le type d’organisation ou le pays d’origine. Voici des exemples de domaines de premier niveau :</p> <ul><li> <b>.au : Australie </b></li> <li><b> .co : Colombie </b></li> <li> <b>.com : entreprise ou industrie</b></li> <li><b> .jp : Japon</b></li> <li> <b>.org : organisme à but non lucratif</b></li></ul> <p>Après les domaines de premier niveau viennent les domaines de second niveau, puis, en dessous, d’autres domaines de niveau inférieur.</p> <p>Chaque nom de domaine constitue un chemin qui descend dans cette arborescence inversée commençant par la racine.</p> <p>Par exemple, comme illustré dans la figure, le serveur DNS racine peut ne pas connaître l’emplacement exact du serveur de messagerie mail.cisco.com, mais il conserve un enregistrement pour le domaine « com » dans le domaine de premier niveau. De même, les serveurs situés dans le domaine « com » peuvent ne pas disposer d’un enregistrement pour mail.cisco.com, mais ils disposent d’un enregistrement pour le domaine « cisco.com ». Les serveurs du domaine cisco.com disposent d’un enregistrement (plus exactement, d’un enregistrement MX) pour mail.cisco.com.</p> <p>Le protocole DNS fait appel à cette hiérarchie de serveurs décentralisés pour stocker et maintenir ces enregistrements de ressources. Les enregistrements de ressources répertorient les noms de domaines que le serveur peut résoudre, ainsi que d’autres serveurs pouvant également traiter des requêtes. Si un serveur spécifique dispose d’enregistrements de ressources qui correspondent à son niveau dans la hiérarchie de domaines, il est qualifié de serveur <b>d’autorité</b> pour ces enregistrements.</p> <p>Par exemple, un serveur de noms dans le domaine cisco.netacad.net ne serait pas un serveur d’autorité pour l’enregistrement mail.cisco.com car cet enregistrement est stocké sur un serveur d’un domaine de premier niveau, à savoir le serveur de noms du domaine cisco.com.</p> <p><b>Liens</b></p> <p><content-link target="http://www.ietf.org//rfc/rfc1034.txt" type="external">http://www.ietf.org//rfc/rfc1034.txt</content-link></p> <p><content-link target="http://www.ietf.org/rfc/rfc1035.txt" type="external">http://www.ietf.org/rfc/rfc1035.txt</content-link></p></content-text>
</page>
</topic>
<topic type="" id="tl0603030200">
<title><content-text>Service WWW et HTTP</content-text></title>
<page type="OneColumn" id="tl0603030201">
<content-media type="InteractiveGraphicRollovers" id="cm5654453107"><title><content-text></content-text></title><media ref="tl0603000000/tl0603030000/tl0603030200/tl0603030201/cm5654453107.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="tl0603000000/tl0603030000/tl0603030200/tl0603030201/cm5654453107text.xml"/></content-media>
<content-text><p>Lorsqu’une adresse Web (ou URL) est tapée dans un navigateur Web, ce dernier établit une connexion au service Web s’exécutant sur le serveur à l’aide du protocole HTTP. Les URL (Uniform Resource Locator) et les URI (Uniform Resource Identifier) sont les noms que la plupart des utilisateurs associent aux adresses Web. </p> <p>Par exemple, http://www.cisco.com/index.html est une adresse URL qui se réfère à une ressource spécifique : une page Web nommée <b>index.html</b> située sur le serveur www du domaine <b>cisco.com</b> (cliquez sur les boutons de la figure pour visualiser les étapes effectuées par le protocole HTTP).</p> <p>Les navigateurs Web sont les applications clientes que les ordinateurs utilisent pour se connecter au Web et accéder aux ressources stockées sur un serveur Web. Comme avec la plupart des processus serveur, le serveur Web s’exécute en tant que service en tâche de fond et met différents types de fichiers à la disposition de l’utilisateur. </p> <p>Pour accéder au contenu Web, les clients Web établissent des connexions au serveur et demandent les ressources voulues. Le serveur retourne les ressources et, à la réception de ces dernières, le navigateur interprète les données avant de les présenter à l’utilisateur.</p> <p>Les navigateurs peuvent interpréter et présenter de nombreux types de données, tels que des données en texte clair ou HTML (Hypertext Markup Language), langage dans lequel sont conçues les pages Web. Cependant, d’autres types de données peuvent nécessiter un autre service ou programme, généralement nommé plug-in ou composant additionnel. Pour aider le navigateur à déterminer le type de fichier qu’il reçoit, le serveur indique le type de données que contient le fichier. </p> <p>Pour mieux comprendre l’interaction entre le navigateur Web et le client Web, voyons comment une page Web s’ouvre dans un navigateur. Cet exemple utilise l’adresse URL suivante : http://www.cisco.com/web-server.htm. </p> <p>Le navigateur commence par interpréter les trois parties de l’adresse URL : </p> <p>1. <b>http</b> (protocole ou schéma) ;</p> <p>2. <b>www.cisco.com</b> (nom du serveur) ;</p> <p>3. <b>web-server.htm</b> (nom du fichier demandé). </p> <p>Le navigateur fait ensuite appel à un serveur de noms pour convertir l’adresse www.cisco.com en une adresse numérique, qu’il utilise pour se connecter au serveur. À l’aide des caractéristiques du protocole HTTP, le navigateur envoie une requête GET au serveur et demande le fichier <b>web-server.htm</b>. En réponse, le serveur envoie le <content-link target="cg3910407465" type="glossary">code</content-link> HTML de cette page Web au navigateur. Enfin, le navigateur déchiffre le code HTML et formate la page en fonction de sa fenêtre.</p></content-text>
</page>
<page type="OneColumn" id="tl0603030202">
<content-media type="StaticGraphic" id="cm4399100543"><title><content-text></content-text></title><media ref="tl0603000000/tl0603030000/tl0603030200/tl0603030202/cm4399100543.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="tl0603000000/tl0603030000/tl0603030200/tl0603030202/cm4399100543text.xml"/></content-media>
<content-text><p>Le protocole HTTP (Hypertext Transfer Protocol), l’un des protocoles de la suite TCP/IP, a été à développé à l’origine pour publier et extraire des pages HTML. Il est à présent utilisé pour les systèmes d’information collaboratifs distribués. Le protocole HTTP est utilisé à travers le Web pour le transfert des données et constitue l’un des protocoles d’application les plus utilisés. </p> <p>Le protocole HTTP constitue un protocole de requête/réponse. Lorsqu’un client (généralement un navigateur Web) envoie une requête à un serveur, le protocole HTTP définit les types de messages que le client utilise pour demander la page Web, ainsi que les types de messages que le serveur utilise pour répondre. Les trois types de messages courants sont GET, POST et PUT.</p> <p><b>GET</b> est une requête cliente pour obtenir des données. Un navigateur Web envoie le message <b>GET</b> pour demander des pages à un serveur Web. Comme l’illustre la figure, une fois que le serveur reçoit la requête <b>GET</b>, il retourne une ligne d’état (par exemple, HTTP/1.1 200 OK), ainsi qu’un message créé par lui-même et dont le corps peut être le fichier demandé, un message d’erreur ou d’autres informations.</p> <p><b>POST</b> et <b>PUT</b> servent à envoyer des messages qui téléchargent des données vers le serveur Web. Par exemple, lorsque l’utilisateur entre des données dans un formulaire incorporé à une page Web, la requête <b>POST</b> comprend les données dans le message envoyé au serveur.</p> <p>La requête <b>PUT</b> télécharge des ressources ou du contenu vers le serveur Web.</p> <p>Bien qu’il soit remarquablement flexible, le protocole HTTP n’est pas un protocole sécurisé. Les messages <b>POST</b> téléchargent des informations vers le serveur dans un format de texte clair pouvant être intercepté et lu. De même, les réponses du serveur (généralement, des pages HTML) ne sont pas chiffrées. </p> <p>Pour une communication sécurisée via Internet, le protocole HTTPS (HTTP Secure) est utilisé lors de l’accès aux informations du serveur Web ou de leur publication. Le protocole HTTPS peut procéder à l’authentification et au <content-link target="cg3087090268" type="glossary">chiffrement</content-link> pour sécuriser les données pendant qu’elles circulent entre le client et le serveur. Le protocole HTTPS spécifie des règles supplémentaires de transmission de données entre la couche application et la couche transport.</p></content-text>
</page>
<page type="OneColumn" id="tl0603030203">
<content-media type="ActivityPKA" id="cm6900187295"><title><content-text></content-text></title><media ref="tl0603000000/tl0603030000/tl0603030200/tl0603030203/cm6900187295/" mime="application/packettracer" scale="true" type="directory" width="0" height="0" external="tl0603000000/tl0603030000/tl0603030200/tl0603030203/cm6900187295/icontext.xml"/></content-media>
<content-text><p>Dans cet exercice, vous allez configurer des services DNS et HTTP, puis examiner les paquets qui en résultent lorsqu’une page Web est demandée via la saisie d’une adresse URL. </p><p><b>Pour plus d’informations, cliquez sur l’icône Packet Tracer.</b></p></content-text>
</page>
</topic>
<topic type="" id="tl0603030300">
<title><content-text>Services de messagerie et protocoles SMTP/POP</content-text></title>
<page type="OneColumn" id="tl0603030301">
<content-media type="StaticGraphic" id="cm7811422353"><title><content-text></content-text></title><media ref="tl0603000000/tl0603030000/tl0603030300/tl0603030301/cm7811422353.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="tl0603000000/tl0603030000/tl0603030300/tl0603030301/cm7811422353text.xml"/></content-media>
<content-text><p>Le courriel, le service réseau le plus répandu, par sa simplicité et sa vitesse d’exécution, a révolutionné la manière dont nous communiquons. Mais pour s’exécuter sur un ordinateur ou autre périphérique final, une messagerie nécessite plusieurs applications et services. Les protocoles POP (Post Office Protocol) et SMTP (<b>Simple Mail Transfer Protocol</b>), illustrés dans la figure, sont deux exemples de protocoles de couche application. Tout comme le protocole HTTP, ces protocoles définissent des processus client/serveur.</p> <p>Lorsque l’utilisateur rédige un courriel, il fait généralement appel à une application connue sous le nom d’<content-link target="cg3716640392" type="glossary">agent de messagerie</content-link> ou de client de messagerie. L’agent de messagerie permet l’envoi des messages et place les messages reçus dans la boîte aux lettres du client, ces deux processus étant des processus distincts. </p> <p>Pour recevoir le courriel d’un serveur de messagerie, le client de messagerie peut utiliser le protocole POP. L’envoi de courriel à partir d’un client ou d’un serveur implique l’utilisation de commandes et de formats de messages définis par le protocole SMTP. Un client de messagerie fournit généralement les fonctionnalités des deux protocoles au sein d’une application.</p></content-text>
</page>
<page type="OneColumn" id="tl0603030302">
<content-media type="StaticGraphic" id="cm1514436080"><title><content-text></content-text></title><media ref="tl0603000000/tl0603030000/tl0603030300/tl0603030302/cm1514436080.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="tl0603000000/tl0603030000/tl0603030300/tl0603030302/cm1514436080text.xml"/></content-media>
<content-text><p><b>Processus de serveur de messagerie : MTA et MDA</b></p> <p>Le serveur de messagerie opère deux processus distincts :</p> <ul><li> agent de transfert des messages (MTA) ;</li> <li> agent de remise des messages (MDA).</li></ul> <p>Le processus MTA est utilisé pour transférer le courriel. Comme l’illustre la figure, l’agent de transfert des messages reçoit des messages de l’agent de messagerie ou d’un autre agent de transfert des messages sur un autre serveur de messagerie. En fonction de l’en-tête du message, il détermine la manière dont un message doit être transmis pour arriver à destination. Si le message est adressé à un utilisateur dont la boîte aux lettres réside sur le serveur local, le message est transmis à l’agent de remise des messages (MDA). Si le message est adressé à un utilisateur ne se situant pas sur le serveur local, l’agent de transfert des messages l’achemine vers l’agent de transfert des messages du serveur approprié. </p></content-text>
</page>
<page type="OneColumn" id="tl0603030303">
<content-media type="StaticGraphic" id="cm9522052632"><title><content-text></content-text></title><media ref="tl0603000000/tl0603030000/tl0603030300/tl0603030303/cm9522052632.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="tl0603000000/tl0603030000/tl0603030300/tl0603030303/cm9522052632text.xml"/></content-media>
<content-text><p>Dans la figure, l’agent de remise des messages (MDA) accepte un courriel d’un agent de transfert des messages (MTA) et procède à la remise effective du courriel. L’agent de remise des messages reçoit tous les messages entrants de l’agent de transfert des messages et les place dans la boîte aux lettres des utilisateurs appropriés. Il peut également traiter les derniers aspects liés à la remise, tels que l’analyse antivirus, le <content-link target="cg3151108749" type="glossary">filtrage</content-link>&#160;du <content-link target="cg9205602376" type="glossary">courrier indésirable</content-link> et la gestion des accusés de réception. La plupart des communications par courriel utilisent les applications MUA (Mail User Agent, le client mail), MTA et MDA. Cependant, il existe d’autres alternatives pour la remise du courriel.</p> <p>Un client peut être connecté à un système de messagerie d’entreprise, tel que Lotus Notes d’IBM, Groupwise de Novell ou Exchange de Microsoft. Ces systèmes disposent souvent de leur propre format de messagerie interne et leurs clients communiquent généralement avec le serveur de messagerie à l’aide d’un protocole propriétaire. Le serveur envoie ou reçoit le courriel via Internet par l’intermédiaire de la <content-link target="cg7131440805" type="glossary">passerelle</content-link> de messagerie Internet du produit, qui procède au reformatage nécessaire.</p> <p>Autre alternative : les ordinateurs ne disposant pas d’un agent de messagerie peuvent encore se connecter à un service de messagerie sur un navigateur Web pour récupérer et envoyer des messages de cette manière. Certains ordinateurs peuvent exécuter leur propre agent de transfert des messages (MTA) et gérer eux-mêmes le courriel entre domaines. Par exemple, si deux personnes travaillant dans la même entreprise s’échangent du courriel à l’aide d’un protocole propriétaire, leurs messages peuvent rester entièrement dans le système de messagerie de l’entreprise.</p></content-text>
</page>
<page type="OneColumn" id="tl0603030304">
<content-media type="StaticGraphic" id="cm8938898023"><title><content-text></content-text></title><media ref="tl0603000000/tl0603030000/tl0603030300/tl0603030304/cm8938898023.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="tl0603000000/tl0603030000/tl0603030300/tl0603030304/cm8938898023text.xml"/></content-media>
<content-text><p>Comme indiqué précédemment, le courriel peut utiliser les protocoles POP et SMTP (reportez-vous à la figure pour savoir comment fonctionne chacun de ces protocoles). Les protocoles POP et POP3 (Post Office Protocol, version 3) sont des protocoles de <b>remise</b> du courrier entrant et constituent des protocoles client/serveur standard. Ils transmettent le courriel du serveur de messagerie au client de messagerie. L’agent de remise des messages (MDA) procède à une écoute pour détecter le moment où un client se connecte à un serveur. Une fois qu’une connexion est établie, le serveur peut remettre le courriel au client. </p> <p>Par ailleurs, le protocole SMTP (Simple Mail Transfer Protocol) régit le transfert du courriel <b>sortant</b> du client expéditeur au serveur de messagerie (MDA), ainsi que le transport du courriel entre les serveurs de messagerie (MTA). Le protocole SMTP permet le transport du courriel sur des réseaux de données entre différents types de logiciels serveur et client, ainsi que l’échange de courriel via Internet. </p> <p>Le format de message du protocole SMTP utilise un ensemble rigide de commandes et de réponses. Ces commandes prennent en charge les procédures du protocole SMTP, telles que l’ouverture de session, la transaction du courriel, le transfert du courriel, la vérification des noms de boîte aux lettres, le développement des listes de diffusion et les échanges de début et de fin.</p> <p>Certaines des commandes spécifiées dans le protocole SMTP sont les suivantes :</p> <ul><li> HELO : identifie le processus client SMTP pour le processus serveur SMTP.</li> <li> EHLO : est une version plus récente de la commande HELO et comprend des extensions de services.</li> <li> MAIL FROM : identifie l’expéditeur.</li> <li> RCPT TO : identifie le destinataire.</li> <li> DATA : identifie le corps du message.</li></ul></content-text>
</page>
</topic>
<topic type="" id="tl0603030400">
<title><content-text>Protocole FTP</content-text></title>
<page type="OneColumn" id="tl0603030401">
<content-media type="StaticGraphic" id="cm7557739899"><title><content-text></content-text></title><media ref="tl0603000000/tl0603030000/tl0603030400/tl0603030401/cm7557739899.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="tl0603000000/tl0603030000/tl0603030400/tl0603030401/cm7557739899text.xml"/></content-media>
<content-text><p>Le protocole FTP (File Transfer Protocol) est un autre protocole de couche application couramment utilisé. Il a été développé pour permettre le transfert de fichiers entre un client et un serveur. Un client FTP est une application s’exécutant sur un ordinateur et utilisée pour extraire des fichiers d’un serveur exécutant le démon FTP (FTPd).</p> <p>Pour transférer les fichiers correctement, le protocole FTP nécessite que deux connexions soient établies entre le client et le serveur : une connexion pour les commandes et les réponses et une autre pour le transfert même des fichiers. </p> <p>Le client établit la première connexion au serveur sur le port TCP 21. Cette connexion est utilisée pour le trafic de contrôle et se compose de commandes clientes et de réponses serveur. </p> <p>Le client établit la seconde connexion au serveur via le port TCP 20. Cette connexion est destinée au transfert même des fichiers et est établie à chaque transfert de fichiers. </p> <p>Le transfert de fichiers peut s’effectuer dans l’une des deux directions. Le client peut télécharger un fichier à partir du serveur ou en direction du serveur.</p></content-text>
</page>
</topic>
<topic type="" id="tl0603030500">
<title><content-text>Protocole DHCP</content-text></title>
<page type="OneColumn" id="tl0603030501">
<content-media type="StaticGraphic" id="cm2042181675"><title><content-text></content-text></title><media ref="tl0603000000/tl0603030000/tl0603030500/tl0603030501/cm2042181675.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="tl0603000000/tl0603030000/tl0603030500/tl0603030501/cm2042181675text.xml"/></content-media>
<content-text><p>Le service fourni par le <content-link target="cg3508501888" type="glossary">protocole DHCP</content-link> (Dynamic Host Configuration Protocol) permet aux périphériques d’un réseau d’obtenir d’un serveur DHCP des adresses IP et d’autres informations. Ce service automatise l’affectation des adresses IP, des masques de sous-réseau, d’une adresse IP de passerelle et d’autres paramètres de configuration de la couche réseau.</p> <p>Il permet à un hôte d’obtenir une adresse IP dynamiquement lorsqu’il se connecte au réseau. Le serveur DHCP est contacté et une adresse est demandée. Le serveur DHCP choisit une adresse dans une plage d’adresses configurée (nommée pool) et affecte cette adresse à l’hôte pour une durée définie.</p> <p>Sur les réseaux locaux plus importants ou sur les réseaux dont les utilisateurs changent fréquemment, le protocole DHCP est préférable. De nouveaux utilisateurs peuvent se présenter travaillant sur des ordinateurs portables et nécessitant une connexion. D’autres peuvent disposer de nouvelles stations de travail devant être connectées. Plutôt que de faire attribuer des adresses IP par l’administrateur réseau à chaque station de travail, il est plus efficace que les adresses IP soient attribuées automatiquement à l’aide du protocole DHCP.</p> <p>Les adresses attribuées via le protocole DHCP ne sont pas affectées aux hôtes définitivement mais uniquement pour une durée spécifique. Si l’hôte est mis hors tension ou retiré du réseau, l’adresse est retournée au pool pour être réutilisée. Ceci est particulièrement utile pour les utilisateurs mobiles qui se connectent et se déconnectent sur le réseau. Les utilisateurs peuvent librement se déplacer d’un endroit à un autre et rétablir des connexions réseau. L’hôte peut contenir une adresse IP une fois la connexion matérielle établie, via un réseau local filaire ou sans fil.</p> <p>Le protocole DHCP vous permet d’accéder à Internet via des points d’accès sans fil dans des aéroports ou des cafés. Lorsque vous pénétrez dans la zone, le client DHCP de votre ordinateur portable contacte le serveur DHCP local via une connexion sans fil. Le serveur DHCP attribue une adresse IP à votre ordinateur portable.</p> <p>Comme l’illustre la figure, divers types de périphériques peuvent être des serveurs DHCP lorsqu’ils exécutent des logiciels de service DHCP. Dans la plupart des réseaux de taille moyenne à grande, le serveur DHCP est généralement un serveur local dédié basé sur un PC.</p> <p>Dans le cas des réseaux domestiques, il est généralement situé au niveau du fournisseur de services Internet et un hôte sur le réseau domestique reçoit directement sa configuration IP du fournisseur de services Internet. </p> <p>Le protocole DHCP peut représenter un risque pour la sécurité car n’importe quel périphérique connecté au réseau peut recevoir une adresse. Ce risque fait de la sécurité physique un facteur important lors du choix entre un adressage dynamique et un adressage manuel.</p> <p>L’adressage dynamique et l’adressage statique ont chacun leur place dans la conception des réseaux. De nombreux réseaux utilisent à la fois le protocole DHCP et l’adressage statique. Le protocole DHCP est utilisé pour les hôtes à utilisation générale (par exemple, les périphériques d’utilisateur final) et les adresses fixes pour les périphériques réseau (par exemple, les passerelles, les commutateurs, les serveurs et les imprimantes).</p></content-text>
</page>
<page type="OneColumn" id="tl0603030502">
<content-media type="StaticGraphic" id="cm9440505700"><title><content-text></content-text></title><media ref="tl0603000000/tl0603030000/tl0603030500/tl0603030502/cm9440505700.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="tl0603000000/tl0603030000/tl0603030500/tl0603030502/cm9440505700text.xml"/></content-media>
<content-text><p>Sans le protocole DHCP, les utilisateurs doivent manuellement entrer l’adresse IP, le <content-link target="cg4964739436" type="glossary">masque de sous-réseau</content-link> et d’autres paramètres réseau pour se connecter au réseau. Le serveur DHCP maintient un pool d’adresses IP et attribue temporairement une adresse à n’importe quel client DHCP lorsque celui-ci est mis sous tension. Les adresses IP étant des adresses dynamiques (temporairement attribuées) et non pas des adresses statiques (définitivement attribuées), les adresses qui ne sont plus utilisées sont automatiquement retournées au pool pour être réattribuées. Lorsqu’un périphérique configuré pour le protocole DHCP est mis sous tension ou se connecte au réseau, le client diffuse un paquet DHCP DISCOVER pour identifier les serveurs DHCP disponibles du réseau. Un serveur DHCP répond avec un paquet DHCP OFFER, à savoir un message d’offre de bail qui indique une adresse IP attribuée, un masque de sous-réseau, un serveur DNS, une <content-link target="cg6257477832" type="glossary">passerelle par défaut</content-link>, ainsi que la durée du bail..</p> <p>Le client peut recevoir plusieurs paquets DHCP OFFER si le réseau local comporte plusieurs serveurs DHCP. Il doit donc effectuer un choix parmi ces paquets et diffuser un paquet DHCP REQUEST qui identifie explicitement le serveur et l’offre de bail qu’il accepte. Un client peut choisir de demander une adresse que le serveur lui a déjà attribuée précédemment. </p> <p>En supposant que l’adresse IP demandée par le client ou offerte par le serveur est encore valide, le serveur retourne un message DHCP <content-link target="cg8656501371" type="glossary">ACK</content-link> confirmant au client que le bail est effectué. Si l’offre n’est plus valide (peut-être à cause d’un délai d’attente dépassé ou d’un autre client effectuant un bail), le serveur sélectionné répondra par un message DHCP NAK (Negative Acknowledgement). Si un message DHCP NAK est retourné, le processus de sélection doit recommencer avec un nouveau message DHCP DISCOVER transmis.</p> <p>Une fois que le client obtient le bail, celui-ci doit être renouvelé avant son expiration via un autre message DHCP REQUEST.</p> <p>Le serveur DHCP s’assure que toutes les adresses IP sont uniques (une adresse IP ne peut pas être attribuée à deux périphériques réseaux différents en même temps). Le protocole DHCP permet aux administrateurs réseau de reconfigurer aisément les adresses IP des clients sans devoir apporter de modifications manuelles aux clients. La plupart des fournisseurs Internet utilisent un protocole DHCP pour attribuer des adresses à leurs clients ne nécessitant pas d’adresse statique.</p> <p>Le quatrième cours d’exploration <content-link target="cg3454627130" type="glossary">CCNA</content-link> aborde plus en détails le fonctionnement du protocole DHCP. </p></content-text>
</page>
</topic>
<topic type="" id="tl0603030600">
<title><content-text>Services de partage de fichiers et protocole SMB</content-text></title>
<page type="OneColumn" id="tl0603030601">
<content-media type="InteractiveGraphicRollovers" id="cm4222420550"><title><content-text></content-text></title><media ref="tl0603000000/tl0603030000/tl0603030600/tl0603030601/cm4222420550.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="tl0603000000/tl0603030000/tl0603030600/tl0603030601/cm4222420550text.xml"/></content-media>
<content-text><p>Le <content-link target="cg6621032581" type="glossary">protocole SMB</content-link> (Server Message Block) est un protocole de partage de fichiers client/serveur. Il fut développé par IBM à la fin des années 80 pour décrire la structure des ressources réseau partagées telles que les répertoires, les fichiers, les imprimantes et les ports série. Il s’agit d’un protocole de requête-réponse. Contrairement au partage de fichiers pris en charge par le protocole FTP, les clients établissent une connexion à long terme aux serveurs. Une fois la connexion établie, l’utilisateur du client peut accéder aux ressources résidant sur le serveur comme si elles étaient situées localement sur l’hôte client. </p> <p>Le partage de fichiers et les services d’impression SMB sont devenus la base des réseaux Microsoft. Avec l’introduction de la série de logiciels Windows 2000, Microsoft a modifié la structure sous-jacente d’utilisation du protocole SMB. Dans les versions précédentes des produits Microsoft, les services SMB utilisaient un protocole autre que TCP/IP pour implémenter la résolution de noms. Depuis Windows 2000, tous les produits Microsoft utilisent la désignation DNS. Les protocoles TCP/IP peuvent ainsi prendre directement en charge le partage de ressources SMB, comme l’illustre la figure.</p> <p>Les systèmes d’exploitation LINUX et <content-link target="cg9687323737" type="glossary">UNIX</content-link> fournissent également une méthode de partage des ressources avec les réseaux Microsoft à l’aide d’une version de SMB nommée SAMBA. Les systèmes d’exploitation Apple Macintosh prennent en charge eux aussi le partage des ressources via le protocole SMB.</p></content-text>
</page>
<page type="OneColumn" id="tl0603030602">
<content-media type="StaticGraphic" id="cm2597082837"><title><content-text></content-text></title><media ref="tl0603000000/tl0603030000/tl0603030600/tl0603030602/cm2597082837.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="tl0603000000/tl0603030000/tl0603030600/tl0603030602/cm2597082837text.xml"/></content-media>
<content-text><p>Le protocole SMB décrit l’accès au système de fichiers et la manière dont les clients peuvent demander des fichiers. Il décrit également le protocole SMB de communication-interprocessus. Tous les messages SMB partagent un format commun. Ce format utilise un en-tête de taille fixe suivi d’un paramètre et d’un composant de données de taille variable.</p> <p>Les messages SMB peuvent :</p> <ul><li> démarrer et authentifier des sessions ou y mettre fin ;</li> <li> contrôler l’accès aux fichiers et aux imprimantes ;</li> <li> permettre à une application d’envoyer ou de recevoir des messages vers ou depuis un autre périphérique. </li></ul> <p>Le processus d’échange de fichiers SMB est illustré dans la figure.</p></content-text>
</page>
</topic>
<topic type="" id="tl0603030700">
<title><content-text>Services Peer to peer et protocole Gnutella</content-text></title>
<page type="OneColumn" id="tl0603030701">
<content-media type="StaticGraphic" id="cm7315782721"><title><content-text></content-text></title><media ref="tl0603000000/tl0603030000/tl0603030700/tl0603030701/cm7315782721.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="tl0603000000/tl0603030000/tl0603030700/tl0603030701/cm7315782721text.xml"/></content-media>
<content-text><p>Vous avez appris que les protocoles FTP et SMB constituent une méthode permettant d’obtenir des fichiers. Voici maintenant un autre protocole d’application. Partager des fichiers via Internet est devenu très courant. Avec les <b>applications Peer to peer</b> basées sur le protocole Gnutella, les utilisateurs peuvent mettre les fichiers situés sur leur disque dur à la disposition des autres utilisateurs pour que ces derniers les téléchargent. Les logiciels clients compatibles avec le protocole Gnutella permettent aux utilisateurs de se connecter aux services Gnutella via Internet et de localiser des ressources partagées par d’autres homologues Gnutella pour y accéder. </p> <p>De nombreuses applications clientes sont disponibles pour permettre aux utilisateurs d’accéder au réseau Gnutella, parmi lesquelles : BearShare, Gnucleus, LimeWire, Morpheus, WinMX et XoloX (reportez-vous à la capture d’écran de LimeWire présentée dans la figure). Le forum des développeurs Gnutella maintient le protocole de base, mais les fournisseurs d’applications développent souvent des extensions pour que le protocole fonctionne mieux sur leurs applications. </p></content-text>
</page>
<page type="OneColumn" id="tl0603030702">
<content-media type="AnimationPartialScreen" id="cm4319297686"><title><content-text></content-text></title><media ref="tl0603000000/tl0603030000/tl0603030700/tl0603030702/cm4319297686.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="tl0603000000/tl0603030000/tl0603030700/tl0603030702/cm4319297686text.xml"/></content-media>
<content-text><p>De nombreuses applications Peer to peer n’utilisent pas de base de données centrale pour enregistrer tous les fichiers disponibles sur les homologues. À la place, chaque périphérique du réseau, lorsqu’il est interrogé, indique aux autres périphériques quels fichiers sont disponibles et utilise le protocole et les services Gnutella pour prendre en charge la localisation des ressources. Reportez-vous à la figure.</p> <p>Lorsqu’un utilisateur est connecté à un service Gnutella, les applications clientes recherchent d’autres noeuds Gnutella auxquels se connecter. Ces noeuds traitent les demandes d’obtention de l’emplacement des ressources et les réponses à ces demandes. Ils régissent également les messages de contrôle, qui aident le service à découvrir d’autres noeuds. Le transfert de fichiers effectif s’en remet généralement aux services HTTP. </p> <p>Le protocole Gnutella définit cinq types de paquets différents :</p> <ul><li> ping : pour la découverte des périphériques ; </li> <li> pong : réponse à un paquet ping ;</li> <li> query : pour l’emplacement des fichiers ;</li> <li> query hit : réponse à une demande ; </li> <li> push : requête de téléchargement.</li></ul></content-text>
</page>
</topic>
<topic type="" id="tl0603030800">
<title><content-text>Services et protocoles Telnet</content-text></title>
<page type="OneColumn" id="tl0603030801">
<content-media type="InteractiveGraphicHotspots" id="cm4776711215"><title><content-text></content-text></title><media ref="tl0603000000/tl0603030000/tl0603030800/tl0603030801/cm4776711215.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="tl0603000000/tl0603030000/tl0603030800/tl0603030801/cm4776711215text.xml"/></content-media>
<content-text><p>Bien avant l’apparition des ordinateurs de bureau et de leurs interfaces graphiques sophistiquées, les utilisateurs se servaient de systèmes texte qui souvent consistaient simplement en terminaux d’affichage physiquement connectés à un ordinateur central. Avec l’arrivée des réseaux, les utilisateurs ont eu besoin d’une méthode leur permettant d’accéder à distance aux systèmes informatiques tout comme ils le faisaient avec les terminaux directement connectés.</p> <p><b>Telnet</b> a été développé pour répondre à ce besoin. Telnet date du début des années 70 et compte parmi les plus anciens protocoles et services de couche application de la suite TCP/IP. Telnet offre une méthode standard permettant d’émuler les périphériques terminaux texte via le réseau de données. Le terme Telnet désigne généralement le protocole lui-même et le logiciel client qui le met en oeuvre.</p> <p>Logiquement, une connexion qui utilise Telnet est nommée connexion ou session VTY (Virtual Terminal). Plutôt que d’utiliser un périphérique physique pour se connecter au serveur, Telnet utilise un logiciel pour créer un périphérique virtuel qui offre les mêmes fonctionnalités qu’une session de terminal avec accès à l’interface de ligne de commande (CLI, Command Line Interface) du serveur.</p> <p>Pour prendre en charge les connexions du client Telnet, le serveur exécute un service nommé démon Telnet. Une connexion à un terminal virtuel est établie à partir d’un périphérique final à l’aide d’une application cliente Telnet. La plupart des systèmes d’exploitation comportent un client Telnet de couche application. Sur un ordinateur exécutant Microsoft Windows, Telnet peut s’exécuter à partir de l’invite de commandes. D’autres applications terminales courantes s’exécutant en tant que clients Telnet sont HyperTerminal, Minicom et TeraTerm.</p> <p>Une fois qu’une connexion Telnet a été établie, les utilisateurs peuvent exécuter n’importe quelle fonction autorisée sur le serveur, exactement comme s’ils utilisaient une session de ligne de commande sur le serveur lui-même. S’ils en ont l’autorisation, ils peuvent lancer et arrêter des processus, configurer le périphérique et même mettre le système hors tension.</p> <p><b>Cliquez sur les boutons de la figure pour visualiser un exemple relatif à Telnet.</b></p></content-text>
</page>
<page type="OneColumn" id="tl0603030802">
<content-media type="StaticGraphic" id="cm7027897161"><title><content-text></content-text></title><media ref="tl0603000000/tl0603030000/tl0603030800/tl0603030802/cm7027897161.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="tl0603000000/tl0603030000/tl0603030800/tl0603030802/cm7027897161text.xml"/></content-media>
<content-text><p>Telnet est un protocole client/serveur qui spécifie la manière dont une session VTY s’établit et prend fin. Il fournit également la syntaxe et l’ordre des commandes qui permettent d’ouvrir une session Telnet, ainsi que les commandes de contrôle exécutables pendant une session. Chaque commande Telnet consiste en un minimum de deux octets. Le premier octet est un caractère spécial nommé <b>IAC (Interpret as Command)</b>. Comme son nom l’indique, le caractère IAC définit l’octet suivant en tant que commande plutôt que texte. </p> <p>Voici quelques exemples de commandes de protocole Telnet :</p> <p><b>Are You There (AYT)</b> : permet à l’utilisateur de demander qu’un élément apparaisse sur l’écran du terminal pour indiquer que la session VTY est active.</p> <p><b>Erase Line (EL)</b> : supprime tout le texte de la ligne actuelle. </p> <p><b>Interrupt Process (IP)</b> : suspend, interrompt, annule ou met fin au processus auquel le terminal virtuel est connecté. Par exemple, si un utilisateur a lancé un programme sur le serveur Telnet via la session VTY, il peut envoyer une commande IP pour arrêter ce programme. </p> <p>Le protocole Telnet prend en charge l’authentification de l’utilisateur mais pas le transport des données <content-link target="cg4673894399" type="glossary">chiffrées</content-link>. Toutes les données échangées pendant une session Telnet sont transportées en tant que texte clair sur le réseau. Cela signifie qu’elles peuvent être interceptées et aisément interprétées.</p> <p>Si la sécurité est un facteur important, le protocole SSH (Secure Shell) fournit une méthode alternative sécurisée pour accéder au serveur. Ce protocole fournit le schéma à utiliser pour une connexion à distance sécurisée et d’autres services réseau sécurisés. Il permet également une authentification plus forte qu’avec Telnet et prend en charge le transport des données de session à l’aide du chiffrement. <b>Conformément à la méthode recommandée, les professionnels des réseaux doivent toujours utiliser le protocole SSH à la place de Telnet, autant que possible.</b></p> <p>Plus tard dans ce cours, nous utiliserons Telnet et SSH pour accéder aux périphériques réseau via le réseau de travaux pratiques et les configurer.</p></content-text>
</page>
</topic>
</section>
<section type="" id="tl0603040000">
<title><content-text>Travaux pratiques et exercices</content-text></title>
<topic type="" id="tl0603040100">
<title><content-text>Capture de flux de données</content-text></title>
<page type="OneColumn" id="tl0603040101">
<content-media type="ActivityLab" id="cm2021964654"><title><content-text></content-text></title><media ref="tl0603000000/tl0603040000/tl0603040100/tl0603040101/cm2021964654/" mime="application/pdf" scale="true" type="directory" width="0" height="0" external="tl0603000000/tl0603040000/tl0603040100/tl0603040101/cm2021964654/icontext.xml"/></content-media>
<content-text><p>Dans cet exercice, vous allez utiliser un ordinateur disposant d’un microphone et de Microsoft Sound Recorder ou d’un accès Internet afin de télécharger un fichier audio. </p><p><b>Cliquez sur l’icône des travaux pratiques pour plus de détails.</b></p></content-text>
</page>
</topic>
<topic type="" id="tl0603040200">
<title><content-text>Travaux pratiques : Gestion d’un serveur Web</content-text></title>
<page type="OneColumn" id="tl0603040201">
<content-media type="ActivityLab" id="cm8264127356"><title><content-text></content-text></title><media ref="tl0603000000/tl0603040000/tl0603040200/tl0603040201/cm8264127356/" mime="application/pdf" scale="true" type="directory" width="0" height="0" external="tl0603000000/tl0603040000/tl0603040200/tl0603040201/cm8264127356/icontext.xml"/></content-media>
<content-text><p>Au cours de ces travaux pratiques, vous allez télécharger, installer et configurer le serveur Web Apache. Vous utiliserez un navigateur Web pour vous connecter au serveur et Wireshark pour capturer la communication. L’analyse de la capture vous aidera à comprendre le fonctionnement du protocole HTTP.</p><p><b>Cliquez sur l’icône des travaux pratiques pour plus d’informations.</b></p></content-text>
</page>
</topic>
<topic type="" id="tl0603040300">
<title><content-text>Travaux pratiques : Services et protocoles de messagerie</content-text></title>
<page type="OneColumn" id="tl0603040301">
<content-media type="ActivityLab" id="cm7259638612"><title><content-text></content-text></title><media ref="tl0603000000/tl0603040000/tl0603040300/tl0603040301/cm7259638612/" mime="application/pdf" scale="true" type="directory" width="0" height="0" external="tl0603000000/tl0603040000/tl0603040300/tl0603040301/cm7259638612/icontext.xml"/></content-media>
<content-text><p>Au cours de ces travaux pratiques, vous allez configurer et utiliser une application cliente de messagerie pour vous connecter aux services réseau d’Eagle Server. Vous surveillerez ensuite la communication avec Wireshark et analyserez les paquets capturés. </p><p><b>Cliquez sur l’icône des travaux pratiques pour plus de détails.</b></p></content-text>
</page>
</topic>
</section>
<section type="ChapterSummary" id="tl0603050000">
<title><content-text>Résumé du chapitre</content-text></title>
<topic type="" id="tl0603050100">
<title><content-text>Résumé et révision</content-text></title>
<page type="OneColumn" id="tl0603050101">
<content-media type="StaticGraphic" id="cm6137255147"><title><content-text></content-text></title><media ref="tl0603000000/tl0603050000/tl0603050100/tl0603050101/cm6137255147.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="tl0603000000/tl0603050000/tl0603050100/tl0603050101/cm6137255147text.xml"/></content-media>
<content-text><p>La <b>couche application</b> accède directement aux processus sous-jacents qui gèrent et permettent la communication entre les utilisateurs connectés au réseau. Cette couche sert de source et de destination des communications via les réseaux de données.</p> <p>Les applications, les protocoles et les services de couche application permettent aux utilisateurs d’interagir significativement et efficacement avec le réseau de données.</p> <p>Les <b>applications</b> sont des programmes informatiques avec lesquels les utilisateurs interagissent et qui lancent le processus de transfert de données à la requête des utilisateurs.</p> <p>Les <b>services</b> sont des programmes s’exécutant en tâche de fond qui assurent la connexion entre la couche application et les couches inférieures du modèle de réseau.</p> <p>Les <b>protocoles</b> fournissent une structure de règles et de processus convenus grâce auxquels les services s’exécutant sur un périphérique particulier peuvent envoyer et recevoir des données de divers périphériques réseau.</p> <p>La livraison de données via le réseau peut être demandée à un <b>serveur</b> par un <b>client</b> ou entre des périphériques qui opèrent dans un schéma <b>Peer to peer</b> où la relation client/serveur est établie selon le périphérique qui, à ce moment, est source et destination Des <b>messages</b> sont échangés entre les services de couche application au niveau de chaque périphérique final selon les spécifications de protocole pour établir et utiliser ces relations.</p> <p>Des protocoles tels que <b>HTTP</b>, par exemple, prennent en charge l’envoi de pages Web vers des périphériques finaux. Les protocoles <b>SMTP/POP</b> prennent en charge l’envoi et la réception du courriel. Le protocole <b>SMB</b> permet aux utilisateurs de partager des fichiers. Le protocole <b>DNS</b> convertit en adresses numériques utilisables par le réseau les noms humainement compréhensibles et utilisés pour faire référence aux ressources réseau.</p></content-text>
</page>
<page type="FullScreen" id="tl0603050102">
<content-media type="ChapterSummary" id="cm8666984520"><title><content-text></content-text></title><media ref="tl0603000000/tl0603050000/tl0603050100/tl0603050102/cm8666984520.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="tl0603000000/tl0603050000/tl0603050100/tl0603050102/cm8666984520text.xml"/></content-media>
<content-text></content-text>
</page>
<page type="OneColumn" id="tl0603050103">
<content-media type="ActivityPKA" id="cm5972810116"><title><content-text></content-text></title><media ref="tl0603000000/tl0603050000/tl0603050100/tl0603050103/cm5972810116/" mime="application/packettracer" scale="true" type="directory" width="0" height="0" external="tl0603000000/tl0603050000/tl0603050100/tl0603050103/cm5972810116/icontext.xml"/></content-media>
<content-text><p>Dans cet exercice, vous allez construire et analyser des parties plus complexes du modèle du réseau des travaux pratiques Exploration. </p> <p><content-link target="E1_PTAct_3_5_1_Directions.pdf" type="internalfile">Instructions d’intégration des compétences Packet Tracer (PDF)</content-link></p><p><b>Pour plus d’informations, cliquez sur l’icône Packet Tracer.</b></p></content-text>
</page>
<page type="OneColumn" id="tl0603050104">
<content-media type="StaticGraphic" id="cm1975441776"><title><content-text></content-text></title><media ref="tl0603000000/tl0603050000/tl0603050100/tl0603050104/cm1975441776.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="tl0603000000/tl0603050000/tl0603050100/tl0603050104/cm1975441776text.xml"/></content-media>
<content-text><p><b>Pour en savoir plus</b></p> <p><b>Questions de réflexion</b></p> <p>Pourquoi est-il important de faire la distinction entre une application spécifique de la couche application, le service associé et le protocole ? Discutez de cet aspect dans le contexte des modèles de référence de réseau.</p> <p>Et s’il était possible d’inclure tous les services de couche application dans un seul protocole global ? Discutez des avantages et des inconvénients d’un tel protocole.</p> <p>Comment développeriez-vous un nouveau protocole destiné à un nouveau service de couche application ? Quels seraient les éléments à inclure ? Quelles personnes devraient être impliquées dans le processus et comment les informations seraient-elles diffusées ? </p> <p><b>Liens</b></p> <p><content-link target="http://www.ietf.org/" type="external">http://www.ietf.org/ </content-link></p> <p><content-link target="http://www.protocols.com/" type="external">http://www.protocols.com/ </content-link></p></content-text>
</page>
</topic>
</section>
<section type="ChapterQuiz" id="tl0603060000">
<title><content-text>Questionnaire du chapitre</content-text></title>
<topic type="" id="tl0603060100">
<title><content-text>Questionnaire du chapitre</content-text></title>
<page type="FullScreen" id="tl0603060101">
<content-media type="ChapterQuiz" id="cm2966772849"><title><content-text></content-text></title><media ref="tl0603000000/tl0603060000/tl0603060100/tl0603060101/cm2966772849/" mime="" scale="true" type="directory" width="100%" height="100%" external="tl0603000000/tl0603060000/tl0603060100/tl0603060101/cm2966772849/icontext.xml"/></content-media>
<content-text></content-text>
</page>
</topic>
</section>
</chapter>
