<chapter type="" id="en1402000000">
<title><content-text>PPP</content-text></title>
<section type="ChapterIntroduction" id="en1402000000">
<title><content-text>Chapter Introduction</content-text></title>
<topic type="" id="en1402000100">
<title><content-text>Chapter Introduction</content-text></title>
<page type="OneColumn" id="en1402000101">
<content-media type="StaticGraphic" id="cm4296201038">	<title><content-text></content-text></title>	<media ref="en1402000000/en1402000000/en1402000100/en1402000101/cm4296201038.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en1402000000/en1402000000/en1402000100/en1402000101/cm4296201038text.xml"/></content-media>
<content-text><p>This chapter starts your exploration of WAN technologies by introducing point-to-point communications and the <content-link target="{94D85EEA-C16E-4B22-A5B6-5115F0484684}" type="glossary">Point-to-Point Protocol</content-link> (PPP). </p> <p>One of the most common types of WAN connection is the point-to-point connection. Point-to-point connections are used to connect LANs to service provider WANs, and to connect LAN segments within an Enterprise network. A LAN-to-WAN point-to-point connection is also referred to as a serial connection or leased-line connection, because the lines are leased from a carrier (usually a telephone company) and are dedicated for use by the company leasing the lines. Companies pay for a continuous connection between two remote sites, and the line is continuously active and available. Understanding how point-to-point communication links function to provide access to a WAN is important to an overall understanding of how WANs function. </p> <p>Point-to-Point Protocol (PPP) provides multiprotocol LAN-to-WAN connections handling <content-link target="{9008538D-A177-4909-9433-6A2C8AF6863E}" type="glossary">TCP/IP</content-link>, <content-link target="{6738D592-D485-4B76-ABA9-804BF641F8DD}" type="glossary">IPX</content-link>, and <content-link target="{BF30ADD2-9C40-4A1F-A5EA-7692E4DD7536}" type="glossary">AppleTalk</content-link> simultaneously. It can be used over <content-link target="{D748E72E-2EA8-41BF-A1CD-B728FCC98F3F}" type="glossary">twisted pair</content-link>, fiber-optic lines, and satellite transmission. PPP provides transport over ATM, Frame Relay, ISDN and optical links. In modern networks, security is a key concern. PPP allows you to authenticate connections using either <content-link target="{B3BAA0BE-2DE9-48B2-9092-952B37A28014}" type="glossary">Password Authentication Protocol</content-link> (<content-link target="{EEFA4D9C-ADD6-4DC4-8CFC-36F1623BD38E}" type="glossary">PAP</content-link>) or the more effective <content-link target="{07DE01B6-A834-4735-B273-D377BAE266DE}" type="glossary">Challenge Handshake Authentication Protocol</content-link> (CHAP). These are taught in the fourth section. </p> <p>In this chapter you will also learn the key concepts of serial communications, and how to configure and troubleshoot a PPP serial connection on a Cisco router. </p></content-text>
</page>
</topic>
</section>
<section type="" id="en1402010000">
<title><content-text>Serial Point-to-Point Links</content-text></title>
<topic type="" id="en1402010100">
<title><content-text>Introducing Serial Communications</content-text></title>
<page type="OneColumn" id="en1402010101">
<content-media type="AnimationPartialScreen" id="cm399064158">	<title><content-text></content-text></title>	<media ref="en1402000000/en1402010000/en1402010100/en1402010101/cm399064158.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en1402000000/en1402010000/en1402010100/en1402010101/cm399064158text.xml"/></content-media>
<content-text><p><b>How Does Serial Communication Work?</b></p> <p>You know that most PCs have both serial and parallel ports. You also know that electricity can only move at one speed. One way to get bits to move faster through a wire is to compress the data so that less bits are necessary and then require less time on the wire, or transmit the bits simultaneously. Computers make use of relatively short parallel connections between interior components, but use a serial <content-link target="{FE920326-4C2B-4990-9077-355E9578A37B}" type="glossary">bus</content-link> to convert signals for most external communications.</p> <p>Let's compare serial and parallel communications.</p> <p><b>Click the Serial and Parallel button to view the animation.</b></p> <p><ul><li>With a serial connection, information is sent across one wire, one data bit at a time. The 9-pin serial connector on most PCs uses two loops of wire, one in each direction, for data communication, plus additional wires to control the flow of information. In any given direction, data is still flowing over a single wire. </li><li>A parallel connection sends the bits over more wires simultaneously. In the case of the 25-pin parallel port on your PC, there are eight data-carrying wires to carry 8 bits simultaneously. Because there are eight wires to carry the data, the parallel link theoretically transfers data eight times faster than a serial connection. So based on this theory, a parallel connection sends a byte in the time a serial connection sends a bit. </li></ul></p> <p>This explanation brings up some questions. What is meant by theoretically faster? If parallel is faster than serial, is parallel more suitable for connecting to a WAN? In reality, it is often the case that serial links can be clocked considerably faster than parallel links, and they achieve a higher data rate, because of two factors that affect parallel communications: clock skew and crosstalk <content-link target="{C1247259-7EE3-4AC8-A1A1-FED8EB49E252}" type="glossary">interference</content-link>. </p> <p><b>Click the Clock Skew button in the figure.</b></p> <p>In a parallel connection, it is wrong to assume that the 8 bits leaving the sender at the same time arrive at the receiver at the same time. Rather, some of the bits get there later than others. This is known as clock skew. Overcoming clock skew is not trivial. The receiving end must synchronize itself with the transmitter and then wait until all the bits have arrived. The process of reading, waiting, latching, waiting for clock signal, and transmitting the 8 bits adds time to the transmission. In parallel communications, a latch is a data storage system used to store information in sequential logic systems. The more wires you use and the farther the connection reaches, compounds the problem and adds delay. The need for clocking slows <content-link target="{AD17FB43-BF42-44A9-88CD-F3F97CAFA4AD}" type="glossary">parallel transmission</content-link> well below theoretical expectations. </p> <p>This is not a factor with serial links, because most serial links do not need clocking. Serial connections require fewer wires and cables. They occupy less space and can be better isolated from interference from other wires and cables. </p> <p><b>Click the Interference button in the figure.</b></p> <p>Parallel wires are physically bundled in a parallel cable, and signals can imprint themselves on each other. The possibility of crosstalk across the wires requires more processing, especially at higher frequencies. The serial buses on computers, including routers, compensate for crosstalk before transmitting the bits. Since serial cables have fewer wires, there is less crosstalk, and network devices transmit serial communications at higher, more efficient frequencies. </p> <p>In most cases, serial communications are considerably cheaper to implement. Serial communications use fewer wires, cheaper cables, and fewer connector pins.</p></content-text>
</page>
<page type="OneColumn" id="en1402010102">
<content-media type="StaticGraphic" id="cm7279958131">	<title><content-text></content-text></title>	<media ref="en1402000000/en1402010000/en1402010100/en1402010102/cm7279958131.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en1402000000/en1402010000/en1402010100/en1402010102/cm7279958131text.xml"/></content-media>
<content-text><p><b>Serial Communication Standards</b></p> <p> </p> <p>All long-haul communications and most computer networks use serial connections, because the cost of cable and synchronization difficulties make parallel connections impractical. The most significant advantage is simpler wiring. Also, serial cables can be longer than parallel cables, because there is much less interaction (crosstalk) among the <content-link target="{A4B395B5-DFC8-4005-910F-1C7CC6AABA91}" type="glossary">conductors</content-link> in the cable. In this chapter, we will confine our consideration of serial communications to those connecting LANs to WANs.</p> <p>The figure is a simple representation of a serial communication. Data is encapsulated by the communications protocol used by the sending router. The encapsulated frame is sent on a <content-link target="{577D52F7-C91C-4EFD-9058-D84E387D11A4}" type="glossary">physical medium</content-link> to the WAN. There are various ways to traverse the WAN, but the receiving router uses the same communications protocol to de-encapsulate the frame when it arrives.</p> <p>There are many different serial communication standards, each one using a different signaling method. There are three key serial communication standards affecting LAN-to-WAN connections:</p> <p><ul><li><b>RS-232</b> - Most serial ports on personal computers conform to the RS-232C or newer <content-link target="{7B9448F5-5886-4332-88D2-FA2FA9DCAD4A}" type="glossary">RS-422</content-link> and RS-423 standards. Both 9-pin and 25-pin connectors are used. A serial port is a general-purpose interface that can be used for almost any type of device, including modems, mice, and printers. Many network devices use RJ-45 connectors that also conform to the RS-232 standard. The figure shows an example of an RS-232 connector. </li><li><b>V.35</b> - Typically used for modem-to-multiplexer communication, this ITU standard for high-speed, synchronous data exchange combines the bandwidth of several telephone circuits. In the U.S., V.35 is the interface standard used by most routers and DSUs that connect to T1 carriers. V.35 cables are high-speed serial assemblies designed to support higher data rates and connectivity between DTEs and DCEs over digital lines. There is more on DTEs and DCEs later in this section.</li><li><b>HSSI</b> - A High-Speed Serial Interface (HSSI) supports transmission rates up to 52 Mb/s. Engineers use HSSI to connect routers on LANs with WANs over high-speed lines such as T3 lines. Engineers also use HSSI to provide high-speed connectivity between LANs, using <content-link target="{46FCF3BE-3E64-417D-9EE5-12E458850691}" type="glossary">Token Ring</content-link> or Ethernet. HSSI is a DTE/DCE interface developed by Cisco Systems and T3plus Networking to address the need for high-speed communication over WAN links.</li></ul></p> <p><b>Click the RS-232 button in the figure.</b></p> <p>As well as using different signaling methods, each of these standards uses different types of cables and connectors. Each standard plays a different role in a LAN-to-WAN topology. While this course does not examine the details of V.35 and HSSI pinning schemes, a quick look at a 9-pin RS-232 connector used to connect a PC to a modem helps illustrate the concept. A later topic looks at V.35 and HSSI cables.</p> <p><ul><li>Pin 1 - Data Carrier Detect (DCD) indicates that the carrier for the transmit data is ON. </li><li>Pin 2 - The receive pin (RXD) carries data from the serial device to the computer.</li><li>Pin 3 - The transmit pin (TxD) carries data from the computer to the serial device.</li><li>Pin 4 - <content-link target="{EF3F8E2D-D89A-48A5-9E0C-9B2205591136}" type="glossary">Data Terminal Ready</content-link> (<content-link target="{AA9A37F0-5604-452C-A347-F92C7371F95D}" type="glossary">DTR</content-link>) indicates to the modem that the computer is ready to transmit.</li><li>Pin 5 - Ground</li><li>Pin 6 - Data Set Ready (<content-link target="{323FBF54-E3A6-4651-93A0-5F7B6121D73C}" type="glossary">DSR</content-link>) is similar to DTR. It indicates that the Dataset is ON.</li><li>Pin 7 - The RTS pin requests clearance to send data to a modem</li><li>Pin 8 - The serial device uses the <content-link target="{CB964CD4-60BC-4C6D-B795-2E27F4C1DDEB}" type="glossary">Clear to Send</content-link> (<content-link target="{DEECCD2D-9672-4E68-A1AB-C6BB3431E343}" type="glossary">CTS</content-link>) pin to acknowledge the RTS signal of the computer. In most situations, RTS and CTS are constantly ON throughout the communication session.</li><li>Pin 9 - An auto answer modem uses the Ring Indicator (RI) to signal receipt of a telephone ring signal.</li></ul></p> <p>The DCD and RI pins are only available in connections to a modem. These two lines are used rarely because most modems transmit status information to a PC when a carrier signal is detected (when a connection is made to another modem) or when the modem receives a ring signal from the telephone line.</p></content-text>
</page>
</topic>
<topic type="" id="en1402010200">
<title><content-text>TDM</content-text></title>
<page type="OneColumn" id="en1402010201">
<content-media type="StaticGraphic" id="cm2428824174">	<title><content-text></content-text></title>	<media ref="en1402000000/en1402010000/en1402010200/en1402010201/cm2428824174.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en1402000000/en1402010000/en1402010200/en1402010201/cm2428824174text.xml"/></content-media>
<content-text><p><b>Time Division Multiplexing</b></p> <p> </p> <p>Bell Laboratories invented <content-link target="{F9E088A1-DD58-47D4-BFE8-24B6AE96F850}" type="glossary">time-division multiplexing</content-link> (TDM) to maximize the amount of voice traffic carried over a medium. Before multiplexing, each telephone call required its own physical link. This was an expensive and unscalable solution. TDM divides the bandwidth of a single link into separate channels or time slots. TDM transmits two or more channels over the same link by allocating a different time interval (time slot) for the transmission of each channel. In effect, the channels take turns using the link. </p> <p>TDM is a Physical layer concept. It has no regard for the nature of the information that is being multiplexed onto the output channel. TDM is independent of the Layer 2 protocol that has been used by the input channels.</p> <p>TDM can be explained by an analogy to highway traffic. To transport traffic from four roads to another city, you can send all the traffic on one lane if the feeding roads are equally serviced and the traffic is synchronized. So, if each of the four roads puts a car onto the main highway every four seconds, the highway gets a car at the rate of one each second. As long as the speed of all the cars is synchronized, there is no collision. At the destination, the reverse happens and the cars are taken off the highway and fed to the local roads by the same synchronous mechanism.</p> <p>This is the principle used in synchronous TDM when sending data over a link. TDM increases the capacity of the <content-link target="{1E8228B9-185D-4DFF-933D-F43F8CA7D0F8}" type="glossary">transmission link</content-link> by slicing time into smaller intervals so that the link carries the bits from multiple input sources, effectively increasing the number of bits transmitted per second. With TDM, the transmitter and the receiver both know exactly which signal is being sent. </p> <p>In our example, a multiplexer (MUX) at the transmitter accepts three separate signals. The MUX breaks each signal into segments. The MUX puts each segment into a single channel by inserting each segment into a timeslot. </p> <p>A MUX at the receiving end reassembles the TDM stream into the three separate <content-link target="{06B803B4-B6AA-496A-BB94-F0E207493D85}" type="glossary">data streams</content-link> based only on the timing of the arrival of each bit. A technique called bit interleaving keeps track of the number and sequence of the bits from each specific transmission so that they can be quickly and efficiently reassembled into their original form upon receipt. Byte interleaving performs the same functions, but because there are eight bits in each byte, the process needs a bigger or longer time slot.</p></content-text>
</page>
<page type="OneColumn" id="en1402010202">
<content-media type="StaticGraphic" id="cm7368365086">	<title><content-text></content-text></title>	<media ref="en1402000000/en1402010000/en1402010200/en1402010202/cm7368365086.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en1402000000/en1402010000/en1402010200/en1402010202/cm7368365086text.xml"/></content-media>
<content-text><p><b>Statistical Time Division Multiplexing</b></p> <p> </p> <p>In another analogy, compare TDM to a train with 32 railroad cars. Each car is owned by a different freight company, and every day the train leaves with the 32 cars attached. If one of the companies has cargo to send, the car is loaded. If the company has nothing to send, the car remains empty but stays on the train. Shipping empty containers is not very efficient. TDM shares this inefficiency when traffic is intermittent, because the time slot is still allocated even when the channel has no data to transmit. </p> <p><content-link target="{69F66EF2-1477-4249-8C5A-8625B5FAC877}" type="glossary">Statistical time-division multiplexing</content-link> (STDM) was developed to overcome this inefficiency. STDM uses a variable time slot length allowing channels to compete for any free slot space. It employs a <content-link target="{644A1A6D-2155-4D87-BA98-27FAE094D70A}" type="glossary">buffer</content-link> memory that temporarily stores the data during periods of peak traffic. STDM does not waste high-speed line time with inactive channels using this scheme. STDM requires each transmission to carry identification information (a channel identifier).</p></content-text>
</page>
<page type="OneColumn" id="en1402010203">
<content-media type="StaticGraphic" id="cm8793810519">	<title><content-text></content-text></title>	<media ref="en1402000000/en1402010000/en1402010200/en1402010203/cm8793810519.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en1402000000/en1402010000/en1402010200/en1402010203/cm8793810519text.xml"/></content-media>
<content-text><p><b>TDM Examples - ISDN and SONET</b></p> <p>An example of a technology that uses synchronous TDM is ISDN. ISDN basic rate (BRI) has three channels consisting of two 64 kb/s B-channels (B1 and B2), and a 16 kb/s D-channel. The TDM has nine timeslots, which are repeated in the sequence shown in the figure.</p> <p>On a larger scale, the telecommunications industry uses the <content-link target="{B4A5B7D1-A36E-4945-BE9E-B0249F749417}" type="glossary">SONET</content-link> or SDH standard for optical transport of TDM data. SONET, used in North America, and SDH, used elsewhere, are two closely related standards that specify interface parameters, rates, framing formats, multiplexing methods, and management for synchronous TDM over fiber. </p> <p><b>Click the SONET button in the figure.</b></p> <p>The figure displays an example of statistical TDM. SONET/SDH takes n bit streams, multiplexes them, and optically modulates the signal, sending it out using a light emitting device over fiber with a bit rate equal to (incoming bit rate) x n. Thus traffic arriving at the SONET multiplexer from four places at 2.5 Gb/s goes out as a single stream at 4 x 2.5 Gb/s, or 10 Gb/s. This principle is illustrated in the figure, which shows an increase in the bit rate by a factor of four in time slot T. </p> <p><b>Click the DS0 button in the figure.</b></p> <p>The original unit used in multiplexing telephone calls is 64 kb/s, which represents one phone call. It is referred to as a <content-link target="{1C4BECBB-CC3F-4D4A-8D12-ABE82F2098BD}" type="glossary">DS0</content-link> (digital signal level zero). In North America, 24 DS0 units are multiplexed using TDM into a higher bit-rate signal with an aggregate speed of 1.544 Mb/s for transmission over T1 lines. Outside North America, 32 DS0 units are multiplexed for E1 transmission at 2.048 Mb/s. </p> <p>The signal level hierarchy for multiplexing telephone calls is shown in the table. As an aside, while it is common to refer to a 1.544 Mb/s transmission as a T1, it is more correct to refer to it as DS1. </p> <p><b>Click the T-Carrier Hierarchy button in the figure.</b></p> <p>T-carrier refers to the bundling of DS0s. For example, a T1 = 24 DS0s, a T1C = 48 DS0s (or 2 T1s), and so on. The figure shows a sample T-carrier infrastructure hierarchy. E-Carrier Hierarchy is similar.</p></content-text>
</page>
</topic>
<topic type="" id="en1402010300">
<title><content-text>Demarcation Point</content-text></title>
<page type="OneColumn" id="en1402010301">
<content-media type="StaticGraphic" id="cm6635815420">	<title><content-text></content-text></title>	<media ref="en1402000000/en1402010000/en1402010300/en1402010301/cm6635815420.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en1402000000/en1402010000/en1402010300/en1402010301/cm6635815420text.xml"/></content-media>
<content-text><p><b>Demarcation Point</b></p> <p> </p> <p>Prior to deregulation in North America and other countries, telephone companies owned the local loop, including the wiring and equipment on the premises of the customers. Deregulation forced telephone companies to unbundle their local loop infrastructure to allow other suppliers to provide equipment and services. This led to a need to delineate which part of the network the telephone company owned and which part the customer owned. This point of delineation is the demarcation point, or demarc. The demarcation point marks the point where your network interfaces with the network owned by another organization. In telephone terminology, this is the interface between customer-premises equipment (CPE) and network service provider equipment. The demarcation point is the point in the network where the responsibility of the service provider ends. </p> <p>The example presents an ISDN scenario. In the United States, a service provider provides the local loop into the customer premises, and the customer provides the active equipment such as the channel service unit/data service unit (CSU/DSU) on which the local loop is terminated. This termination often occurs in a telecommunications closet, and the customer is responsible for maintaining, replacing, or repairing the equipment. In other countries, the network terminating unit (NTU) is provided and managed by the service provider. This allows the service provider to actively manage and troubleshoot the local loop with the demarcation point occurring after the NTU. The customer connects a CPE device, such as a router or <content-link target="{2CF9E1FA-3344-4239-844A-514B25775D9E}" type="glossary">frame relay access device</content-link>, to the NTU using a V.35 or RS-232 serial interface. </p></content-text>
</page>
</topic>
<topic type="" id="en1402010400">
<title><content-text>DTE and DCE</content-text></title>
<page type="OneColumn" id="en1402010401">
<content-media type="StaticGraphic" id="cm3491557300">	<title><content-text></content-text></title>	<media ref="en1402000000/en1402010000/en1402010400/en1402010401/cm3491557300.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en1402000000/en1402010000/en1402010400/en1402010401/cm3491557300text.xml"/></content-media>
<content-text><p><b>DTE-DCE</b></p> <p> </p> <p>From the point of view of connecting to the WAN, a serial connection has a DTE device at one end of the connection and a DCE device at the other end. The connection between the two DCE devices is the WAN service provider transmission network. In this case:</p> <p><ul><li>The CPE, which is generally a router, is the DTE. The DTE could also be a terminal, computer, printer, or fax machine if they connect directly to the service provider network. </li><li>The DCE, commonly a modem or CSU/DSU, is the device used to convert the user data from the DTE into a form acceptable to the WAN service provider transmission link. This signal is received at the remote DCE, which decodes the signal back into a sequence of bits. The remote DCE then signals this sequence to the remote DTE.</li></ul></p> <p>The Electronics Industry Association (EIA) and the International Telecommunication Union Telecommunications Standardization Sector (ITU-T) have been most active in the development of standards that allow DTEs to communicate with DCEs. The EIA refers to the DCE as data communication equipment, while the ITU-T refers to the DCE as data circuit-terminating equipment.</p></content-text>
</page>
<page type="OneColumn" id="en1402010402">
<content-media type="InteractiveGraphicHotspots" id="cm9594906411">	<title><content-text></content-text></title>	<media ref="en1402000000/en1402010000/en1402010400/en1402010402/cm9594906411.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en1402000000/en1402010000/en1402010400/en1402010402/cm9594906411text.xml"/></content-media>
<content-text><p><b>Cable Standards</b></p> <p> </p> <p>Originally, the concept of DCEs and DTEs was based on two types of equipment: terminal equipment that generated or received data, and communication equipment that only relayed data. In the development of the RS-232 standard, there were reasons why 25-pin RS-232 connectors on these two types of equipment needed to be wired differently. These reasons are no longer significant, but we are left with two different types of cables: one for connecting a DTE to a DCE, and another for connecting two DTEs directly to each other.</p> <p>The DTE/DCE interface for a particular standard defines the following specifications:</p> <p><ul><li>Mechanical/physical - Number of pins and connector type </li><li>Electrical - Defines voltage levels for 0 and 1 </li><li>Functional - Specifies the functions that are performed by assigning meanings to each of the signaling lines in the interface </li><li>Procedural - Specifies the sequence of events for transmitting data </li></ul></p> <p> </p> <p><b>Click the Serial Cables button in the figure.</b></p> <p>The original RS-232 standard only defined the connection of DTEs with DCEs, which were modems. However, if you want to connect two DTEs, such as two computers or two routers in the lab, a special cable called a null modem eliminates the need for a DCE. In other words, the two devices can be connected without a modem. A null modem is a communication method to directly connect two DTEs, such as a computer, terminal, or printer, using a RS-232 serial cable. With a <content-link target="{57413ED8-0E8F-4C15-9529-F56B04FCD287}" type="glossary">null modem</content-link> connection, the transmit (Tx) and receive (Rx) lines are crosslinked as shown in the figure.</p> <p><b>Click the DB-60 Connector button in the figure.</b></p> <p>The cable for the DTE to DCE connection is a shielded serial transition cable. The router end of the shielded serial transition cable may be a DB-60 connector, which connects to the DB-60 port on a serial WAN interface card. The other end of the serial transition cable is available with the connector appropriate for the standard that is to be used. The WAN provider or the CSU/DSU usually dictates this cable type. Cisco devices support the EIA/TIA-232, EIA/TIA-449, V.35, X.21, and EIA/TIA-530 serial standards. </p> <p><b>Click the Smart Serial Connector button in the figure.</b></p> <p>To support higher port densities in a smaller form factor, Cisco has introduced a Smart Serial cable. The router interface end of the Smart Serial cable is a 26-pin connector that is significantly more compact than the DB-60 connector.</p> <p><b>Click the Router-to-Router button in the figure.</b></p> <p>When using a null modem, keep in mind that synchronous connections require a clock signal. An external device can generate the signal, or one of the DTEs can generate the clock signal. When a DTE and DCE are connected, the serial port on a router is the DTE end of the connection by default, and the clock signal is typically provided by a CSU/DSU or similar DCE device. However, when using a null modem cable in a router-to-router connection, one of the serial interfaces must be configured as the DCE end to provide the clock signal for the connection.</p></content-text>
</page>
<page type="OneColumn" id="en1402010403">
<content-media type="StaticGraphic" id="cm3240910835">	<title><content-text></content-text></title>	<media ref="en1402000000/en1402010000/en1402010400/en1402010403/cm3240910835.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en1402000000/en1402010000/en1402010400/en1402010403/cm3240910835text.xml"/></content-media>
<content-text><p><b>Parallel to Serial Conversion</b></p> <p> </p> <p>The terms DTE and DCE are relative with respect to what part of a network you are observing. RS-232C is the recommended standard (RS) describing the physical interface and protocol for relatively low-speed, serial data communication between computers and related devices. The EIA originally defined RS-232C for teletypewriter devices. The DTE is the RS-232C interface that a computer uses to exchange data with a modem or other serial device. The DCE is the RS-232C interface that a modem or other serial device uses in exchanging data with the computer.</p> <p>For instance, your PC typically uses an RS-232C interface to communicate and exchange data with connected serial devices such as a modem. Your PC also has a <content-link target="{3D421B38-95F8-41B5-A03A-580510E3C84B}" type="glossary">Universal Asynchronous Receiver/Transmitter</content-link> (<content-link target="{00FF0CBF-9DFC-4414-9BFC-B902107C90DC}" type="glossary">UART</content-link>) chip on the motherboard. Since the data in your PC flows along parallel circuits, the UART chip converts the groups of bits in parallel to a serial stream of bits. To work faster, a UART chip has buffers so it can cache data coming from the system bus while it processes data going out the serial port. The UART is the DTE <content-link target="{8EAAF808-B989-4615-A523-9949FF318FC8}" type="glossary">agent</content-link> of your PC and communicates with the modem or other serial device, which, in accordance with the RS-232C standard, has a complementary interface called the DCE interface.</p></content-text>
</page>
</topic>
<topic type="" id="en1402010500">
<title><content-text>HDLC Encapsulation</content-text></title>
<page type="OneColumn" id="en1402010501">
<content-media type="AnimationPartialScreen" id="cm3883504059">	<title><content-text></content-text></title>	<media ref="en1402000000/en1402010000/en1402010500/en1402010501/cm3883504059.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en1402000000/en1402010000/en1402010500/en1402010501/cm3883504059text.xml"/></content-media>
<content-text><p><b>WAN Encapsulation Protocols</b></p> <p> </p> <p>On each WAN connection, data is encapsulated into frames before crossing the WAN link. To ensure that the correct protocol is used, you need to configure the appropriate Layer 2 encapsulation type. The choice of protocol depends on the WAN technology and the communicating equipment. The more common WAN protocols and where they are used is shown in the figure, following are short descriptions:</p> <p><ul><li><b>HDLC</b> - The default encapsulation type on point-to-point connections, dedicated links, and circuit-switched connections when the link uses two Cisco devices. HDLC is now the basis for synchronous PPP used by many servers to connect to a WAN, most commonly the Internet.</li><li><b>PPP</b> - Provides router-to-router and host-to-network connections over synchronous and asynchronous circuits. PPP works with several Network layer protocols, such as IP and <content-link target="{9B0FFAF0-3DAD-40D9-BBF8-296742D0A810}" type="glossary">Internetwork Packet Exchange</content-link> (IPX). PPP also has built-in security mechanisms such as PAP and CHAP. Most of this chapter deals with PPP.</li><li><b>Serial Line Internet Protocol (<content-link target="{396B5ED8-3276-405B-8B88-1030FABB58C5}" type="glossary">SLIP</content-link>)</b> - A standard protocol for point-to-point serial connections using TCP/IP. SLIP has been largely displaced by PPP.</li><li><b>X.25/<content-link target="{966D6B0E-A19F-48E3-98DC-2185F398575E}" type="glossary">Link Access Procedure, Balanced</content-link> (<content-link target="{34CF6682-CD38-4758-905D-BC08B4E932DA}" type="glossary">LAPB</content-link>)</b> - ITU-T standard that defines how connections between a DTE and DCE are maintained for remote terminal access and computer communications in public data networks. X.25 specifies LAPB, a Data Link layer protocol. X.25 is a predecessor to Frame Relay.</li><li><b>Frame Relay</b> - Industry standard, switched, Data Link layer protocol that handles multiple virtual circuits. Frame Relay is a next generation protocol after X.25. Frame Relay eliminates some of the time-consuming processes (such as error correction and flow control) employed in X.25. The next chapter is devoted to Frame Relay.</li><li><b>ATM</b> - The international standard for <content-link target="{2BCDB9BB-655C-458E-998A-EB5FC7FCAB5A}" type="glossary">cell relay</content-link> in which devices send multiple service types (such as voice, video, or data) in fixed-length (53-byte) cells. Fixed-length cells allow processing to occur in hardware, thereby reducing transit delays. ATM takes advantages of high-speed transmission <content-link target="{D885D76E-BE9A-4ED9-8CE7-78A4888521E9}" type="glossary">media</content-link> such as <content-link target="{E60B4EDE-EDBB-480D-A5F7-ED207789661A}" type="glossary">E3</content-link>, SONET, and T3.</li></ul></p></content-text>
</page>
<page type="OneColumn" id="en1402010502">
<content-media type="StaticGraphic" id="cm2822448042">	<title><content-text></content-text></title>	<media ref="en1402000000/en1402010000/en1402010500/en1402010502/cm2822448042.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en1402000000/en1402010000/en1402010500/en1402010502/cm2822448042text.xml"/></content-media>
<content-text><p><b>HLDC Encapsulation</b></p> <p> </p> <p>HDLC is a <content-link target="{359C3636-39D7-49E2-912E-E5DC4997A52D}" type="glossary">bit-oriented</content-link> synchronous Data Link layer protocol developed by the <content-link target="{2BA1314D-753B-4888-83A2-054CDBD8F0BE}" type="glossary">International Organization for Standardization</content-link> (<content-link target="{93DFA1AC-FE40-4F93-90D9-2233202155D3}" type="glossary">ISO</content-link>). The current standard for HDLC is ISO 13239. HDLC was developed from the <content-link target="{253837C0-C3EF-4684-AEA7-4615B1C66DC9}" type="glossary">Synchronous Data Link Control</content-link> (SDLC) standard proposed in the 1970s. HDLC provides both connection-oriented and connectionless service.</p> <p>HDLC uses synchronous <content-link target="{B19E3D56-0ABD-4543-B7C1-E692C1004CB6}" type="glossary">serial transmission</content-link> to provide error-free communication between two points. HDLC defines a Layer 2 framing structure that allows for flow control and error control through the use of acknowledgments. Each frame has the same format, whether it is a data frame or a control frame.</p> <p>When you want to transmit frames over synchronous or asynchronous links, you must remember that those links have no mechanism to mark the beginnings or ends of frames. HDLC uses a frame delimiter, or flag, to mark the beginning and the end of each frame.</p> <p>Cisco has developed an extension to the HLDC protocol to solve the inability to provide multiprotocol support. Although Cisco HLDC (also referred to as cHDLC) is proprietary, Cisco has allowed many other network equipment vendors to implement it. Cisco HDLC frames contain a field for identifying the network protocol being encapsulated. The figure compares HLDC to Cisco HLDC.</p> <p><b>Click the HLDC Frame Types button in the figure.</b></p> <p>HDLC defines three types of frames, each with a different control field format. The following descriptions summarize the fields illustrated in the figure.</p>  <p><b>Flag</b> - The flag field initiates and terminates error checking. The frame always starts and ends with an 8-bit flag field. The bit pattern is 01111110. Because there is a likelihood that this pattern occurs in the actual data, the sending HDLC system always inserts a 0 bit after every five 1s in the data field, so in practice the flag sequence can only occur at the frame ends. The receiving system strips out the inserted bits. When frames are transmitted consecutively, the end flag of the first frame is used as the start flag of the next frame. </p> <p><b>Address</b> - The address field contains the HDLC address of the secondary station. This address can contain a specific address, a group address, or a <content-link target="{56F65F51-CCE7-4B9B-A139-74729EFD649B}" type="glossary">broadcast address</content-link>. A primary address is either a communication source or a destination, which eliminates the need to include the address of the primary. </p> <p><b>Control</b> - The control field uses three different formats, depending on the type of HDLC frame used: </p> <p><ul><li><b>Information (I) frame:</b> I-frames carry upper layer information and some control information. This frame sends and receives <content-link target="{BD96A90F-5261-4D4D-836C-146032461C8D}" type="glossary">sequence numbers</content-link>, and the poll final (P/F) bit performs flow and error control. The send sequence number refers to the number of the frame to be sent next. The receive sequence number provides the number of the frame to be received next. Both sender and receiver maintain send and receive sequence numbers. A <content-link target="{716891A2-1271-40A4-9B03-E03CB6E1E14B}" type="glossary">primary station</content-link> uses the P/F bit to tell the secondary whether it requires an immediate response. A secondary station uses the P/F bit to tell the primary whether the current frame is the last in its current response. </li><li><b>Supervisory (S) frame</b><b>:</b> S-frames provide control information. An S-frame can request and suspend transmission, report on status, and acknowledge receipt of I-frames. S-frames do not have an information field. </li><li><b>Unnumbered (U) frame:</b> U-frames support control purposes and are not sequenced. A U-frame can be used to initialize secondaries. Depending on the function of the U-frame, its control field is 1 or 2 bytes. Some U-frames have an information field.</li></ul></p> <p><b>Protocol</b>-(only used in Cisco HDLC) This field specifies the protocol type encapsulated within the frame (e.g. 0x0800 for IP). </p> <p><b>Data</b>-The data field contains a path information unit (PIU) or exchange identification (<content-link target="{4C7BD740-AC1F-48BF-99C4-2CB817933DD5}" type="glossary">XID</content-link>) information. </p> <p><b>Frame check sequence (FCS)</b>-The FCS precedes the ending flag delimiter and is usually a cyclic redundancy check (CRC) calculation remainder. The CRC calculation is redone in the receiver. If the result differs from the value in the original frame, an error is assumed.</p></content-text>
</page>
</topic>
<topic type="" id="en1402010600">
<title><content-text>Configuring HDLC Encapsulation</content-text></title>
<page type="OneColumn" id="en1402010601">
<content-media type="StaticGraphic" id="cm2122144097">	<title><content-text></content-text></title>	<media ref="en1402000000/en1402010000/en1402010600/en1402010601/cm2122144097.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en1402000000/en1402010000/en1402010600/en1402010601/cm2122144097text.xml"/></content-media>
<content-text><p><b>Configuring HDLC Encapsulation</b></p> <p> </p> <p>Cisco HDLC is the default encapsulation method used by Cisco devices on synchronous serial lines. </p> <p>You use Cisco HDLC as a point-to-point protocol on leased lines between two Cisco devices. If you are connecting to a non-Cisco device, use synchronous PPP.</p> <p>If the default encapsulation method has been changed, use the <span class="cmd"><b>encapsulation hdlc</b></span> command in privileged mode to re-enable HDLC. </p> <p>There are two steps to enable HDLC encapsulation:</p> <p><b>Step 1.</b> Enter the interface configuration mode of the serial interface.</p> <p><b>Step 2.</b> Enter the <span class="cmd"><b>encapsulation hdlc</b></span> command to specify the encapsulation protocol on the interface.</p></content-text>
</page>
</topic>
<topic type="" id="en1402010700">
<title><content-text>Troubleshooting a Serial Interface</content-text></title>
<page type="OneColumn" id="en1402010701">
<content-media type="StaticGraphic" id="cm7412907762">	<title><content-text></content-text></title>	<media ref="en1402000000/en1402010000/en1402010700/en1402010701/cm7412907762.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en1402000000/en1402010000/en1402010700/en1402010701/cm7412907762text.xml"/></content-media>
<content-text><p>The output of the <span class="cmd"><b>show interfaces serial</b></span> command displays information specific to serial interfaces. When HDLC is configured, "Encapsulation HDLC" should be reflected in the output, as highlighted in the figure.</p> <p><b>Click the Possible States button in the figure.</b></p> <p>The <span class="cmd"><b>show interface serial</b></span> command returns one of five possible states. You can identify any of the following five possible problem states in the interface status line:</p> <p> </p> <p><b>Click the Status button in the figure.</b></p> <p><ul><li>Serial x is down, line protocol is down </li><li>Serial x is up, line protocol is down </li><li>Serial x is up, line protocol is up (looped) </li><li>Serial x is up, line protocol is down (disabled) </li><li>Serial x is administratively down, line protocol is down </li></ul></p> <p> </p> <p><b>Click the Controllers button in the figure.</b></p> <p>The <span class="cmd"><b>show controllers</b></span> command is another important diagnostic tool when troubleshooting serial lines. The output indicates the state of the interface channels and whether a cable is attached to the interface. In the figure, serial interface 0/0 has a V.35 DCE cable attached. The command syntax varies, depending on the platform. <content-link target="{CA96DC33-6021-49EF-A034-B38F7F6B1560}" type="glossary">Cisco 7000</content-link> series routers use a cBus controller card for connecting serial links. With these routers, use the <span class="cmd"><b>show controllers cbus</b></span> command. </p> <p>If the electrical interface output is shown as <b>UNKNOWN</b> instead of <b>V.35</b>, <b>EIA/TIA-449</b>, or some other electrical interface type, the likely problem is an improperly connected cable. A problem with the internal wiring of the card is also possible. If the electrical interface is unknown, the corresponding display for the <span class="cmd"><b>show interfaces serial &lt;x></b></span> command shows that the interface and line protocol are down.</p></content-text>
</page>
<page type="OneColumn" id="en1402010702">
<content-media type="ActivityPKA" id="cm7228416946">	<title><content-text></content-text></title>	<media ref="en1402000000/en1402010000/en1402010700/en1402010702/cm7228416946/" mime="application/packettracer" scale="true" type="directory" width="0" height="0" external="en1402000000/en1402010000/en1402010700/en1402010702/cm7228416946/icontext.xml"/></content-media>
<content-text><p>In this activity, you will practice troubleshooting serial interfaces. Detailed instructions are provided within the activity as well as in the PDF link below.</p> <p><content-link target="E4_PTAct_2_1_7.pdf" type="internalfile">Activity Instructions (PDF)</content-link></p> <p><b>Click the Packet Tracer icon for more details.</b></p></content-text>
</page>
<page type="FullScreen" id="en1402010703">
<content-media type="ActivityCustom" id="cm8132699887">	<title><content-text></content-text></title>	<media ref="en1402000000/en1402010000/en1402010700/en1402010703/cm8132699887.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en1402000000/en1402010000/en1402010700/en1402010703/cm8132699887text.xml"/></content-media>
<content-text><p><b>Complex Flash: Identifying WAN Technology Components and Concepts</b></p></content-text>
</page>
</topic>
</section>
<section type="" id="en1402020000">
<title><content-text>PPP Concepts</content-text></title>
<topic type="" id="en1402020100">
<title><content-text>Introducing PPP</content-text></title>
<page type="OneColumn" id="en1402020101">
<content-media type="StaticGraphic" id="cm5484199683">	<title><content-text></content-text></title>	<media ref="en1402000000/en1402020000/en1402020100/en1402020101/cm5484199683.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en1402000000/en1402020000/en1402020100/en1402020101/cm5484199683text.xml"/></content-media>
<content-text><p><b>What is PPP?</b></p> <p>Recall that HDLC is the default serial encapsulation method when you connect two Cisco routers. With an added protocol type field, the Cisco version of HDLC is proprietary. Thus, Cisco HDLC can only work with other Cisco devices. However, when you need to connect to a non-Cisco router, you should use PPP encapsulation.</p> <p>PPP encapsulation has been carefully designed to retain compatibility with most commonly used supporting hardware. PPP encapsulates data frames for transmission over Layer 2 physical links. PPP establishes a direct connection using serial cables, phone lines, <content-link target="{F88ADC95-841A-4F47-A188-BD2926AA41C7}" type="glossary">trunk</content-link> lines, cellular telephones, specialized radio links, or fiber-optic links. There are many advantages to using PPP, including the fact that it is not proprietary. Moreover, it includes many features not available in HDLC:</p> <p><ul><li> The link quality management feature monitors the quality of the link. If too many errors are detected, PPP takes the link down. </li><li> PPP supports PAP and <content-link target="{7336B9B6-272D-422E-8F47-996FB192450C}" type="glossary">CHAP</content-link> authentication. This feature is explained and practiced in a later section.</li></ul></p> <p>PPP contains three main components: </p> <p><ul><li> HDLC protocol for encapsulating <content-link target="{6B63E762-4EAB-40DF-82CC-357D94002510}" type="glossary">datagrams</content-link> over point-to-point links. </li><li> Extensible Link Control Protocol (<content-link target="{81D73872-FA4C-4E28-8E33-C0A72EDA9353}" type="glossary">LCP</content-link>) to establish, configure, and test the data link connection. </li><li> Family of Network Control Protocols (<content-link target="{9BB3F04A-3B62-4AA7-9D2A-0403B61F858F}" type="glossary">NCPs</content-link>) for establishing and configuring different Network layer protocols. PPP allows the simultaneous use of multiple Network layer protocols. Some of the more common NCPs are Internet Protocol Control Protocol, Appletalk Control Protocol, <content-link target="{021AFBA5-A50E-4FDD-A8F4-848FE72930F2}" type="glossary">Novell IPX</content-link> Control Protocol, Cisco Systems Control Protocol, <content-link target="{E658B098-D9E9-488A-BA8D-401E405C5F1C}" type="glossary">SNA</content-link> Control Protocol, and Compression Control Protocol.</li></ul></p></content-text>
</page>
</topic>
<topic type="" id="en1402020200">
<title><content-text>PPP Layered Architecture</content-text></title>
<page type="OneColumn" id="en1402020201">
<content-media type="StaticGraphic" id="cm2744087913">	<title><content-text></content-text></title>	<media ref="en1402000000/en1402020000/en1402020200/en1402020201/cm2744087913.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en1402000000/en1402020000/en1402020200/en1402020201/cm2744087913text.xml"/></content-media>
<content-text><p><b>PPP Architecture</b></p> <p>A layered architecture is a logical model, design, or blueprint that aids in communication between interconnecting layers. The figure maps the layered architecture of PPP against the Open System Interconnection (OSI) model. PPP and OSI share the same Physical layer, but PPP distributes the functions of LCP and NCP differently. </p> <p>At the Physical layer, you can configure PPP on a range of interfaces, including:</p> <p><ul><li>Asynchronous serial </li><li>Synchronous serial </li><li>HSSI</li><li>ISDN </li></ul></p> <p>PPP operates across any DTE/DCE interface (RS-232-C, RS-422, RS-423, or V.35). The only absolute requirement imposed by PPP is a duplex circuit, either dedicated or switched, that can operate in either an asynchronous or synchronous bit-serial mode, transparent to PPP link layer frames. PPP does not impose any restrictions regarding transmission rate other than those imposed by the particular DTE/DCE interface in use. </p> <p>Most of the work done by PPP is at the data link and Network layers by the LCP and NCPs. The LCP sets up the PPP connection and its parameters, the NCPs handle higher layer protocol configurations, and the LCP terminates the PPP connection.</p></content-text>
</page>
<page type="OneColumn" id="en1402020202">
<content-media type="StaticGraphic" id="cm9671494820">	<title><content-text></content-text></title>	<media ref="en1402000000/en1402020000/en1402020200/en1402020202/cm9671494820.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en1402000000/en1402020000/en1402020200/en1402020202/cm9671494820text.xml"/></content-media>
<content-text><p><b>PPP Architecture - Link Control Protocol Layer</b></p> <p> </p> <p>The LCP is the real working part of PPP. The LCP sits on top of the Physical layer and has a role in establishing, configuring, and testing the data-link connection. The LCP establishes the point-to-point link. The LCP also negotiates and sets up control options on the WAN data link, which are handled by the NCPs. </p> <p>The LCP provides automatic configuration of the interfaces at each end, including:</p> <p><ul><li>Handling varying limits on packet size </li><li>Detecting common misconfiguration errors </li><li>Terminating the link </li><li>Determining when a link is functioning properly or when it is failing </li></ul></p> <p>PPP also uses the LCP to agree automatically on encapsulation formats (authentication, compression, error detection) as soon as the link is established. </p></content-text>
</page>
<page type="OneColumn" id="en1402020203">
<content-media type="StaticGraphic" id="cm8969742790">	<title><content-text></content-text></title>	<media ref="en1402000000/en1402020000/en1402020200/en1402020203/cm8969742790.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en1402000000/en1402020000/en1402020200/en1402020203/cm8969742790text.xml"/></content-media>
<content-text><p><b>PPP Architecture - Network Control Protocol Layer</b></p> <p> </p> <p>Point-to-point links tend to worsen many problems with the current family of network protocols. For instance, assignment and management of <content-link target="{78086AFB-D7A5-484C-8EBF-75E58648F035}" type="glossary">IP addresses</content-link>, which is a problem even in LAN environments, is especially difficult over circuit-switched point-to-point links (such as dialup modem servers). PPP addresses these issues using NCPs. </p> <p>PPP permits multiple Network layer protocols to operate on the same communications link. For every Network layer protocol used, PPP uses a separate NCP. For example, IP uses the IP Control Protocol (IPCP), and IPX uses the Novell IPX Control Protocol (IPXCP). </p> <p><b>Click the Network Layer button in the figure.</b></p> <p>NCPs include functional fields containing standardized codes (PPP protocol field numbers shown in the figure) to indicate the Network layer protocol that PPP encapsulates. Each NCP manages the specific needs required by its respective Network layer protocols. The various NCP components encapsulate and negotiate options for multiple Network layer protocols. Using NCPs to configure the various Network layer protocols is explained and practiced later in this chapter.</p></content-text>
</page>
</topic>
<topic type="" id="en1402020300">
<title><content-text>PPP Frame Structure</content-text></title>
<page type="OneColumn" id="en1402020301">
<content-media type="InteractiveGraphicRollovers" id="cm6837344563">	<title><content-text></content-text></title>	<media ref="en1402000000/en1402020000/en1402020300/en1402020301/cm6837344563.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en1402000000/en1402020000/en1402020300/en1402020301/cm6837344563text.xml"/></content-media>
<content-text><p><b>PPP Frame Structure</b></p> <p> </p> <p>A PPP frame has six fields as shown in the figure. </p> <p><b>Roll your mouse over each field </b>for an explanation of what each one contains and does. </p> <p>The LCP can negotiate modifications to the standard PPP frame structure.</p></content-text>
</page>
</topic>
<topic type="" id="en1402020400">
<title><content-text>Establishing a PPP Session</content-text></title>
<page type="OneColumn" id="en1402020401">
<content-media type="StaticGraphic" id="cm3797591187">	<title><content-text></content-text></title>	<media ref="en1402000000/en1402020000/en1402020400/en1402020401/cm3797591187.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en1402000000/en1402020000/en1402020400/en1402020401/cm3797591187text.xml"/></content-media>
<content-text><p><b>Establishing a PPP Session</b></p> <p> </p> <p>The figure shows the three phases of establishing a PPP session:</p> <p><ul><li><b>Phase 1: Link establishment and configuration negotiation</b> - Before PPP exchanges any Network layer datagrams (for example, IP), the LCP must first open the connection and negotiate configuration options. This phase is complete when the receiving router sends a configuration-acknowledgment frame back to the router initiating the connection. </li><li><b>Phase 2: Link quality determination (optional)</b> - The LCP tests the link to determine whether the link quality is sufficient to bring up Network layer protocols. The LCP can delay transmission of Network layer protocol information until this phase is complete. </li><li><b>Phase 3: Network layer protocol configuration negotiation</b> - After the LCP has finished the link quality determination phase, the appropriate NCP can separately configure the Network layer protocols, and bring them up and take them down at any time. If the LCP closes the link, it informs the Network layer protocols so that they can take appropriate action.</li></ul></p> <p>The link remains configured for communications until explicit LCP or NCP frames close the link, or until some external event occurs (for example, an inactivity timer expires or a user intervenes). The LCP can terminate the link at any time. This is usually done when one of the routers requests termination, but can happen because of a physical event, such as the loss of a carrier or the expiration of an idle-period timer.</p></content-text>
</page>
</topic>
<topic type="" id="en1402020500">
<title><content-text>Establishing a Link with LCP</content-text></title>
<page type="OneColumn" id="en1402020501">
<content-media type="StaticGraphic" id="cm4888373144">	<title><content-text></content-text></title>	<media ref="en1402000000/en1402020000/en1402020500/en1402020501/cm4888373144.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en1402000000/en1402020000/en1402020500/en1402020501/cm4888373144text.xml"/></content-media>
<content-text><p><b>LCP Operation</b></p> <p>LCP operation includes provisions for link establishment, link maintenance and link termination. LCP operation uses three classes of LCP frames to accomplish the work of each of the LCP phases:</p> <p><ul><li>Link-establishment frames establish and configure a link (Configure-Request, Configure-<content-link target="{BB93E3A1-CA39-4162-B5CE-958B2EA76B8E}" type="glossary">Ack</content-link>, Configure-<content-link target="{A429AA18-0BE5-4ACC-9BA4-93D5D4E00678}" type="glossary">Nak</content-link>, and Configure-Reject)</li><li>Link-maintenance frames manage and debug a link (Code-Reject, Protocol-Reject, Echo-Request, Echo-Reply, and Discard-Request)</li><li>Link-termination frames terminate a link (Terminate-Request and Terminate-Ack)</li></ul></p> <p>The first phase of LCP operation is link establishment. This phase must complete successfully, before any Network layer packets can be exchanged. During link establishment, the LCP opens the connection and negotiates the configuration parameters. </p> <p><b>Click the Link Negotiation button in the figure.</b></p> <p>The link establishment process starts with the initiating device sending a Configure-Request frame to the responder. The Configure-Request frame includes a variable number of configuration options needed to set up on the link. In other words, the initiator has sent a "wish list" to the responder.</p> <p>The initiator's wish list includes options for how it wants the link created, including protocol or authentication parameters. The responder processes the wish list, and if it is acceptable responds with a Configure-Ack <content-link target="{256CF550-F074-48E5-8103-B69B5027EE37}" type="glossary">message</content-link>. After receiving the Configure-Ack message, the process moves on to the authentication stage.</p> <p>If the options are not acceptable or not recognized the responder sends a Configure-Nak or Configure-Reject. If a Configure-Ack is received, the operation of the link is handed over to the NCP. If either a Configure-Nak or Configure-Reject message is sent to the requester, the link is not established. If the negotiation fails, the initiator needs to restart the process with new options.</p> <p>During link maintenance, LCP can use messages to provide feedback and test the link.</p> <p><ul><li>Code-Reject and Protocol-Reject - These frame types provide feedback when one device receives an invalid frame due to either an unrecognized LCP code (LCP frame type) or a bad protocol identifier. For example, if an un-interpretable packet is received from the peer, a Code-Reject packet is sent in response.</li><li>Echo-Request, Echo-Reply, and Discard-Request - These frames can be used for testing the link.</li></ul></p> <p>After the transfer of data at the Network layer completes, the LCP terminates the link. In the figure, notice that the NCP only terminates the Network layer and NCP link. The link remains open until the LCP terminates it. If the LCP terminates the link before the NCP, the NCP <content-link target="{C6ADF545-2A49-405F-9EBC-367F87845567}" type="glossary">session</content-link> is also terminated. </p> <p>PPP can terminate the link at any time. This might happen because of the loss of the carrier, authentication failure, link quality failure, the expiration of an idle-period timer, or the administrative closing of the link. The LCP closes the link by exchanging Terminate packets. The device initiating the shutdown sends a Terminate-Request message. The other device replies with a Terminate-Ack. A termination request indicates that the device sending it needs to close the link. When the link is closing, PPP informs the Network layer protocols so that they may take appropriate action.</p></content-text>
</page>
<page type="OneColumn" id="en1402020502">
<content-media type="StaticGraphic" id="cm6171866278">	<title><content-text></content-text></title>	<media ref="en1402000000/en1402020000/en1402020500/en1402020502/cm6171866278.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en1402000000/en1402020000/en1402020500/en1402020502/cm6171866278text.xml"/></content-media>
<content-text><p><b>LCP Packet</b></p> <p> </p> <p>The figure shows the fields in an LCP packet. </p> <p><b>Rollover each field and read the description.</b></p> <p>Each LCP packet is a single LCP message consisting of an LCP code field identifying the type of LCP packet, an identifier field so that requests and replies can be matched, and a length field indicating the size of the LCP packet and LCP packet type-specific data.</p>  <p><b>Click the LCP Codes button in the figure.</b></p> <p>Each LCP packet has a specific function in the exchange of configuration information depending on its packet type. The code field of the LCP packet identifies the packet type according to the table.</p></content-text>
</page>
<page type="OneColumn" id="en1402020503">
<content-media type="StaticGraphic" id="cm8211707662">	<title><content-text></content-text></title>	<media ref="en1402000000/en1402020000/en1402020500/en1402020503/cm8211707662.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en1402000000/en1402020000/en1402020500/en1402020503/cm8211707662text.xml"/></content-media>
<content-text><p><b>PPP Configuration Options</b></p> <p> </p> <p>PPP can be configured to support various functions including:</p> <p><ul><li>Authentication using either PAP or CHAP</li><li>Compression using either Stacker or Predictor</li><li>Multilink which combines two or more channels to increase the WAN bandwidth</li></ul></p> <p>These options are discussed in more detail in the next section.</p> <p><b>Click the LCP Option Field button in the figure.</b></p> <p>To negotiate the use of these PPP options, the LCP link-establishment frames contain Option information in the Data field of the LCP frame. If a configuration option is not included in an LCP frame, the default value for that configuration option is assumed. </p> <p>This phase is complete when a configuration acknowledgment frame has been sent and received.</p></content-text>
</page>
</topic>
<topic type="" id="en1402020600">
<title><content-text>NCP Explained</content-text></title>
<page type="OneColumn" id="en1402020601">
<content-media type="StaticGraphic" id="cm9384133837">	<title><content-text></content-text></title>	<media ref="en1402000000/en1402020000/en1402020600/en1402020601/cm9384133837.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en1402000000/en1402020000/en1402020600/en1402020601/cm9384133837text.xml"/></content-media>
<content-text><p><b>NCP Process</b></p> <p>After the link has been initiated, the LCP passes control to the appropriate NCP. Although initially designed for <content-link target="{090CF049-5D60-499A-9BA8-F3A027DF9277}" type="glossary">IP datagrams</content-link>, PPP can carry data from many types of Network layer protocols by using a modular approach in its implementation. It can also carry two or more Layer 3 protocols simultaneously. Its modular model allows the LCP to set up the link and then hand the details of a network protocol to a specific NCP. Each network protocol has a corresponding NCP. Each NCP has a corresponding RFC. There are NCPs for IP, IPX, AppleTalk, and many others. NCPs use the same packet format as the LCPs.</p> <p>After the LCP has configured and authenticated the basic link, the appropriate NCP is invoked to complete the specific configuration of the Network layer protocol being used. When the NCP has successfully configured the Network layer protocol, the network protocol is in the open state on the established LCP link. At this point, PPP can carry the corresponding Network layer protocol packets. </p> <p><b>IPCP Example</b></p> <p>As an example of how the NCP layer works, IP, which is the most common Layer 3 protocol, is used. After LCP has established the link, the routers exchange IPCP messages, negotiating options specific to the protocol. IPCP is responsible for configuring, enabling, and disabling the IP modules on both ends of the link. </p> <p>IPCP negotiates two options:</p> <p><ul><li>Compression - Allows devices to negotiate an <content-link target="{5811B475-9F2B-4629-8D35-61A4F8AA3170}" type="glossary">algorithm</content-link> to compress <content-link target="{E42D1636-1D84-4A93-BBE0-86690A95F996}" type="glossary">TCP</content-link> and IP headers and save bandwidth. Van Jacobson TCP/IP header compression reduces the size of the TCP/IP headers to as few as 3 bytes. This can be a significant improvement on slow serial lines, particularly for interactive traffic. </li><li>IP-Address - Allows the initiating device to specify an IP address to use for routing IP over the PPP link, or to request an IP address for the responder. Dialup network links commonly use the IP address option.</li></ul></p> <p>When the NCP process is complete, the link goes into the open state and LCP takes over again. Link traffic consists of any possible combination of LCP, NCP, and Network layer protocol packets. The figure shows how LCP messages can then be used by either device to manage or debug the link.</p></content-text>
</page>
<page type="FullScreen" id="en1402020602">
<content-media type="ActivityCustom" id="cm2901841945">	<title><content-text></content-text></title>	<media ref="en1402000000/en1402020000/en1402020600/en1402020602/cm2901841945.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en1402000000/en1402020000/en1402020600/en1402020602/cm2901841945text.xml"/></content-media>
<content-text><p><b>Complex Flash: Identifying PPP Concepts and Processes</b></p></content-text>
</page>
</topic>
</section>
<section type="" id="en1402030000">
<title><content-text>Configuring PPP</content-text></title>
<topic type="" id="en1402030100">
<title><content-text>PPP Configuration Options</content-text></title>
<page type="OneColumn" id="en1402030101">
<content-media type="StaticGraphic" id="cm1217003835">	<title><content-text></content-text></title>	<media ref="en1402000000/en1402030000/en1402030100/en1402030101/cm1217003835.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en1402000000/en1402030000/en1402030100/en1402030101/cm1217003835text.xml"/></content-media>
<content-text><p><b>PPP Configuration Options</b></p> <p> </p> <p>In the previous section, you were introduced to LCP options you can configure to meet specific WAN connection requirements. PPP may include the following LCP options:</p> <p><ul><li><b>Authentication</b> - Peer routers exchange authentication messages. Two authentication choices are Password Authentication Protocol (PAP) and Challenge Handshake Authentication Protocol (CHAP). Authentication is explained in the next section. </li><li><b>Compression</b> - Increases the effective <content-link target="{DC84F902-AFD2-4621-8012-2FE4CAAD976C}" type="glossary">throughput</content-link> on PPP connections by reducing the amount of data in the frame that must travel across the link. The protocol decompresses the frame at its destination. Two compression protocols available in Cisco routers are Stacker and Predictor. </li><li><b>Error detection</b> - Identifies fault conditions. The Quality and Magic Number options help ensure a reliable, loop-free data link. The Magic Number field helps in detecting links that are in a looped-back condition. Until the Magic-Number Configuration Option has been successfully negotiated, the Magic-Number must be transmitted as zero. Magic numbers are generated randomly at each end of the connection.</li><li><b>Multilink</b> - Cisco <content-link target="{468A278C-61F7-494B-957A-9BA937E56E97}" type="glossary">IOS</content-link> Release 11.1 and later supports multilink PPP. This alternative provides <content-link target="{6486955C-ABEA-42FA-8513-891B95FCF479}" type="glossary">load balancing</content-link> over the router interfaces that PPP uses. Multilink PPP (also referred to as MP, MPPP, MLP, or Multilink) provides a method for spreading traffic across multiple physical WAN links while providing packet <content-link target="{C607DA8B-9DF0-419C-9C91-3B6BBC978DC5}" type="glossary">fragmentation</content-link> and <content-link target="{66E0F8EE-E07F-4E55-ADA0-60FA9FB295E7}" type="glossary">reassembly</content-link>, proper sequencing, multivendor interoperability, and load balancing on inbound and outbound traffic. Multilink is not covered in this course.</li><li><b>PPP Callback</b> - To enhance security, Cisco IOS Release 11.1 and later offers callback over PPP. With this LCP option, a Cisco router can act as a callback client or a callback server. The client makes the initial call, requests that the server call it back, and terminates its initial call. The callback router answers the initial call and makes the return call to the client based on its configuration statements. The command is <span class="cmd"><b>ppp callback</b> [<b>accept</b> | <b>request</b>]</span>.</li></ul></p> <p>When options are configured, a corresponding field value is inserted into the LCP option field.</p></content-text>
</page>
</topic>
<topic type="" id="en1402030200">
<title><content-text>PPP Configuration Commands</content-text></title>
<page type="OneColumn" id="en1402030201">
<content-media type="StaticGraphic" id="cm1294560279">	<title><content-text></content-text></title>	<media ref="en1402000000/en1402030000/en1402030200/en1402030201/cm1294560279.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en1402000000/en1402030000/en1402030200/en1402030201/cm1294560279text.xml"/></content-media>
<content-text><p><b>PPP Configuration Commands</b></p> <p> </p> <p>Before you actually configure PPP on a serial interface, we will look at the commands and the syntax of these commands as shown in the figure. This series of examples shows you how to configure PPP and some of the options. </p> <p><b>Example 1: Enabling PPP on an Interface</b></p> <p>To set PPP as the encapsulation method used by a serial or ISDN interface, use the <span class="cmd"><b>encapsulation ppp</b></span> interface configuration command. </p> <p>The following example enables PPP encapsulation on serial interface 0/0: </p> <p><span class="cmd">R3#<b>configure terminal</b> </span></p> <p><span class="cmd">R3(config)#<b>interface serial 0/0</b> </span></p> <p><span class="cmd">R3(config-if)#<b>encapsulation ppp</b> </span></p> <p>The <span class="cmd"><b>encapsulation ppp</b></span> command has no arguments, however, you must first configure the router with an IP <content-link target="{1266F2E0-C8B0-4A7F-A079-F7D77F0AF291}" type="glossary">routing protocol</content-link> to use PPP encapsulation. You should recall that if you do not configure PPP on a Cisco router, the default encapsulation for serial interfaces is HLDC. </p> <p><b>Example 2: Compression</b></p> <p>You can configure point-to-point software compression on serial interfaces after you have enabled PPP encapsulation. Because this option invokes a software compression process, it can affect system performance. If the traffic already consists of compressed files (.zip, .tar, or .mpeg, for example), do not use this option. The figure shows the command syntax for the <span class="cmd"><b>compress</b></span> command. </p> <p>To configure compression over PPP, enter the following commands: </p> <p><span class="cmd">R3(config)#<b>interface serial 0/0</b> </span></p> <p><span class="cmd">R3(config-if)#<b>encapsulation ppp</b> </span></p> <p><span class="cmd">R3(config-if)#<b>compress</b> [<b>predictor</b> | <b>stac</b>] </span></p> <p><b>Example 3: Link Quality Monitoring</b></p> <p>Recall from our discussion on LCP phases that LCP provides an optional link quality determination phase. In this phase, LCP tests the link to determine whether the link quality is sufficient to use Layer 3 protocols. The command <span class="cmd"><b>ppp quality</b> <i>percentage</i></span> ensures that the link meets the quality requirement you set; otherwise, the link closes down.</p> <p>The percentages are calculated for both incoming and outgoing directions. The outgoing quality is calculated by comparing the total number of packets and bytes sent to the total number of packets and bytes received by the destination node. The incoming quality is calculated by comparing the total number of packets and bytes received to the total number of packets and bytes sent by the destination node. </p> <p>If the link quality percentage is not maintained, the link is deemed to be of poor quality and is taken down. Link Quality Monitoring (LQM) implements a time lag so that the link does not bounce up and down.</p> <p>This example configuration monitors the data dropped on the link and avoids frame looping:</p> <p><span class="cmd">R3(config)#<b>interface serial 0/0</b></span></p> <p><span class="cmd">R3(config-if)#<b>encapsulation ppp</b></span></p> <p><span class="cmd">R3(config-if)#<b>ppp quality 80</b></span></p> <p>Use the <span class="cmd"><b>no ppp quality</b></span> command to disable LQM.</p> <p><b>Example 4: Load Balancing Across Links</b></p> <p>Multilink PPP (also referred to as MP, MPPP, MLP, or Multilink) provides a method for spreading traffic across multiple physical WAN links while providing packet fragmentation and reassembly, proper sequencing, multivendor interoperability, and load balancing on inbound and outbound traffic. </p> <p>MPPP allows packets to be fragmented and sends these fragments simultaneously over multiple point-to-point links to the same remote address. The multiple physical links come up in response to a user-defined load threshold. MPPP can measure the load on just inbound traffic, or on just outbound traffic, but not on the combined load of both inbound and outbound traffic.</p> <p>The following commands perform load balancing across multiple links:</p> <p><span class="cmd">Router(config)#<b>interface serial 0/0</b> </span></p> <p><span class="cmd">Router(config-if)#<b>encapsulation ppp</b> </span></p> <p><span class="cmd">Router(config-if)#<b>ppp multilink</b></span></p> <p>The <span class="cmd"><b>multilink</b></span> command has no arguments. To disable PPP multilink, use the <span class="cmd"><b>no ppp multilink</b></span> command. </p></content-text>
</page>
</topic>
<topic type="" id="en1402030300">
<title><content-text>Verifying a Serial PPP Encapsulation Configuration</content-text></title>
<page type="OneColumn" id="en1402030301">
<content-media type="StaticGraphic" id="cm1155221605">	<title><content-text></content-text></title>	<media ref="en1402000000/en1402030000/en1402030300/en1402030301/cm1155221605.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en1402000000/en1402030000/en1402030300/en1402030301/cm1155221605text.xml"/></content-media>
<content-text><p><b>Verifying PPP Encapsulation Configuration</b></p> <p> </p> <p>Use the <span class="cmd"><b>show interfaces serial</b></span> command to verify proper configuration of HDLC or PPP encapsulation. The command output in the figure shows a PPP configuration. </p> <p>When you configure HDLC, the output of the <span class="cmd"><b>show interfaces serial</b></span> command should show "encapsulation HDLC". When you configure PPP, you can check its LCP and NCP states. </p> <p><b>Click the Commands button in the figure.</b></p> <p>The figure summarizes commands used when verifying PPP. </p></content-text>
</page>
</topic>
<topic type="" id="en1402030400">
<title><content-text>Troubleshooting PPP Encapsulation</content-text></title>
<page type="OneColumn" id="en1402030401">
<content-media type="StaticGraphic" id="cm7806545332">	<title><content-text></content-text></title>	<media ref="en1402000000/en1402030000/en1402030400/en1402030401/cm7806545332.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en1402000000/en1402030000/en1402030400/en1402030401/cm7806545332text.xml"/></content-media>
<content-text><p><b>Troubleshooting the Serial Encapsulation Configuration</b></p> <p> </p> <p>By now you are aware that <span class="cmd"><b>debug</b></span> command is used for troubleshooting and is accessed from privileged <content-link target="{A7FAF74F-3D5A-4E16-91A8-7A340D79B558}" type="glossary">exec</content-link> mode of the command line interface. Debug displays information about various router operations and the related traffic generated or received by the router, as well as any error messages. It is a very useful and informative tool, but you must always remember that Cisco IOS treats debug as a high priority task. It can consume a significant amount of resources, and the router is forced to process-switch the packets being debugged. Debug must not be used as a monitoring tool-it is meant to be used for a short period of time for troubleshooting. When troubleshooting a serial connection, you use the same approach as you have used in other configuration tasks.</p> <p>Use the <span class="cmd"><b>debug ppp</b></span> command to display information about the operation of PPP. The figure shows the command syntax. The <span class="cmd"><b>no</b></span> form of this command disables debugging output. </p></content-text>
</page>
<page type="OneColumn" id="en1402030402">
<content-media type="StaticGraphic" id="cm1467192467">	<title><content-text></content-text></title>	<media ref="en1402000000/en1402030000/en1402030400/en1402030402/cm1467192467.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en1402000000/en1402030000/en1402030400/en1402030402/cm1467192467text.xml"/></content-media>
<content-text><p><b>Output of the </b><span class="cmd"><b>debug ppp packet</b></span><b> Command</b></p> <p> </p> <p>A good command to use when troubleshooting serial interface encapsulation is the <span class="cmd"><b>debug ppp packet</b></span> command. The example in the figure is output from the <span class="cmd"><b>debug ppp packet</b></span> command as seen from the Link Quality Monitor (LQM) side of the connection. This display example depicts packet exchanges under normal PPP operation. This is only a partial listing, but enough to get you ready for the practice lab. </p> <p>Look at each line in the output and match it to the meaning of the field. Use the following to guide your examination of the output.</p> <p><ul><li>PPP - PPP debugging output. </li><li>Serial2 - Interface number associated with this debugging information. </li><li>(o), O - The detected packet is an output packet. </li><li>(i), I - The detected packet is an input packet. </li><li>lcp_slqr() - Procedure name; running LQM, send a Link Quality Report (LQR). </li><li>lcp_rlqr() - Procedure name; running LQM, received an LQR. </li><li>input (C021) - Router received a packet of the specified packet type (in <content-link target="{65FDCD2C-4FE9-4ABE-93B9-4C5649541C14}" type="glossary">hexadecimal</content-link>). A value of C025 indicates packet of type LQM. </li><li>state = OPEN - PPP state; normal state is OPEN. </li><li>magic = D21B4 - Magic Number for indicated node; when output is indicated, this is the Magic Number of the node on which debugging is enabled. The actual Magic Number depends on whether the packet detected is indicated as I or O. </li><li>datagramsize = 52 - Packet length including header. </li><li>code = ECHOREQ(9) - Identifies the type of packet received in both string and hexadecimal form. </li><li>len = 48 - Packet length without header. </li><li>id = 3 - ID number per Link Control Protocol (LCP) packet format. </li><li>pkt type 0xC025 - Packet type in hexadecimal; typical packet types are C025 for LQM and C021 for LCP. </li><li>LCP ECHOREQ (9) - Echo Request; value in parentheses is the hexadecimal representation of the LCP type. </li><li>LCP ECHOREP (A) - Echo Reply; value in parentheses is the hexadecimal representation of the LCP type. </li></ul></p></content-text>
</page>
<page type="OneColumn" id="en1402030403">
<content-media type="StaticGraphic" id="cm3812719146">	<title><content-text></content-text></title>	<media ref="en1402000000/en1402030000/en1402030400/en1402030403/cm3812719146.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en1402000000/en1402030000/en1402030400/en1402030403/cm3812719146text.xml"/></content-media>
<content-text><p><b>Output of the </b><span class="cmd"><b>debug ppp negotiation</b></span><b> Command</b></p> <p> </p> <p>The figure shows the output of the <span class="cmd"><b>debug ppp negotiation</b></span> command in a normal negotiation, where both sides agree on <content-link target="{3B3653DE-2390-4B92-99F3-BE4E174F33B1}" type="glossary">network control program</content-link> (NCP) parameters. In this case, protocol type IP is proposed and acknowledged. Taking the output a line or two at a time:</p> <p>The first two lines indicate that the router is trying to bring up the LCP and will use the indicated negotiation options (Quality Protocol and Magic Number). The value fields are the values of the options themselves. C025/3E8 translates to Quality Protocol LQM. 3E8 is the reporting period (in hundredths of a second). 3D56CAC is the value of the Magic Number for the router. </p> <p><span class="cmd">ppp: sending CONFREQ, type = 4 (CI_QUALITYTYPE), value = C025/3E8</span></p> <p><span class="cmd">ppp: sending CONFREQ, type = 5 (CI_MAGICNUMBER), value = 3D56CAC</span></p> <p>The next two lines indicate that the other side negotiated for options 4 and 5 and that it requested and acknowledged both. If the responding end does not support the options, the responding node sends a CONFREJ. If the responding end does not accept the value of the option, it sends a CONFNAK with the value field modified. </p> <p><span class="cmd">ppp: received config for type = 4 (QUALITYTYPE) acked</span></p> <p><span class="cmd">ppp: received config for type = 5 (MAGICNUMBER) value = 3D567F8 acked (ok)</span></p> <p>The next three lines indicate that the router received a CONFACK from the responding side and displays accepted option values. Use the rcvd id field to verify that the CONFREQ and CONFACK have the same id field. </p> <p><span class="cmd">PPP Serial4: state = ACKSENT fsm_rconfack(C021): rcvd id 5</span></p> <p><span class="cmd">ppp: config ACK received, type = 4 (CI_QUALITYTYPE), value = C025</span></p> <p><span class="cmd">ppp: config ACK received, type = 5 (CI_MAGICNUMBER), value = 3D56CAC</span></p> <p>The next line indicates that the router has IP routing enabled on this interface and that the IPCP NCP negotiated successfully.</p> <span class="cmd"><p>ppp: ipcp_reqci: returning CONFACK</p></span> <span class="cmd"><p>(ok)</p></span></content-text>
</page>
<page type="OneColumn" id="en1402030404">
<content-media type="StaticGraphic" id="cm9142766122">	<title><content-text></content-text></title>	<media ref="en1402000000/en1402030000/en1402030400/en1402030404/cm9142766122.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en1402000000/en1402030000/en1402030400/en1402030404/cm9142766122text.xml"/></content-media>
<content-text><p><b>Output of the </b><span class="cmd"><b>debug ppp error</b></span><b> Command</b></p> <p> </p> <p>You can use the <span class="cmd"><b>debug ppp error</b></span> command to display protocol errors and error statistics associated with PPP connection negotiation and operation. These messages might appear when the Quality Protocol option is enabled on an interface that is already running PPP. The figure shows an example.</p> <p>Look at each line in the output and match it to the meaning of the field. Use the following to guide your examination of the utput.</p> <p><ul><li>PPP<b> - </b>PPP debugging output. </li><li>Serial3(i)<b> - </b>Interface number associated with this debugging information; indicates that this is an input packet. </li><li>rlqr receive failure<b> - </b>Receiver does not accept the request to negotiate the Quality Protocol option. </li><li>myrcvdiffp = 159<b> - </b>Number of packets received over the time period specified. </li><li>peerxmitdiffp = 41091<b> - </b>Number of packets sent by the remote node over this period. </li><li>myrcvdiffo = 2183<b> - </b>Number of <content-link target="{DA3063BD-7918-4C3C-8B26-ADA718AD1F8B}" type="glossary">octets</content-link> received over this period. </li><li>peerxmitdiffo = 1714439<b> - </b>Number of octets sent by the remote node over this period. </li><li>threshold = 25<b> - </b>Maximum error percentage acceptable on this interface. You calculate this percentage using the threshold value entered in the <span class="cmd"><b>ppp quality </b><i>percentage</i></span> interface configuration command. A value of 100 minus number is the maximum error percentage. In this case, a number of 75 was entered. This means that the local router must maintain a minimum 75 percent non-error percentage, or the PPP link closes down. </li><li>OutLQRs = 1<b> - </b>Current send LQR sequence number of the local router. </li><li>LastOutLQRs = 1<b> - </b>Last sequence number that the remote node side has seen from the local node. </li></ul></p></content-text>
</page>
<page type="OneColumn" id="en1402030405">
<content-media type="ActivityPKA" id="cm1436808920">	<title><content-text></content-text></title>	<media ref="en1402000000/en1402030000/en1402030400/en1402030405/cm1436808920/" mime="application/packettracer" scale="true" type="directory" width="0" height="0" external="en1402000000/en1402030000/en1402030400/en1402030405/cm1436808920/icontext.xml"/></content-media>
<content-text><p>In this activity, you will practice changing the encapsulation on serial interfaces. Detailed instructions are provided within the activity as well as in the PDF link below.</p> <p><content-link target="E4_PTAct_2_3_4.pdf" type="internalfile">Activity Instructions (PDF)</content-link></p></content-text>
</page>
</topic>
</section>
<section type="" id="en1402040000">
<title><content-text>Configuring PPP with Authentication</content-text></title>
<topic type="" id="en1402040100">
<title><content-text>PPP Authentication Protocols</content-text></title>
<page type="OneColumn" id="en1402040101">
<content-media type="StaticGraphic" id="cm3319742818">	<title><content-text></content-text></title>	<media ref="en1402000000/en1402040000/en1402040100/en1402040101/cm3319742818.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en1402000000/en1402040000/en1402040100/en1402040101/cm3319742818text.xml"/></content-media>
<content-text><p><b>PAP Authentication Protocol</b></p> <p> </p> <p>PPP defines an extensible LCP that allows negotiation of an authentication protocol for authenticating its peer before allowing Network layer protocols to transmit over the link. <content-link target="{93603A68-0EA7-4F5D-95CB-1492EF70676B}" type="glossary">RFC</content-link> 1334 defines two protocols for authentication, as shown in the figure. </p> <p>PAP is a very basic two-way process. There is no encryption-the username and password are sent in plain text. If it is accepted, the connection is allowed. CHAP is more secure than PAP. It involves a three-way exchange of a shared secret. The process is described later in this section. </p> <p>The authentication phase of a PPP session is optional. If used, you can authenticate the peer after the LCP establishes the link and choose the authentication protocol. If it is used, authentication takes place before the Network layer protocol configuration phase begins. </p> <p>The authentication options require that the calling side of the link enter authentication information. This helps to ensure that the user has the permission of the network administrator to make the call. Peer routers exchange authentication messages. </p></content-text>
</page>
</topic>
<topic type="" id="en1402040200">
<title><content-text>Password Authentication Protocol (PAP)</content-text></title>
<page type="OneColumn" id="en1402040201">
<content-media type="InteractiveGraphicHotspots" id="cm1574771413">	<title><content-text></content-text></title>	<media ref="en1402000000/en1402040000/en1402040200/en1402040201/cm1574771413.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en1402000000/en1402040000/en1402040200/en1402040201/cm1574771413text.xml"/></content-media>
<content-text><p>One of the many features of PPP is that it performs Layer 2 authentication in addition to other layers of authentication, encryption, access control, and general security procedures.</p> <p><b>Initiating PAP</b></p> <p>PAP provides a simple method for a remote node to establish its identity using a two-way handshake. PAP is not interactive. When the <span class="cmd"><b>ppp authentication pap</b></span> command is used, the username and password are sent as one LCP data package, rather than the server sending a login prompt and waiting for a response. The figure shows that after PPP completes the link establishment phase, the remote node repeatedly sends a username-password pair across the link until the sending node acknowledges it or terminates the connection.</p> <p><b>Click the PAP Completion button in the figure.</b></p> <p>At the receiving node, the username-password is checked by an authentication server that either allows or denies the connection. An accept or reject message is returned to the requester.</p> <p>PAP is not a strong authentication protocol. Using PAP, you send passwords across the link in clear text and there is no protection from playback or repeated trial-and-error attacks. The remote node is in control of the frequency and timing of the login attempts.</p> <p>Nonetheless, there are times when using PAP can be justified. For example, despite its shortcomings, PAP may be used in the following environments:</p> <p><ul><li>A large installed base of client applications that do not support CHAP</li><li>Incompatibilities between different vendor implementations of CHAP</li><li>Situations where a plaintext password must be available to simulate a login at the remote host</li></ul></p></content-text>
</page>
</topic>
<topic type="" id="en1402040300">
<title><content-text>Challenge Handshake Authentication Protocol (CHAP)</content-text></title>
<page type="OneColumn" id="en1402040301">
<content-media type="InteractiveGraphicHotspots" id="cm7024760921">	<title><content-text></content-text></title>	<media ref="en1402000000/en1402040000/en1402040300/en1402040301/cm7024760921.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en1402000000/en1402040000/en1402040300/en1402040301/cm7024760921text.xml"/></content-media>
<content-text><p><b>Challenge Handshake Authentication Protocol (CHAP)</b></p> <p> </p> <p>Once authentication is established with PAP, it essentially stops working. This leaves the network vulnerable to attack. Unlike PAP, which only authenticates once, CHAP conducts periodic challenges to make sure that the remote node still has a valid password value. The password value is variable and changes unpredictably while the link exists.</p> <p>After the PPP link establishment phase is complete, the local router sends a challenge message to the remote node. </p> <p><b>Click the Responding CHAP button in the figure.</b></p> <p>The remote node responds with a value calculated using a one-way hash function, which is typically <content-link target="{B425EB0B-7841-4AFE-BB08-601D514C218F}" type="glossary">Message Digest 5</content-link> (<content-link target="{0525C058-FD1E-4372-9E02-5E084A6F8A47}" type="glossary">MD5</content-link>) based on the password and challenge message. </p> <p><b>Click the Completing CHAP button in the figure.</b></p> <p>The local router checks the response against its own calculation of the expected hash value. If the values match, the initiating node acknowledges the authentication. Otherwise, it immediately terminates the connection.</p> <p>CHAP provides protection against playback attack by using a variable challenge value that is unique and unpredictable. Because the challenge is unique and random, the resulting hash value is also unique and random. The use of repeated challenges limits the time of exposure to any single attack. The local router or a third-party authentication server is in control of the frequency and timing of the challenges.</p></content-text>
</page>
</topic>
<topic type="" id="en1402040400">
<title><content-text>PPP Encapsulation and Authentication Process</content-text></title>
<page type="OneColumn" id="en1402040401">
<content-media type="StaticGraphic" id="cm4246226456">	<title><content-text></content-text></title>	<media ref="en1402000000/en1402040000/en1402040400/en1402040401/cm4246226456.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en1402000000/en1402040000/en1402040400/en1402040401/cm4246226456text.xml"/></content-media>
<content-text><p><b>PPP Encapsulation and Authentication Process</b></p> <p>You can use a flowchart to help understand the PPP authentication process when configuring PPP. The flowchart provides a visual example of the logic decisions made by PPP. </p> <p>For example, if an incoming PPP request requires no authentication, then PPP progresses to the next level. If an incoming PPP request requires authentication, then it can be authenticated using either the local database or a security server. As illustrated in the flowchart, successful authentication progresses to the next level, while an authentication failure will disconnect and drop the incoming PPP request.</p> <p><b>Click the CHAP Example button and click the play button </b>for an animated example.</p> <p>Follow the steps as the animation progresses. Router R1 wishes to establish an authenticated PPP CHAP connection with Router R2.</p> <p><b>Step 1.</b> R1 initially negotiates the link connection using LCP with router R2 and the two systems agree to use CHAP authentication during the PPP LCP negotiation. </p> <p><b>Step 2.</b> Router R2 generates an ID and a random number and sends that plus its username as a CHAP challenge packet to R1. </p> <p><b>Step 3.</b> R1 will use the username of the challenger (R2) and cross reference it with its local database to find its associated password. R1 will then generate a unique MD5 hash number using the R2's username, ID, random number and the shared secret password. </p> <p><b>Step 4.</b> Router R1 then sends the challenge ID, the hashed value, and its username (R1) to R2.</p> <p><b>Step 5.</b> R2 generates it own hash value using the ID, the shared secret password, and the random number it originally sent to R1. </p> <p><b>Step 6.</b> R2 compares its hash value with the hash value sent by R1. If the values are the same, R2 sends a link established response to R1.</p> <p>If the authentication failed, a CHAP failure packet is built from the following components:</p> <p><ul><li>04 = CHAP failure message type</li><li>id = copied from the response packet</li><li>"Authentication failure" or some such text message, which is meant to be a user-readable explanation</li></ul></p> <p>Note that the shared secret password must be identical on R1 and R2.</p> <p> </p></content-text>
</page>
</topic>
<topic type="" id="en1402040500">
<title><content-text>Configuring PPP with Authentication</content-text></title>
<page type="OneColumn" id="en1402040501">
<content-media type="StaticGraphic" id="cm1489521075">	<title><content-text></content-text></title>	<media ref="en1402000000/en1402040000/en1402040500/en1402040501/cm1489521075.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en1402000000/en1402040000/en1402040500/en1402040501/cm1489521075text.xml"/></content-media>
<content-text><p><b>The </b><span class="cmd"><b>ppp authentication</b></span><b> Command</b></p> <p> </p> <p>To specify the order in which the CHAP or PAP protocols are requested on the interface, use the <span class="cmd"><b>ppp authentication</b></span> interface configuration command, as shown in the figure. Use the <span class="cmd"><b>no</b></span> form of the command to disable this authentication. </p> <p>After you have enabled CHAP or PAP authentication, or both, the local router requires the remote device to prove its identity before allowing data traffic to flow. This is done as follows:</p> <p><ul><li>PAP authentication requires the remote device to send a name and password to be checked against a matching entry in the local username database or in the remote <content-link target="{5AA06912-471A-453C-934A-3E5B4E13F4FF}" type="glossary">TACACS</content-link>/<content-link target="{9F0773FC-830F-462E-BB21-31E546472956}" type="glossary">TACACS+</content-link> database. </li><li>CHAP authentication sends a challenge to the remote device. The remote device must encrypt the challenge value with a shared secret and return the encrypted value and its name to the local router in a response message. The local router uses the name of the remote device to look up the appropriate secret in the local username or remote TACACS/TACACS+ database. It uses the looked-up secret to encrypt the original challenge and verify that the encrypted values match.</li></ul></p> <p><b>Note:</b> AAA/TACACS is a dedicated server used to authenticate users. AAA stands for "authentication, authorization and accounting". TACACS clients send a query to a TACACS authentication server. The server can authenticate the user, authorize what the user can do and track what the user has done.</p> <p>You may enable PAP or CHAP or both. If both methods are enabled, the first method specified is requested during link negotiation. If the peer suggests using the second method or simply refuses the first method, the second method is tried. Some remote devices support CHAP only and some PAP only. The order in which you specify the methods is based on your concerns about the ability of the remote device to correctly negotiate the appropriate method as well as your concern about data line security. PAP usernames and passwords are sent as clear-text strings and can be intercepted and reused. CHAP has eliminated most of the known security holes. </p></content-text>
</page>
<page type="OneColumn" id="en1402040502">
<content-media type="InteractiveGraphicHotspots" id="cm5015788953">	<title><content-text></content-text></title>	<media ref="en1402000000/en1402040000/en1402040500/en1402040502/cm5015788953.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en1402000000/en1402040000/en1402040500/en1402040502/cm5015788953text.xml"/></content-media>
<content-text><p><b>Configuring PPP Authentication</b></p> <p> </p> <p>The procedure outlined in the table describes how to configure PPP encapsulation and PAP/CHAP authentication protocols. Correct configuration is essential, because PAP and CHAP use these parameters to authenticate. </p> <p><b>Click the PAP Example button in the figure.</b></p> <p>The figure is an example of a two-way PAP authentication configuration. Both routers authenticate and are authenticated, so the PAP authentication commands mirror each other. The PAP username and password that each router sends must match those specified with the <span class="cmd"><b>username </b><i>name</i><b> password </b><i>password</i></span> command of the other router.</p> <p>PAP provides a simple method for a remote node to establish its identity using a two-way handshake. This is done only on initial link establishment. The hostname on one router must match the username the other router has configured. The passwords must also match. </p> <p><b>Click the CHAP Example button in the figure.</b></p> <p>CHAP periodically verifies the identity of the remote node using a three-way handshake. The hostname on one router must match the username the other router has configured. The passwords must also match. This occurs on initial link establishment and can be repeated any time after the link has been established. The figure is an example of a CHAP configuration.</p></content-text>
</page>
</topic>
<topic type="" id="en1402040600">
<title><content-text>Troubleshooting a PPP Configuration with Authentication</content-text></title>
<page type="OneColumn" id="en1402040601">
<content-media type="StaticGraphic" id="cm4473338048">	<title><content-text></content-text></title>	<media ref="en1402000000/en1402040000/en1402040600/en1402040601/cm4473338048.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en1402000000/en1402040000/en1402040600/en1402040601/cm4473338048text.xml"/></content-media>
<content-text><p><b>Troubleshooting a PPP Configuration with Authentication</b></p> <p> </p> <p>Authentication is a feature that needs to be implemented correctly or the security of your serial connection may be compromised. Always verify your configuration with the <span class="cmd"><b>show interfaces serial</b></span> command, in the same way as you did without authentication.</p> <p>Never assume your authentication configuration works without testing it. Debugging allows you to confirm your configuration and correct any deficiencies. The command for debugging PPP authentication is <span class="cmd"><b>debug ppp authentication</b></span>.</p> <p>The figure shows an example output of the <span class="cmd"><b>debug ppp authentication</b></span> command. The following is an interpretation of the output:</p> <p>Line 1 says that the router is unable to authenticate on interface Serial0 because the peer did not send a name.</p> <p>Line 2 says the router was unable to validate the CHAP response because USERNAME 'pioneer' was not found. </p> <p>Line 3 says no password was found for 'pioneer'. Other possible responses at this line might have been no name received to authenticate, unknown name, no secret for given name, short MD5 response received, or MD5 compare failed. </p> <p>In the last line, the code = 4 means a failure has occurred. Other code values are as follows:</p> <p><ul><li>1 = Challenge </li><li>2 = Response </li><li>3 = Success </li><li>4 = Failure</li></ul></p> <p>id = 3 is the ID number per LCP packet format. </p> <p>len = 48 is the packet length without the header.</p></content-text>
</page>
<page type="OneColumn" id="en1402040602">
<content-media type="ActivityPKA" id="cm8140473355">	<title><content-text></content-text></title>	<media ref="en1402000000/en1402040000/en1402040600/en1402040602/cm8140473355/" mime="application/packettracer" scale="true" type="directory" width="0" height="0" external="en1402000000/en1402040000/en1402040600/en1402040602/cm8140473355/icontext.xml"/></content-media>
<content-text><p>PPP encapsulation allows for two different types of authentication: PAP (Password Authentication Protocol) and CHAP (Challenge Handshake Authentication Protocol). PAP uses a clear-text password, while CHAP invokes a one-way hash that provides more security than PAP. In this activity, you will configure both PAP and CHAP as well as review OSPF routing configuration. Detailed instructions are provided within the activity as well as in the PDF link below.</p> <p><content-link target="E4_PTAct_2_4_6.pdf" type="internalfile">Activity Instructions (PDF)</content-link></p></content-text>
</page>
</topic>
</section>
<section type="" id="en1402050000">
<title><content-text>Chapter Labs</content-text></title>
<topic type="" id="en1402050100">
<title><content-text>Basic PPP Configuration</content-text></title>
<page type="OneColumn" id="en1402050101">
<content-media type="ActivityLab" id="cm7537016739">	<title><content-text></content-text></title>	<media ref="en1402000000/en1402050000/en1402050100/en1402050101/cm7537016739/" mime="application/pdf" scale="true" type="directory" width="0" height="0" external="en1402000000/en1402050000/en1402050100/en1402050101/cm7537016739/icontext.xml"/></content-media>
<content-text><p>In this lab, you will learn how to configure PPP encapsulation on serial links using the network shown in the topology diagram. You will also learn how to restore serial links to their default HDLC encapsulation. Pay special attention to what the output of the router looks like when you intentionally break PPP encapsulation. This will assist you in the Troubleshooting lab associated with this chapter. Finally, you will configure PPP PAP authentication and PPP CHAP authentication. </p></content-text>
</page>
<page type="OneColumn" id="en1402050102">
<content-media type="ActivityPKA" id="cm3049384449">	<title><content-text></content-text></title>	<media ref="en1402000000/en1402050000/en1402050100/en1402050102/cm3049384449/" mime="application/packettracer" scale="true" type="directory" width="0" height="0" external="en1402000000/en1402050000/en1402050100/en1402050102/cm3049384449/icontext.xml"/></content-media>
<content-text><p>This activity is a variation of Lab 2.5.1. Packet Tracer may not support all the tasks specified in the hands-on lab. This activity should not be considered equivalent to completing the hands-on lab. Packet Tracer is not a substitute for a hands-on lab experience with real equipment.</p> <p>Detailed instructions are provided within the activity as well as in the PDF link below.</p> <p><content-link target="E4_PTAct_2_5_1.pdf" type="internalfile">Activity Instructions (PDF)</content-link></p> <p><b>Click the Packet Tracer icon for more details.</b></p></content-text>
</page>
</topic>
<topic type="" id="en1402050200">
<title><content-text>Challenge PPP Configuration</content-text></title>
<page type="OneColumn" id="en1402050201">
<content-media type="ActivityLab" id="cm9321074059">	<title><content-text></content-text></title>	<media ref="en1402000000/en1402050000/en1402050200/en1402050201/cm9321074059/" mime="application/pdf" scale="true" type="directory" width="0" height="0" external="en1402000000/en1402050000/en1402050200/en1402050201/cm9321074059/icontext.xml"/></content-media>
<content-text><p>In this lab, you will learn how to configure PPP encapsulation on serial links using the network shown in the topology diagram. You will also configure PPP CHAP authentication. If you need assistance, refer back to the Basic PPP Configuration lab, but try to do as much on your own as possible. </p></content-text>
</page>
<page type="OneColumn" id="en1402050202">
<content-media type="ActivityPKA" id="cm8783953096">	<title><content-text></content-text></title>	<media ref="en1402000000/en1402050000/en1402050200/en1402050202/cm8783953096/" mime="application/packettracer" scale="true" type="directory" width="0" height="0" external="en1402000000/en1402050000/en1402050200/en1402050202/cm8783953096/icontext.xml"/></content-media>
<content-text><p>This activity is a variation of Lab 2.5.2. Packet Tracer may not support all the tasks specified in the hands-on lab. This activity should not be considered equivalent to completing the hands-on lab. Packet Tracer is not a substitute for a hands-on lab experience with real equipment.</p> <p>Detailed instructions are provided within the activity as well as in the PDF link below.</p> <p><content-link target="E4_PTAct_2_5_2.pdf" type="internalfile">Activity Instructions (PDF)</content-link></p> <p><b>Click the Packet Tracer icon for more details.</b></p></content-text>
</page>
</topic>
<topic type="" id="en1402050300">
<title><content-text>Troubleshooting PPP Configuration</content-text></title>
<page type="OneColumn" id="en1402050301">
<content-media type="ActivityLab" id="cm5971226497">	<title><content-text></content-text></title>	<media ref="en1402000000/en1402050000/en1402050300/en1402050301/cm5971226497/" mime="application/pdf" scale="true" type="directory" width="0" height="0" external="en1402000000/en1402050000/en1402050300/en1402050301/cm5971226497/icontext.xml"/></content-media>
<content-text><p>The routers at your company were configured by an inexperienced network engineer. Several errors in the configuration have resulted in connectivity issues. Your boss has asked you to troubleshoot and correct the configuration errors and document your work. Using your knowledge of PPP and standard testing methods, find and correct the errors. Make sure that all of the serial links use PPP CHAP authentication, and that all of the networks are reachable.</p></content-text>
</page>
<page type="OneColumn" id="en1402050302">
<content-media type="ActivityPKA" id="cm3350883555">	<title><content-text></content-text></title>	<media ref="en1402000000/en1402050000/en1402050300/en1402050302/cm3350883555/" mime="application/packettracer" scale="true" type="directory" width="0" height="0" external="en1402000000/en1402050000/en1402050300/en1402050302/cm3350883555/icontext.xml"/></content-media>
<content-text><p>This activity is a variation of Lab 2.5.3. Packet Tracer may not support all the tasks specified in the hands-on lab. This activity should not be considered equivalent to completing the hands-on lab. Packet Tracer is not a substitute for a hands-on lab experience with real equipment.</p> <p>Detailed instructions are provided within the activity as well as in the PDF link below.</p> <p><content-link target="E4_PTAct_2_5_3.pdf" type="internalfile">Activity Instructions (PDF)</content-link></p> <p><b>Click the Packet Tracer icon for more details.</b></p></content-text>
</page>
</topic>
</section>
<section type="ChapterSummary" id="en1402060000">
<title><content-text>Chapter Summary</content-text></title>
<topic type="" id="en1402060100">
<title><content-text>Chapter Summary</content-text></title>
<page type="OneColumn" id="en1402060101">
<content-media type="ChapterSummary" id="cm7070076963">	<title><content-text></content-text></title>	<media ref="en1402000000/en1402060000/en1402060100/en1402060101/cm7070076963.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en1402000000/en1402060000/en1402060100/en1402060101/cm7070076963text.xml"/></content-media>
<content-text><p>On completing this chapter you can describe in conceptual and practical terms why serial point-to-point communications are used to connect your LAN to your service provider WAN, rather than using parallel connections that might intuitively seem faster. You can explain how multiplexing allows efficient communications and maximize the amount of data that can be passed over a communications link. You learned the functions of key components and protocols of serial communications, and can configure a serial interface with HDLC encapsulation on a Cisco router.</p>  <p>This provided a good basis for comprehending PPP including its features, components and architectures. You can explain how a PPP session is established using the functions of the LCP and NCPs. You learned the syntax of the configuration commands and use of various options required to configure a PPP connection, as well as how to use PAP or CHAP to ensure a secure connection. The steps required for verification and troubleshooting were described. You are now ready to confirm your knowledge in the lab where you will configure your router to use PPP to connect to a WAN.</p></content-text>
</page>
<page type="FullScreen" id="en1402060102">
<content-media type="StaticGraphic" id="cm8931875725">	<title><content-text></content-text></title>	<media ref="en1402000000/en1402060000/en1402060100/en1402060102/cm8931875725.swf" mime="shockwave/flash" scale="true" type="file" width="400" height="200" external="en1402000000/en1402060000/en1402060100/en1402060102/cm8931875725text.xml"/></content-media>
<content-text></content-text>
</page>
<page type="OneColumn" id="en1402060103">
<content-media type="ActivityPKA" id="cm4576182195">	<title><content-text></content-text></title>	<media ref="en1402000000/en1402060000/en1402060100/en1402060103/cm4576182195/" mime="application/packettracer" scale="true" type="directory" width="0" height="0" external="en1402000000/en1402060000/en1402060100/en1402060103/cm4576182195/icontext.xml"/></content-media>
<content-text><p>In this activity, you will design an addressing scheme, configure routing and VLANs, and configure PPP with CHAP. Detailed instructions are provided within the activity as well as in the PDF link below.</p> <p><content-link target="E4_PTAct_2_6_1.pdf" type="internalfile">Activity Instructions (PDF)</content-link></p> <p><b>Click the Packet Tracer icon for more details.</b></p></content-text>
</page>
</topic>
</section>
<section type="ChapterQuiz" id="en1402070000">
<title><content-text>Chapter Quiz</content-text></title>
<topic type="" id="en1402070100">
<title><content-text>Chapter Quiz</content-text></title>
<page type="FullScreen" id="en1402070101">
<content-media type="ChapterQuiz" id="cm4648493454">	<title><content-text></content-text></title>	<media ref="en1402000000/en1402070000/en1402070100/en1402070101/cm4648493454/" mime="" scale="true" type="directory" width="100%" height="100%" external="en1402000000/en1402070000/en1402070100/en1402070101/cm4648493454/icontext.xml"/></content-media>
<content-text><p><b>Chapter Quiz</b></p></content-text>
</page>
</topic>
</section>
</chapter>
